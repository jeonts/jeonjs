{"version":3,"file":"index-3YTKA7Io.js","sources":["../../node_modules/.pnpm/woby@1.58.39/node_modules/woby/dist/fragment-BdrG6unk.js","../../node_modules/.pnpm/woby@1.58.39/node_modules/woby/dist/wrap_clone_element-cGq665B_.js","../../node_modules/.pnpm/woby@1.58.39/node_modules/woby/dist/setters-D4dgVjKR.js","../../node_modules/.pnpm/woby@1.58.39/node_modules/woby/dist/create_element-WjH6kFsa.js","../../node_modules/.pnpm/woby@1.58.39/node_modules/woby/dist/root-BYeYk3r_.js","../../node_modules/.pnpm/woby@1.58.39/node_modules/woby/dist/htm.module-DsFqqNjU.js","../../node_modules/.pnpm/woby@1.58.39/node_modules/woby/dist/render_to_string-DpyNsaVb.js","../../node_modules/.pnpm/woby@1.58.39/node_modules/woby/dist/index.es.js","../../src/jeon2js.visitors/stringVisitor.ts","../../src/jeon2js.visitors/primitiveVisitor.ts","../../src/jeon2js.visitors/arrayVisitor.ts","../../src/jeon2js.visitors/functionDeclarationVisitor.ts","../../src/jeon2js.visitors/variableDeclarationVisitor.ts","../../src/jeon2js.visitors/arrowFunctionVisitor.ts","../../src/jeon2js.visitors/jsxVisitor.ts","../../src/jeon2js.visitors/classVisitor.ts","../../src/jeon2js.visitors/utils.ts","../../src/jeon2js.visitors/tryCatchVisitor.ts","../../src/jeon2js.visitors/operatorVisitor.ts","../../src/jeon2js.visitors/functionCallVisitor.ts","../../src/jeon2js.visitors/objectVisitor.ts","../../src/jeon2js.visitors/propertyAccessVisitor.ts","../../src/jeon2js.visitors/sequencingVisitor.ts","../../src/jeon2js.visitors/switchVisitor.ts","../../src/jeon2js.visitors/visitorRegistry.ts","../../src/jeon2js.ts","../../node_modules/.pnpm/acorn@8.15.0/node_modules/acorn/dist/acorn.mjs","../../node_modules/.pnpm/acorn-jsx@5.3.2_acorn@8.15.0/node_modules/acorn-jsx/xhtml.js","../../node_modules/.pnpm/acorn@8.15.0/node_modules/acorn/dist/acorn.js","../../node_modules/.pnpm/acorn-jsx@5.3.2_acorn@8.15.0/node_modules/acorn-jsx/index.js","../../src/js2jeon.visitors/binaryExpression.ts","../../src/js2jeon.visitors/unaryExpression.ts","../../src/js2jeon.visitors/program.ts","../../src/js2jeon.visitors/identifier.ts","../../src/js2jeon.visitors/literal.ts","../../src/js2jeon.visitors/logicalExpression.ts","../../src/js2jeon.visitors/conditionalExpression.ts","../../src/js2jeon.visitors/callExpression.ts","../../src/js2jeon.visitors/memberExpression.ts","../../src/js2jeon.visitors/arrayExpression.ts","../../src/js2jeon.visitors/objectExpression.ts","../../src/js2jeon.visitors/spreadElement.ts","../../src/js2jeon.visitors/switchStatement.ts","../../src/js2jeon.visitors/expressionStatement.ts","../../src/js2jeon.visitors/newExpression.ts","../../src/js2jeon.visitors/functionDeclaration.ts","../../src/js2jeon.visitors/functionExpression.ts","../../src/js2jeon.visitors/arrowFunctionExpression.ts","../../src/js2jeon.visitors/blockStatement.ts","../../src/js2jeon.visitors/variableDeclaration.ts","../../src/js2jeon.visitors/assignmentExpression.ts","../../src/js2jeon.visitors/arrayPattern.ts","../../src/js2jeon.visitors/objectPattern.ts","../../src/js2jeon.visitors/updateExpression.ts","../../src/js2jeon.visitors/ifStatement.ts","../../src/js2jeon.visitors/whileStatement.ts","../../src/js2jeon.visitors/forStatement.ts","../../src/js2jeon.visitors/returnStatement.ts","../../src/js2jeon.visitors/classDeclaration.ts","../../src/js2jeon.visitors/classExpression.ts","../../src/js2jeon.visitors/thisExpression.ts","../../src/js2jeon.visitors/methodDefinition.ts","../../src/js2jeon.visitors/propertyDefinition.ts","../../src/js2jeon.visitors/awaitExpression.ts","../../src/js2jeon.visitors/jsxElement.ts","../../src/js2jeon.visitors/jsxText.ts","../../src/js2jeon.visitors/jsxExpressionContainer.ts","../../src/js2jeon.visitors/yieldExpression.ts","../../src/js2jeon.visitors/breakStatement.ts","../../src/js2jeon.visitors/tryStatement.ts","../../src/js2jeon.visitors/registry.ts","../../src/js2jeon.visitors/ast2jeon.ts","../../src/js2jeon.ts","../../node_modules/.pnpm/json5@2.2.3/node_modules/json5/dist/index.mjs","../../node_modules/.pnpm/prismjs@1.30.0/node_modules/prismjs/prism.js","../../node_modules/.pnpm/prismjs@1.30.0/node_modules/prismjs/components/prism-typescript.js","../../node_modules/.pnpm/prismjs@1.30.0/node_modules/prismjs/components/prism-javascript.js","../../node_modules/.pnpm/prismjs@1.30.0/node_modules/prismjs/components/prism-json.js","../../src/index.tsx"],"sourcesContent":["const DEBUGGER = {\n  /** Enable debug mode for detailed logging */\n  debug: false,\n  /** Enable test mode */\n  test: false,\n  /** Enable verbose comment debugging */\n  verboseComment: false,\n  /** Enable context comment debugging */\n  contextComment: false\n};\nclass Stack extends Error {\n  constructor(message = \"\", startIndex = 0) {\n    super(message);\n    this.name = \"Stack\";\n    Object.setPrototypeOf(this, Stack.prototype);\n    if (this.stack) {\n      const stackLines = this.stack.split(\"\\n\");\n      const header = stackLines[0];\n      const body = stackLines.slice(1 + startIndex);\n      this.stack = [header, ...body].join(\"\\n\");\n    }\n  }\n}\nconst callStack = (msg) => {\n  if (!DEBUGGER.debug)\n    return void 0;\n  return new Stack(msg ?? \"Call Stack\");\n};\nlet BATCH;\nlet OBSERVER;\nconst setBatch = (value) => BATCH = value;\nconst setObserver = (value) => OBSERVER = value;\nconst castArray$1 = (value) => {\n  return isArray$1(value) ? value : [value];\n};\nconst castError$1 = (error) => {\n  if (error instanceof Error)\n    return error;\n  if (typeof error === \"string\")\n    return new Error(error);\n  return new Error(\"Unknown error\");\n};\nconst { is } = Object;\nconst { isArray: isArray$1 } = Array;\nconst isEqual = (a, b) => {\n  if (a.length !== b.length)\n    return false;\n  for (let i = 0, l = a.length; i < l; i++) {\n    const valueA = a[i];\n    const valueB = b[i];\n    if (!is(valueA, valueB))\n      return false;\n  }\n  return true;\n};\nconst isFunction$1 = (value) => {\n  return typeof value === \"function\";\n};\nconst isObject$1 = (value) => {\n  return value !== null && typeof value === \"object\";\n};\nconst isSymbol = (value) => {\n  return typeof value === \"symbol\";\n};\nconst noop$1 = (stack, dispose) => {\n  return;\n};\nconst nope = () => {\n  return false;\n};\nconst SYMBOL_CACHED = Symbol(\"Cached\");\nconst SYMBOL_OBSERVABLE = Symbol(\"Observable\");\nconst SYMBOL_OBSERVABLE_BOOLEAN = Symbol(\"Observable.Boolean\");\nconst SYMBOL_OBSERVABLE_FROZEN = Symbol(\"Observable.Frozen\");\nconst SYMBOL_OBSERVABLE_READABLE = Symbol(\"Observable.Readable\");\nconst SYMBOL_OBSERVABLE_WRITABLE = Symbol(\"Observable.Writable\");\nconst SYMBOL_STORE = Symbol(\"Store\");\nconst SYMBOL_STORE_KEYS = Symbol(\"Store.Keys\");\nconst SYMBOL_STORE_OBSERVABLE = Symbol(\"Store.Observable\");\nconst SYMBOL_STORE_TARGET = Symbol(\"Store.Target\");\nconst SYMBOL_STORE_VALUES = Symbol(\"Store.Values\");\nconst SYMBOL_STORE_UNTRACKED = Symbol(\"Store.Untracked\");\nconst SYMBOL_SUSPENSE$1 = Symbol(\"Suspense\");\nconst SYMBOL_UNCACHED = Symbol(\"Uncached\");\nconst SYMBOL_UNTRACKED = Symbol(\"Untracked\");\nconst SYMBOL_UNTRACKED_UNWRAPPED = Symbol(\"Untracked.Unwrapped\");\nfunction deepResolve(value) {\n  if (isFunction$1(value)) {\n    return deepResolve(value());\n  }\n  if (value instanceof Array) {\n    const resolved = new Array(value.length);\n    for (let i = 0, l = resolved.length; i < l; i++) {\n      resolved[i] = deepResolve(value[i]);\n    }\n    return resolved;\n  } else {\n    return value;\n  }\n}\nfunction frozenFunction() {\n  if (arguments.length) {\n    throw new Error(\"A readonly Observable can not be updated\");\n  } else {\n    return this;\n  }\n}\nfunction readableFunction() {\n  if (arguments.length) {\n    throw new Error(\"A readonly Observable can not be updated\");\n  } else {\n    return this.get();\n  }\n}\nfunction writableFunction(fn) {\n  if (arguments.length) {\n    if (isFunction$1(fn)) {\n      return this.update(fn);\n    } else {\n      return this.set(fn);\n    }\n  } else {\n    return this.get();\n  }\n}\nconst frozen = (value) => {\n  const fn = frozenFunction.bind(value);\n  fn[SYMBOL_OBSERVABLE] = true;\n  fn[SYMBOL_OBSERVABLE_FROZEN] = true;\n  return fn;\n};\nconst readable = (value, stack) => {\n  value.stack = stack;\n  const fn = readableFunction.bind(value);\n  fn.valueOf = () => deepResolve(fn);\n  fn.toString = () => fn.valueOf().toString();\n  fn[SYMBOL_OBSERVABLE] = true;\n  fn[SYMBOL_OBSERVABLE_READABLE] = value;\n  return fn;\n};\nconst writable = (value, stack) => {\n  value.stack = stack;\n  const fn = writableFunction.bind(value);\n  fn.valueOf = () => deepResolve(fn);\n  fn.toString = () => fn.valueOf().toString();\n  fn[SYMBOL_OBSERVABLE] = true;\n  fn[SYMBOL_OBSERVABLE_WRITABLE] = value;\n  return fn;\n};\nconst DIRTY_NO = 0;\nconst DIRTY_MAYBE_NO = 1;\nconst DIRTY_MAYBE_YES = 2;\nconst DIRTY_YES = 3;\nconst OBSERVABLE_FALSE = frozen(false);\nconst OBSERVABLE_TRUE = frozen(true);\nconst UNAVAILABLE = new Proxy({}, new Proxy({}, { get() {\n  throw new Error(\"Unavailable value\");\n} }));\nconst UNINITIALIZED = function() {\n};\nlet Scheduler$2 = class Scheduler {\n  constructor() {\n    this.waiting = [];\n    this.counter = 0;\n    this.locked = false;\n    this.flush = () => {\n      if (this.locked)\n        return;\n      if (this.counter)\n        return;\n      if (!this.waiting.length)\n        return;\n      try {\n        this.locked = true;\n        while (true) {\n          const queue = this.waiting;\n          if (!queue.length)\n            break;\n          this.waiting = [];\n          for (let i = 0, l = queue.length; i < l; i++) {\n            queue[i][0].update(queue[i][1]);\n          }\n        }\n      } finally {\n        this.locked = false;\n      }\n    };\n    this.wrap = (fn) => {\n      this.counter += 1;\n      fn();\n      this.counter -= 1;\n      this.flush();\n    };\n    this.schedule = (observer, stack) => {\n      this.waiting.push([observer, stack]);\n    };\n  }\n};\nconst SchedulerSync = new Scheduler$2();\nclass Observable {\n  /* CONSTRUCTOR */\n  constructor(value, options2, parent) {\n    this.observers = /* @__PURE__ */ new Set();\n    this.value = value;\n    this.options = options2;\n    if (parent) {\n      this.parent = parent;\n    }\n    if ((options2 == null ? void 0 : options2.equals) !== void 0) {\n      this.equals = options2.equals || nope;\n    }\n  }\n  /* API */\n  get() {\n    var _a, _b;\n    if (!((_a = this.parent) == null ? void 0 : _a.disposed)) {\n      (_b = this.parent) == null ? void 0 : _b.update(this.stack);\n      OBSERVER == null ? void 0 : OBSERVER.observables.link(this);\n    }\n    return this.value;\n  }\n  set(value) {\n    var _a;\n    if (((_a = this.options) == null ? void 0 : _a.type) !== void 0) {\n      const expectedType = this.options.type;\n      if (typeof expectedType === \"string\" || typeof expectedType === \"function\") {\n        try {\n          if (expectedType === \"string\" || expectedType === String) {\n            if (typeof value !== \"string\") {\n              throw new TypeError(`Expected value of type 'string', but received '${typeof value}'`);\n            }\n          } else if (expectedType === \"number\" || expectedType === Number) {\n            if (typeof value !== \"number\") {\n              throw new TypeError(`Expected value of type 'number', but received '${typeof value}'`);\n            }\n          } else if (expectedType === \"boolean\" || expectedType === Boolean) {\n            if (typeof value !== \"boolean\" && typeof value !== \"string\" && value !== void 0) {\n              throw new TypeError(`Expected value of type 'boolean', 'string', or 'undefined' for boolean, but received '${typeof value}'`);\n            }\n          } else if (expectedType === \"function\" || expectedType === Function) {\n            if (Array.isArray(value) && typeof value[0] === \"function\") {\n            } else if (typeof value === \"function\") {\n            } else {\n              throw new TypeError(`Expected value of type 'function' (as [fn] array or direct function), but received '${typeof value}'`);\n            }\n          } else if (expectedType === \"object\" || expectedType === Object) {\n            if (typeof value !== \"object\" || value === null) {\n              throw new TypeError(`Expected value of type 'object', but received '${typeof value}'`);\n            }\n          } else if (expectedType === \"symbol\" || expectedType === Symbol) {\n            if (typeof value !== \"symbol\") {\n              throw new TypeError(`Expected value of type 'symbol', but received '${typeof value}'`);\n            }\n          } else if (expectedType === \"bigint\" || expectedType === BigInt) {\n            if (typeof value !== \"bigint\") {\n              throw new TypeError(`Expected value of type 'bigint', but received '${typeof value}'`);\n            }\n          } else if (expectedType === \"undefined\") {\n            if (value !== void 0) {\n              throw new TypeError(`Expected value of type 'undefined', but received '${typeof value}'`);\n            }\n          } else if (typeof expectedType === \"function\") {\n            const constructorName = expectedType.name;\n            const isBuiltInConstructor = constructorName === \"String\" || constructorName === \"Number\" || constructorName === \"Boolean\" || constructorName === \"Function\" || constructorName === \"Object\" || constructorName === \"Symbol\" || constructorName === \"BigInt\";\n            if (constructorName && !isBuiltInConstructor) {\n              if (!(value instanceof expectedType)) {\n                throw new TypeError(`Expected value to be instance of '${constructorName}', but received '${typeof value}'`);\n              }\n            }\n          }\n        } catch (e) {\n          if (!(e instanceof TypeError)) ;\n          else {\n            throw e;\n          }\n        }\n      }\n    }\n    const equals = this.equals || is;\n    const fresh = this.value === UNINITIALIZED || !equals(value, this.value);\n    if (!fresh)\n      return value;\n    this.value = value;\n    this.stack = callStack();\n    SchedulerSync.counter += 1;\n    this.stale(DIRTY_YES, this.stack);\n    SchedulerSync.counter -= 1;\n    SchedulerSync.flush();\n    return value;\n  }\n  stale(status, stack) {\n    for (const observer of this.observers) {\n      if (observer.status !== DIRTY_MAYBE_NO || observer.observables.has(this)) {\n        if (observer.sync) {\n          observer.status = Math.max(observer.status, status);\n          SchedulerSync.schedule(observer, stack);\n        } else {\n          observer.stale(status, stack);\n        }\n      }\n    }\n  }\n  update(fn, stack) {\n    const value = fn(this.value);\n    return this.set(value);\n  }\n}\nconst lazyArrayEach = (arr, fn) => {\n  if (arr instanceof Array) {\n    for (let i = 0, l = arr.length; i < l; i++) {\n      fn(arr[i]);\n    }\n  } else if (arr) {\n    fn(arr);\n  }\n};\nconst lazyArrayEachRight = (arr, fn) => {\n  if (arr instanceof Array) {\n    for (let i = arr.length - 1; i >= 0; i--) {\n      fn(arr[i]);\n    }\n  } else if (arr) {\n    fn(arr);\n  }\n};\nconst lazyArrayPush = (obj, key, value) => {\n  const arr = obj[key];\n  if (arr instanceof Array) {\n    arr.push(value);\n  } else if (arr) {\n    obj[key] = [arr, value];\n  } else {\n    obj[key] = value;\n  }\n};\nconst lazySetAdd = (obj, key, value) => {\n  const set = obj[key];\n  if (set instanceof Set) {\n    set.add(value);\n  } else if (set) {\n    if (value !== set) {\n      const s = /* @__PURE__ */ new Set();\n      s.add(set);\n      s.add(value);\n      obj[key] = s;\n    }\n  } else {\n    obj[key] = value;\n  }\n};\nconst lazySetDelete = (obj, key, value) => {\n  const set = obj[key];\n  if (set instanceof Set) {\n    set.delete(value);\n  } else if (set === value) {\n    obj[key] = void 0;\n  }\n};\nconst lazySetEach = (set, fn) => {\n  if (set instanceof Set) {\n    for (const value of set) {\n      fn(value);\n    }\n  } else if (set) {\n    fn(set);\n  }\n};\nconst onCleanup = (cleanup2) => cleanup2.call(cleanup2, callStack());\nconst onDispose = (owner) => owner.dispose(true);\nclass Owner {\n  constructor() {\n    this.disposed = false;\n    this.cleanups = void 0;\n    this.errorHandler = void 0;\n    this.contexts = void 0;\n    this.observers = void 0;\n    this.roots = void 0;\n    this.suspenses = void 0;\n  }\n  /* API */\n  catch(error, silent) {\n    var _a;\n    const { errorHandler } = this;\n    if (errorHandler) {\n      errorHandler(error);\n      return true;\n    } else {\n      if ((_a = this.parent) == null ? void 0 : _a.catch(error, true))\n        return true;\n      if (silent)\n        return false;\n      throw error;\n    }\n  }\n  dispose(deep) {\n    lazyArrayEachRight(this.contexts, onDispose);\n    lazyArrayEachRight(this.observers, onDispose);\n    lazyArrayEachRight(this.suspenses, onDispose);\n    lazyArrayEachRight(this.cleanups, onCleanup);\n    this.cleanups = void 0;\n    this.disposed = deep;\n    this.errorHandler = void 0;\n    this.observers = void 0;\n    this.suspenses = void 0;\n  }\n  get(symbol) {\n    var _a;\n    return (_a = this.context) == null ? void 0 : _a[symbol];\n  }\n  wrap(fn, owner, observer, stack) {\n    const ownerPrev = OWNER;\n    const observerPrev = OBSERVER;\n    setOwner(owner);\n    setObserver(observer);\n    try {\n      return fn(stack);\n    } catch (error) {\n      this.catch(castError$1(error), false);\n      return UNAVAILABLE;\n    } finally {\n      setOwner(ownerPrev);\n      setObserver(observerPrev);\n    }\n  }\n}\nclass SuperRoot extends Owner {\n  constructor() {\n    super(...arguments);\n    this.context = {};\n  }\n}\nlet SUPER_OWNER = new SuperRoot();\nlet OWNER = SUPER_OWNER;\nconst setOwner = (value) => OWNER = value;\nclass ObservablesArray {\n  /* CONSTRUCTOR */\n  constructor(observer) {\n    this.observer = observer;\n    this.observables = [];\n    this.observablesIndex = 0;\n  }\n  /* API */\n  dispose(deep) {\n    if (deep) {\n      const { observer, observables } = this;\n      for (let i = 0; i < observables.length; i++) {\n        observables[i].observers.delete(observer);\n      }\n    }\n    this.observablesIndex = 0;\n  }\n  postdispose() {\n    const { observer, observables, observablesIndex } = this;\n    const observablesLength = observables.length;\n    if (observablesIndex < observablesLength) {\n      for (let i = observablesIndex; i < observablesLength; i++) {\n        observables[i].observers.delete(observer);\n      }\n      observables.length = observablesIndex;\n    }\n  }\n  empty() {\n    return !this.observables.length;\n  }\n  has(observable) {\n    const index = this.observables.indexOf(observable);\n    return index >= 0 && index < this.observablesIndex;\n  }\n  link(observable) {\n    const { observer, observables, observablesIndex } = this;\n    const observablesLength = observables.length;\n    if (observablesLength > 0) {\n      if (observables[observablesIndex] === observable) {\n        this.observablesIndex += 1;\n        return;\n      }\n      const index = observables.indexOf(observable);\n      if (index >= 0 && index < observablesIndex) {\n        return;\n      }\n      if (observablesIndex < observablesLength - 1) {\n        this.postdispose();\n      } else if (observablesIndex === observablesLength - 1) {\n        observables[observablesIndex].observers.delete(observer);\n      }\n    }\n    observable.observers.add(observer);\n    observables[this.observablesIndex++] = observable;\n    if (observablesIndex === 128) {\n      observer.observables = new ObservablesSet(observer, observables);\n    }\n  }\n  update(stack) {\n    var _a;\n    const { observables } = this;\n    for (let i = 0, l = observables.length; i < l; i++) {\n      (_a = observables[i].parent) == null ? void 0 : _a.update(stack);\n    }\n  }\n}\nclass ObservablesSet {\n  /* CONSTRUCTOR */\n  constructor(observer, observables) {\n    this.observer = observer;\n    this.observables = new Set(observables);\n  }\n  /* API */\n  dispose(deep) {\n    for (const observable of this.observables) {\n      observable.observers.delete(this.observer);\n    }\n  }\n  postdispose() {\n    return;\n  }\n  empty() {\n    return !this.observables.size;\n  }\n  has(observable) {\n    return this.observables.has(observable);\n  }\n  link(observable) {\n    const { observer, observables } = this;\n    const sizePrev = observables.size;\n    observable.observers.add(observer);\n    const sizeNext = observables.size;\n    if (sizePrev === sizeNext)\n      return;\n    observables.add(observable);\n  }\n  update(stack) {\n    var _a;\n    for (const observable of this.observables) {\n      (_a = observable.parent) == null ? void 0 : _a.update(stack);\n    }\n  }\n}\nclass Observer extends Owner {\n  /* CONSTRUCTOR */\n  constructor() {\n    super();\n    this.parent = OWNER;\n    this.context = OWNER.context;\n    this.status = DIRTY_YES;\n    this.observables = new ObservablesArray(this);\n    if (OWNER !== SUPER_OWNER) {\n      lazyArrayPush(this.parent, \"observers\", this);\n    }\n  }\n  /* API */\n  dispose(deep) {\n    this.observables.dispose(deep);\n    super.dispose(deep);\n  }\n  refresh(fn, stack) {\n    this.dispose(false);\n    this.status = DIRTY_MAYBE_NO;\n    try {\n      return this.wrap(fn, this, this, stack);\n    } finally {\n      this.observables.postdispose();\n    }\n  }\n  run(stack) {\n    throw new Error(\"Abstract method\");\n  }\n  stale(status, stack) {\n    throw new Error(\"Abstract method\");\n  }\n  update(stack) {\n    if (this.disposed)\n      return;\n    if (this.status === DIRTY_MAYBE_YES) {\n      this.observables.update(stack);\n    }\n    if (this.status === DIRTY_YES) {\n      this.status = DIRTY_MAYBE_NO;\n      this.run(stack);\n      if (this.status === DIRTY_MAYBE_NO) {\n        this.status = DIRTY_NO;\n      } else {\n        this.update(stack);\n      }\n    } else {\n      this.status = DIRTY_NO;\n    }\n  }\n}\nconst cleanup = (fn) => {\n  lazyArrayPush(OWNER, \"cleanups\", fn);\n};\nclass Context extends Owner {\n  /* CONSTRUCTOR */\n  constructor(context2) {\n    super();\n    this.parent = OWNER;\n    this.context = { ...OWNER.context, ...context2 };\n    lazyArrayPush(this.parent, \"contexts\", this);\n  }\n  /* API */\n  wrap(fn, owner, observer, stack) {\n    return super.wrap(fn, this, void 0, stack);\n  }\n}\nfunction context(symbolOrContext, fn) {\n  if (isSymbol(symbolOrContext)) {\n    return OWNER.context[symbolOrContext];\n  } else {\n    const stack = callStack();\n    return new Context(symbolOrContext).wrap(fn || noop$1, void 0, void 0, stack);\n  }\n}\nclass Scheduler2 {\n  constructor() {\n    this.waiting = [];\n    this.locked = false;\n    this.queued = false;\n    this.flush = (stack) => {\n      if (this.locked)\n        return;\n      if (!this.waiting.length)\n        return;\n      try {\n        this.locked = true;\n        while (true) {\n          const queue = this.waiting;\n          if (!queue.length)\n            break;\n          this.waiting = [];\n          for (let i = 0, l = queue.length; i < l; i++) {\n            queue[i][0].update(queue[i][1]);\n          }\n        }\n      } finally {\n        this.locked = false;\n      }\n    };\n    this.queue = (stack) => {\n      if (this.queued)\n        return;\n      this.queued = true;\n      this.resolve(stack);\n    };\n    this.resolve = (stack) => {\n      queueMicrotask(() => {\n        queueMicrotask(() => {\n          if (BATCH) {\n            BATCH.finally(() => this.resolve(stack));\n          } else {\n            this.queued = false;\n            this.flush(stack);\n          }\n        });\n      });\n    };\n    this.schedule = (effect2, stack) => {\n      this.waiting.push([effect2, stack]);\n      this.queue(stack);\n    };\n  }\n}\nconst Scheduler$1 = new Scheduler2();\nclass Effect extends Observer {\n  /* CONSTRUCTOR */\n  constructor(fn, options2) {\n    super();\n    this.fn = fn;\n    if ((options2 == null ? void 0 : options2.suspense) !== false) {\n      const suspense = this.get(SYMBOL_SUSPENSE$1);\n      if (suspense) {\n        this.suspense = suspense;\n      }\n    }\n    if ((options2 == null ? void 0 : options2.sync) === true) {\n      this.sync = true;\n    }\n    const { stack } = options2 ?? { stack: callStack(\"Effect init\") };\n    if ((options2 == null ? void 0 : options2.sync) === \"init\") {\n      this.init = true;\n      this.update(stack);\n    } else {\n      this.schedule(stack);\n    }\n  }\n  /* API */\n  run(stack) {\n    const result = super.refresh(this.fn, stack);\n    if (isFunction$1(result)) {\n      lazyArrayPush(this, \"cleanups\", result);\n    }\n  }\n  schedule(stack) {\n    var _a;\n    if ((_a = this.suspense) == null ? void 0 : _a.suspended)\n      return;\n    if (this.sync) {\n      this.update(stack);\n    } else {\n      Scheduler$1.schedule(this, stack);\n    }\n  }\n  stale(status, stack) {\n    const statusPrev = this.status;\n    if (statusPrev >= status)\n      return;\n    this.status = status;\n    if (!this.sync || statusPrev !== 2 && statusPrev !== 3) {\n      this.schedule(stack);\n    }\n  }\n  update(stack) {\n    var _a;\n    if ((_a = this.suspense) == null ? void 0 : _a.suspended)\n      return;\n    super.update(stack);\n  }\n}\nconst effect = (fn, options2) => {\n  const effect2 = new Effect(fn, options2);\n  const dispose = (stack) => effect2.dispose(true);\n  return dispose;\n};\nconst isObservable = (value) => {\n  return isFunction$1(value) && SYMBOL_OBSERVABLE in value;\n};\nfunction get(value, getFunction = true) {\n  const is2 = getFunction ? isFunction$1 : isObservable;\n  if (is2(value)) {\n    return value();\n  } else {\n    return value;\n  }\n}\nconst isStore = (value) => {\n  return isObject$1(value) && SYMBOL_STORE in value;\n};\nfunction untrack(fn) {\n  if (isFunction$1(fn)) {\n    const observerPrev = OBSERVER;\n    if (observerPrev) {\n      try {\n        setObserver(void 0);\n        return fn();\n      } finally {\n        setObserver(observerPrev);\n      }\n    } else {\n      return fn();\n    }\n  } else {\n    return fn;\n  }\n}\nconst isBatching = () => {\n  return !!BATCH || Scheduler$1.queued || Scheduler$1.locked || SchedulerSync.locked;\n};\nclass StoreMap extends Map {\n  insert(key, value) {\n    super.set(key, value);\n    return value;\n  }\n}\nclass StoreCleanable {\n  constructor() {\n    this.count = 0;\n  }\n  listen() {\n    this.count += 1;\n    cleanup(this);\n  }\n  call() {\n    this.count -= 1;\n    if (this.count)\n      return;\n    this.dispose();\n  }\n  dispose() {\n  }\n}\nclass StoreKeys extends StoreCleanable {\n  constructor(parent, observable) {\n    super();\n    this.parent = parent;\n    this.observable = observable;\n  }\n  dispose() {\n    this.parent.keys = void 0;\n  }\n}\nclass StoreValues extends StoreCleanable {\n  constructor(parent, observable) {\n    super();\n    this.parent = parent;\n    this.observable = observable;\n  }\n  dispose() {\n    this.parent.values = void 0;\n  }\n}\nclass StoreHas extends StoreCleanable {\n  constructor(parent, key, observable) {\n    super();\n    this.parent = parent;\n    this.key = key;\n    this.observable = observable;\n  }\n  dispose() {\n    var _a;\n    (_a = this.parent.has) == null ? void 0 : _a.delete(this.key);\n  }\n}\nclass StoreProperty extends StoreCleanable {\n  constructor(parent, key, observable, node) {\n    super();\n    this.parent = parent;\n    this.key = key;\n    this.observable = observable;\n    this.node = node;\n  }\n  dispose() {\n    var _a;\n    (_a = this.parent.properties) == null ? void 0 : _a.delete(this.key);\n  }\n}\nconst StoreListenersRegular = {\n  /* VARIABLES */\n  active: 0,\n  listeners: /* @__PURE__ */ new Set(),\n  nodes: /* @__PURE__ */ new Set(),\n  /* API */\n  prepare: (stack) => {\n    const { listeners, nodes } = StoreListenersRegular;\n    const traversed = /* @__PURE__ */ new Set();\n    const traverse = (node) => {\n      if (traversed.has(node))\n        return;\n      traversed.add(node);\n      lazySetEach(node.parents, traverse);\n      lazySetEach(node.listenersRegular, (listener) => {\n        listeners.add(listener);\n      });\n    };\n    nodes.forEach(traverse);\n    return () => {\n      listeners.forEach((listener) => {\n        listener(stack);\n      });\n    };\n  },\n  register: (node, stack) => {\n    StoreListenersRegular.nodes.add(node);\n    StoreScheduler.schedule(stack);\n  },\n  reset: () => {\n    StoreListenersRegular.listeners = /* @__PURE__ */ new Set();\n    StoreListenersRegular.nodes = /* @__PURE__ */ new Set();\n  }\n};\nconst StoreListenersRoots = {\n  /* VARIABLES */\n  active: 0,\n  nodes: /* @__PURE__ */ new Map(),\n  /* API */\n  prepare: () => {\n    const { nodes } = StoreListenersRoots;\n    return () => {\n      nodes.forEach((rootsSet, store2) => {\n        const roots = Array.from(rootsSet);\n        lazySetEach(store2.listenersRoots, (listener) => {\n          listener(roots);\n        });\n      });\n    };\n  },\n  register: (store2, root, stack) => {\n    const roots = StoreListenersRoots.nodes.get(store2) || /* @__PURE__ */ new Set();\n    roots.add(root);\n    StoreListenersRoots.nodes.set(store2, roots);\n    StoreScheduler.schedule(stack);\n  },\n  registerWith: (current, parent, key, stack) => {\n    if (!parent.parents) {\n      const root = (current == null ? void 0 : current.store) || untrack(() => parent.store[key]);\n      StoreListenersRoots.register(parent, root, stack);\n    } else {\n      const traversed = /* @__PURE__ */ new Set();\n      const traverse = (node) => {\n        if (traversed.has(node))\n          return;\n        traversed.add(node);\n        lazySetEach(node.parents, (parent2) => {\n          if (!parent2.parents) {\n            StoreListenersRoots.register(parent2, node.store, stack);\n          }\n          traverse(parent2);\n        });\n      };\n      traverse(current || parent);\n    }\n  },\n  reset: () => {\n    StoreListenersRoots.nodes = /* @__PURE__ */ new Map();\n  }\n};\nconst StoreScheduler = {\n  /* VARIABLES */\n  active: false,\n  /* API */\n  flush: (stack) => {\n    const flushRegular = StoreListenersRegular.prepare(stack);\n    const flushRoots = StoreListenersRoots.prepare();\n    StoreScheduler.reset();\n    flushRegular(stack);\n    flushRoots(stack);\n  },\n  flushIfNotBatching: (stack) => {\n    if (isBatching()) {\n      if (BATCH) {\n        BATCH.finally(() => StoreScheduler.flushIfNotBatching(stack));\n      } else {\n        setTimeout(StoreScheduler.flushIfNotBatching, 0);\n      }\n    } else {\n      StoreScheduler.flush(stack);\n    }\n  },\n  reset: () => {\n    StoreScheduler.active = false;\n    StoreListenersRegular.reset();\n    StoreListenersRoots.reset();\n  },\n  schedule: (stack) => {\n    if (StoreScheduler.active)\n      return;\n    StoreScheduler.active = true;\n    queueMicrotask(() => StoreScheduler.flushIfNotBatching(stack));\n  }\n};\nconst NODES = /* @__PURE__ */ new WeakMap();\nconst SPECIAL_SYMBOLS = /* @__PURE__ */ new Set([SYMBOL_STORE, SYMBOL_STORE_KEYS, SYMBOL_STORE_OBSERVABLE, SYMBOL_STORE_TARGET, SYMBOL_STORE_VALUES]);\nconst UNREACTIVE_KEYS = /* @__PURE__ */ new Set([\"__proto__\", \"__defineGetter__\", \"__defineSetter__\", \"__lookupGetter__\", \"__lookupSetter__\", \"prototype\", \"constructor\", \"hasOwnProperty\", \"isPrototypeOf\", \"propertyIsEnumerable\", \"toLocaleString\", \"toSource\", \"toString\", \"valueOf\"]);\nconst STORE_TRAPS = {\n  /* API */\n  get: (target, key) => {\n    var _a, _b;\n    const stack = callStack(\"store.get\");\n    if (SPECIAL_SYMBOLS.has(key)) {\n      if (key === SYMBOL_STORE)\n        return true;\n      if (key === SYMBOL_STORE_TARGET)\n        return target;\n      if (key === SYMBOL_STORE_KEYS) {\n        if (isListenable()) {\n          const node2 = getNodeExisting(target);\n          node2.keys || (node2.keys = getNodeKeys(node2));\n          node2.keys.listen();\n          node2.keys.observable.stack = stack;\n          node2.keys.observable.get();\n        }\n        return;\n      }\n      if (key === SYMBOL_STORE_VALUES) {\n        if (isListenable()) {\n          const node2 = getNodeExisting(target);\n          node2.values || (node2.values = getNodeValues(node2));\n          node2.values.listen();\n          node2.values.observable.stack = stack;\n          node2.values.observable.get();\n        }\n        return;\n      }\n      if (key === SYMBOL_STORE_OBSERVABLE) {\n        return (key2) => {\n          var _a2;\n          key2 = typeof key2 === \"number\" ? String(key2) : key2;\n          const node2 = getNodeExisting(target);\n          const getter2 = (_a2 = node2.getters) == null ? void 0 : _a2.get(key2);\n          if (getter2)\n            return getter2.bind(node2.store);\n          node2.properties || (node2.properties = new StoreMap());\n          const value2 = target[key2];\n          const property2 = node2.properties.get(key2) || node2.properties.insert(key2, getNodeProperty(node2, key2, value2));\n          const options2 = node2.equals ? { equals: node2.equals } : void 0;\n          property2.observable || (property2.observable = getNodeObservable(node2, value2, options2));\n          const observable = readable(property2.observable, stack);\n          return observable;\n        };\n      }\n    }\n    if (UNREACTIVE_KEYS.has(key))\n      return target[key];\n    const node = getNodeExisting(target);\n    const getter = (_a = node.getters) == null ? void 0 : _a.get(key);\n    const value = getter || target[key];\n    node.properties || (node.properties = new StoreMap());\n    const listenable = isListenable();\n    const proxiable = isProxiable(value);\n    const property = listenable || proxiable ? node.properties.get(key) || node.properties.insert(key, getNodeProperty(node, key, value)) : void 0;\n    if (property == null ? void 0 : property.node) {\n      lazySetAdd(property.node, \"parents\", node);\n    }\n    if (property && listenable) {\n      const options2 = node.equals ? { equals: node.equals } : void 0;\n      property.listen();\n      property.observable || (property.observable = getNodeObservable(node, value, options2));\n      property.observable.stack = stack;\n      property.observable.get();\n    }\n    if (getter) {\n      return getter.call(node.store);\n    } else {\n      if (typeof value === \"function\" && value === Array.prototype[key]) {\n        return function() {\n          return value.apply(node.store, arguments);\n        };\n      }\n      return ((_b = property == null ? void 0 : property.node) == null ? void 0 : _b.store) || value;\n    }\n  },\n  set: (target, key, value, stack) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;\n    value = getTarget(value);\n    const node = getNodeExisting(target);\n    const setter = (_a = node.setters) == null ? void 0 : _a.get(key);\n    if (setter) {\n      setter.call(node.store, value);\n    } else {\n      const targetIsArray = isArray$1(target);\n      const valuePrev = target[key];\n      const hadProperty = !!valuePrev || key in target;\n      const equals = node.equals || is;\n      if (hadProperty && equals(value, valuePrev) && (key !== \"length\" || !targetIsArray))\n        return true;\n      const lengthPrev = targetIsArray && target[\"length\"];\n      target[key] = value;\n      const lengthNext = targetIsArray && target[\"length\"];\n      if (targetIsArray && key !== \"length\" && lengthPrev !== lengthNext) {\n        (_d = (_c = (_b = node.properties) == null ? void 0 : _b.get(\"length\")) == null ? void 0 : _c.observable) == null ? void 0 : _d.set(lengthNext);\n      }\n      (_e = node.values) == null ? void 0 : _e.observable.set(0);\n      if (!hadProperty) {\n        (_f = node.keys) == null ? void 0 : _f.observable.set(0);\n        (_h = (_g = node.has) == null ? void 0 : _g.get(key)) == null ? void 0 : _h.observable.set(true);\n      }\n      const property = (_i = node.properties) == null ? void 0 : _i.get(key);\n      if (property == null ? void 0 : property.node) {\n        lazySetDelete(property.node, \"parents\", node);\n      }\n      if (property) {\n        (_j = property.observable) == null ? void 0 : _j.set(value);\n        property.node = isProxiable(value) ? NODES.get(value) || getNode(value, key, node) : void 0;\n      }\n      if (property == null ? void 0 : property.node) {\n        lazySetAdd(property.node, \"parents\", node);\n      }\n      if (StoreListenersRoots.active) {\n        StoreListenersRoots.registerWith(property == null ? void 0 : property.node, node, key, stack);\n      }\n      if (StoreListenersRegular.active) {\n        StoreListenersRegular.register(node, stack);\n      }\n      if (targetIsArray && key === \"length\") {\n        const lengthPrev2 = Number(valuePrev);\n        const lengthNext2 = Number(value);\n        for (let i = lengthNext2; i < lengthPrev2; i++) {\n          if (i in target)\n            continue;\n          STORE_TRAPS.deleteProperty(target, `${i}`, true);\n        }\n      }\n    }\n    return true;\n  },\n  deleteProperty: (target, key, _force) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const hasProperty = key in target;\n    if (!_force && !hasProperty)\n      return true;\n    const deleted = Reflect.deleteProperty(target, key);\n    if (!deleted)\n      return false;\n    const node = getNodeExisting(target);\n    const stack = callStack();\n    (_a = node.getters) == null ? void 0 : _a.delete(key);\n    (_b = node.setters) == null ? void 0 : _b.delete(key);\n    (_c = node.keys) == null ? void 0 : _c.observable.set(0);\n    (_d = node.values) == null ? void 0 : _d.observable.set(0);\n    (_f = (_e = node.has) == null ? void 0 : _e.get(key)) == null ? void 0 : _f.observable.set(false);\n    const property = (_g = node.properties) == null ? void 0 : _g.get(key);\n    if (StoreListenersRoots.active) {\n      StoreListenersRoots.registerWith(property == null ? void 0 : property.node, node, key, stack);\n    }\n    if (property == null ? void 0 : property.node) {\n      lazySetDelete(property.node, \"parents\", node);\n    }\n    if (property) {\n      (_h = property.observable) == null ? void 0 : _h.set(void 0);\n      property.node = void 0;\n    }\n    if (StoreListenersRegular.active) {\n      StoreListenersRegular.register(node, stack);\n    }\n    return true;\n  },\n  defineProperty: (target, key, descriptor) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const node = getNodeExisting(target);\n    const equals = node.equals || is;\n    const hadProperty = key in target;\n    const descriptorPrev = Reflect.getOwnPropertyDescriptor(target, key);\n    const stack = callStack();\n    if (\"value\" in descriptor && isStore(descriptor.value)) {\n      descriptor = { ...descriptor, value: getTarget(descriptor.value) };\n    }\n    if (descriptorPrev && isEqualDescriptor(descriptorPrev, descriptor, equals))\n      return true;\n    const defined = Reflect.defineProperty(target, key, descriptor);\n    if (!defined)\n      return false;\n    if (!descriptor.get) {\n      (_a = node.getters) == null ? void 0 : _a.delete(key);\n    } else if (descriptor.get) {\n      node.getters || (node.getters = new StoreMap());\n      node.getters.set(key, descriptor.get);\n    }\n    if (!descriptor.set) {\n      (_b = node.setters) == null ? void 0 : _b.delete(key);\n    } else if (descriptor.set) {\n      node.setters || (node.setters = new StoreMap());\n      node.setters.set(key, descriptor.set);\n    }\n    if (hadProperty !== !!descriptor.enumerable) {\n      (_c = node.keys) == null ? void 0 : _c.observable.set(0);\n    }\n    (_e = (_d = node.has) == null ? void 0 : _d.get(key)) == null ? void 0 : _e.observable.set(true);\n    const property = (_f = node.properties) == null ? void 0 : _f.get(key);\n    if (StoreListenersRoots.active) {\n      StoreListenersRoots.registerWith(property == null ? void 0 : property.node, node, key, stack);\n    }\n    if (property == null ? void 0 : property.node) {\n      lazySetDelete(property.node, \"parents\", node);\n    }\n    if (property) {\n      if (\"get\" in descriptor) {\n        (_g = property.observable) == null ? void 0 : _g.set(descriptor.get);\n        property.node = void 0;\n      } else {\n        const value = descriptor.value;\n        (_h = property.observable) == null ? void 0 : _h.set(value);\n        property.node = isProxiable(value) ? NODES.get(value) || getNode(value, key, node) : void 0;\n      }\n    }\n    if (property == null ? void 0 : property.node) {\n      lazySetAdd(property.node, \"parents\", node);\n    }\n    if (StoreListenersRoots.active) {\n      StoreListenersRoots.registerWith(property == null ? void 0 : property.node, node, key, stack);\n    }\n    if (StoreListenersRegular.active) {\n      StoreListenersRegular.register(node, stack);\n    }\n    return true;\n  },\n  has: (target, key) => {\n    if (key === SYMBOL_STORE)\n      return true;\n    if (key === SYMBOL_STORE_TARGET)\n      return true;\n    const value = key in target;\n    if (isListenable()) {\n      const node = getNodeExisting(target);\n      node.has || (node.has = new StoreMap());\n      const has = node.has.get(key) || node.has.insert(key, getNodeHas(node, key, value));\n      has.listen();\n      has.observable.stack = callStack(\"store.has\");\n      has.observable.get();\n    }\n    return value;\n  },\n  ownKeys: (target) => {\n    const keys = Reflect.ownKeys(target);\n    if (isListenable()) {\n      const node = getNodeExisting(target);\n      node.keys || (node.keys = getNodeKeys(node));\n      node.keys.listen();\n      node.keys.observable.stack = callStack(\"store.ownKeys\");\n      node.keys.observable.get();\n    }\n    return keys;\n  }\n};\nconst STORE_UNTRACK_TRAPS = {\n  /* API */\n  has: (target, key) => {\n    if (key === SYMBOL_STORE_UNTRACKED)\n      return true;\n    return key in target;\n  }\n};\nconst getNode = (value, key, parent, equals) => {\n  if (isStore(value))\n    return getNodeExisting(getTarget(value));\n  const store2 = isFrozenLike(value, key, parent) ? value : new Proxy(value, STORE_TRAPS);\n  const gettersAndSetters = getGettersAndSetters(value);\n  const node = { parents: parent, store: store2 };\n  if (gettersAndSetters) {\n    const { getters, setters } = gettersAndSetters;\n    if (getters)\n      node.getters = getters;\n    if (setters)\n      node.setters = setters;\n  }\n  if (equals === false) {\n    node.equals = nope;\n  } else if (equals) {\n    node.equals = equals;\n  } else if (parent == null ? void 0 : parent.equals) {\n    node.equals = parent.equals;\n  }\n  NODES.set(value, node);\n  return node;\n};\nconst getNodeExisting = (value) => {\n  const node = NODES.get(value);\n  if (!node)\n    throw new Error(\"Impossible\");\n  return node;\n};\nconst getNodeFromStore = (store2) => {\n  return getNodeExisting(getTarget(store2));\n};\nconst getNodeKeys = (node) => {\n  const observable = getNodeObservable(node, 0, { equals: false });\n  const keys = new StoreKeys(node, observable);\n  return keys;\n};\nconst getNodeValues = (node) => {\n  const observable = getNodeObservable(node, 0, { equals: false });\n  const values = new StoreValues(node, observable);\n  return values;\n};\nconst getNodeHas = (node, key, value) => {\n  const observable = getNodeObservable(node, value);\n  const has = new StoreHas(node, key, observable);\n  return has;\n};\nconst getNodeObservable = (node, value, options2) => {\n  return new Observable(value, options2);\n};\nconst getNodeProperty = (node, key, value) => {\n  const observable = void 0;\n  const propertyNode = isProxiable(value) ? NODES.get(value) || getNode(value, key, node) : void 0;\n  const property = new StoreProperty(node, key, observable, propertyNode);\n  node.properties || (node.properties = new StoreMap());\n  node.properties.set(key, property);\n  return property;\n};\nconst getGettersAndSetters = (value) => {\n  if (isArray$1(value))\n    return;\n  let getters;\n  let setters;\n  const keys = Object.keys(value);\n  for (let i = 0, l = keys.length; i < l; i++) {\n    const key = keys[i];\n    const descriptor = Object.getOwnPropertyDescriptor(value, key);\n    if (!descriptor)\n      continue;\n    const { get: get2, set } = descriptor;\n    if (get2) {\n      getters || (getters = new StoreMap());\n      getters.set(key, get2);\n    }\n    if (set) {\n      setters || (setters = new StoreMap());\n      setters.set(key, set);\n    }\n    if (get2 && !set) {\n      setters || (setters = new StoreMap());\n      setters.set(key, throwNoSetterError);\n    }\n  }\n  if (!getters && !setters)\n    return;\n  return { getters, setters };\n};\nconst getStore = (value, options2) => {\n  if (isStore(value))\n    return value;\n  const node = NODES.get(value) || getNode(value, void 0, void 0, options2 == null ? void 0 : options2.equals);\n  return node.store;\n};\nconst getTarget = (value) => {\n  if (isStore(value))\n    return value[SYMBOL_STORE_TARGET];\n  return value;\n};\nconst getUntracked = (value) => {\n  if (!isObject$1(value))\n    return value;\n  if (isUntracked(value))\n    return value;\n  return new Proxy(value, STORE_UNTRACK_TRAPS);\n};\nconst isEqualDescriptor = (a, b, equals) => {\n  return !!a.configurable === !!b.configurable && !!a.enumerable === !!b.enumerable && !!a.writable === !!b.writable && equals(a.value, b.value) && a.get === b.get && a.set === b.set;\n};\nconst isFrozenLike = (value, key, parent) => {\n  if (Object.isFrozen(value))\n    return true;\n  if (!parent || key === void 0)\n    return false;\n  const target = store.unwrap(parent.store);\n  const descriptor = Reflect.getOwnPropertyDescriptor(target, key);\n  if ((descriptor == null ? void 0 : descriptor.configurable) || (descriptor == null ? void 0 : descriptor.writable))\n    return false;\n  return true;\n};\nconst isListenable = () => {\n  return !!OBSERVER;\n};\nconst isProxiable = (value) => {\n  if (value === null || typeof value !== \"object\")\n    return false;\n  if (SYMBOL_STORE in value)\n    return true;\n  if (SYMBOL_STORE_UNTRACKED in value)\n    return false;\n  if (isArray$1(value))\n    return true;\n  const prototype = Object.getPrototypeOf(value);\n  if (prototype === null)\n    return true;\n  return Object.getPrototypeOf(prototype) === null;\n};\nconst isUntracked = (value) => {\n  if (value === null || typeof value !== \"object\")\n    return false;\n  return SYMBOL_STORE_UNTRACKED in value;\n};\nconst throwNoSetterError = () => {\n  throw new TypeError(\"Cannot set property value of #<Object> which has only a getter\");\n};\nconst store = (value, options2) => {\n  if (!isObject$1(value))\n    return value;\n  if (isUntracked(value))\n    return value;\n  return getStore(value, options2);\n};\nstore.on = (target, listener) => {\n  const targets = isStore(target) ? [target] : castArray$1(target);\n  const selectors = targets.filter(isFunction$1);\n  const nodes = targets.filter(isStore).map(getNodeFromStore);\n  StoreListenersRegular.active += 1;\n  const stack = callStack();\n  const disposers = selectors.map((selector) => {\n    let inited = false;\n    return effect((stack2) => {\n      if (inited) {\n        StoreListenersRegular.listeners.add(listener);\n        StoreScheduler.schedule(stack2);\n      }\n      inited = true;\n      selector();\n    }, { suspense: false, sync: true, stack });\n  });\n  nodes.forEach((node) => {\n    lazySetAdd(node, \"listenersRegular\", listener);\n  });\n  return (stack2) => {\n    StoreListenersRegular.active -= 1;\n    disposers.forEach((disposer) => {\n      disposer(stack2);\n    });\n    nodes.forEach((node) => {\n      lazySetDelete(node, \"listenersRegular\", listener);\n    });\n  };\n};\nstore._onRoots = (target, listener) => {\n  if (!isStore(target))\n    return noop$1;\n  const node = getNodeFromStore(target);\n  if (node.parents)\n    throw new Error(\"Only top-level stores are supported\");\n  StoreListenersRoots.active += 1;\n  lazySetAdd(node, \"listenersRoots\", listener);\n  return () => {\n    StoreListenersRoots.active -= 1;\n    lazySetDelete(node, \"listenersRoots\", listener);\n  };\n};\nstore.reconcile = /* @__PURE__ */ (() => {\n  const getType = (value) => {\n    if (isArray$1(value))\n      return 1;\n    if (isProxiable(value))\n      return 2;\n    return 0;\n  };\n  const reconcileOuter = (prev, next) => {\n    const uprev = getTarget(prev);\n    const unext = getTarget(next);\n    reconcileInner(prev, next);\n    const prevType = getType(uprev);\n    const nextType = getType(unext);\n    if (prevType === 1 || nextType === 1) {\n      prev.length = next.length;\n    }\n    return prev;\n  };\n  const reconcileInner = (prev, next) => {\n    const uprev = getTarget(prev);\n    const unext = getTarget(next);\n    const prevKeys = Object.keys(uprev);\n    const nextKeys = Object.keys(unext);\n    for (let i = 0, l = nextKeys.length; i < l; i++) {\n      const key = nextKeys[i];\n      const prevValue = uprev[key];\n      const nextValue = unext[key];\n      if (!is(prevValue, nextValue)) {\n        const prevType = getType(prevValue);\n        const nextType = getType(nextValue);\n        if (prevType && prevType === nextType) {\n          reconcileInner(prev[key], nextValue);\n          if (prevType === 1) {\n            prev[key].length = nextValue.length;\n          }\n        } else {\n          prev[key] = nextValue;\n        }\n      } else if (prevValue === void 0 && !(key in uprev)) {\n        prev[key] = void 0;\n      }\n    }\n    for (let i = 0, l = prevKeys.length; i < l; i++) {\n      const key = prevKeys[i];\n      if (!(key in unext)) {\n        delete prev[key];\n      }\n    }\n    return prev;\n  };\n  const reconcile = (prev, next) => {\n    return untrack(() => {\n      return reconcileOuter(prev, next);\n    });\n  };\n  return reconcile;\n})();\nstore.untrack = (value) => {\n  return getUntracked(value);\n};\nstore.unwrap = (value) => {\n  return getTarget(value);\n};\nconst _with = () => {\n  const owner = OWNER;\n  const observer = OBSERVER;\n  return (fn, stack) => {\n    return owner.wrap(() => fn(), owner, observer, stack);\n  };\n};\nconst CONTEXTS_DATA = /* @__PURE__ */ new WeakMap();\nconst DIRECTIVES = {};\nconst SYMBOL_SUSPENSE = Symbol(\"Suspense\");\nconst SYMBOL_SUSPENSE_COLLECTOR = Symbol(\"Suspense.Collector\");\nconst SYMBOL_TEMPLATE_ACCESSOR = Symbol(\"Template.Accessor\");\nconst SYMBOLS_DIRECTIVES = {};\nconst SYMBOL_CLONE = Symbol(\"CloneElement\");\nconst SYMBOL_JSX = Symbol(\"Jsx\");\nconst SYMBOL_DEFAULT = Symbol(\"Default\");\nconst assign = Object.assign;\nconst castArray = (value) => {\n  return isArray(value) ? value : [value];\n};\nconst castError = (exception) => {\n  if (isError(exception)) return exception;\n  if (isString(exception)) return new Error(exception);\n  return new Error(\"Unknown error\");\n};\nconst flatten = (arr) => {\n  for (let i = 0, l = arr.length; i < l; i++) {\n    if (!isArray(arr[i])) continue;\n    return arr.flat(Infinity);\n  }\n  return arr;\n};\nconst indexOf = (() => {\n  const _indexOf = Array.prototype.indexOf;\n  return (arr, value) => {\n    return _indexOf.call(arr, value);\n  };\n})();\nconst isArray = (a) => a instanceof Array;\nconst isBoolean = (value) => {\n  return typeof value === \"boolean\";\n};\nconst isComponent = (value) => {\n  return isFunction(value) && SYMBOL_UNTRACKED_UNWRAPPED in value;\n};\nconst isError = (value) => {\n  return value instanceof Error;\n};\nconst isFalsy = (value) => {\n  return !value;\n};\nconst isFunction = (value) => {\n  return typeof value === \"function\";\n};\nconst isClass = (fn) => {\n  return typeof fn === \"function\" && /^class\\s/.test(Function.prototype.toString.call(fn));\n};\nconst isFunctionReactive = (value) => {\n  var _a, _b;\n  return !(SYMBOL_UNTRACKED in value || SYMBOL_UNTRACKED_UNWRAPPED in value || SYMBOL_OBSERVABLE_FROZEN in value || ((_b = (_a = value[SYMBOL_OBSERVABLE_READABLE]) == null ? void 0 : _a.parent) == null ? void 0 : _b.disposed));\n};\nconst isNil = (value) => {\n  return value === null || value === void 0;\n};\nconst isNode = (value) => {\n  return value instanceof Node;\n};\nconst isObject = (value) => {\n  return typeof value === \"object\" && value !== null;\n};\nconst isPrimitive = (value) => {\n  const t = typeof value;\n  return !(t === \"object\" || t === \"function\");\n};\nconst isPromise = (value) => {\n  return value instanceof Promise;\n};\nconst isString = (value) => {\n  return typeof value === \"string\";\n};\nconst isSVG = (value) => {\n  return !!value[\"isSVG\"];\n};\nconst isSVGElement = /* @__PURE__ */ (() => {\n  const svgRe = /^(t(ext$|s)|s[vwy]|g)|^set|tad|ker|p(at|s)|s(to|c$|ca|k)|r(ec|cl)|ew|us|f($|e|s)|cu|n[ei]|l[ty]|[GOP]/;\n  const svgCache = {};\n  return (element) => {\n    const cached = svgCache[element];\n    return cached !== void 0 ? cached : svgCache[element] = !element.includes(\"-\") && svgRe.test(element);\n  };\n})();\nconst isTemplateAccessor = (value) => {\n  return isFunction(value) && SYMBOL_TEMPLATE_ACCESSOR in value;\n};\nconst isTruthy = (value) => {\n  return !!value;\n};\nconst isVoidChild = (value) => {\n  return value === null || value === void 0 || typeof value === \"boolean\" || typeof value === \"symbol\";\n};\nconst noop = () => {\n  return;\n};\nconst once = (fn) => {\n  let called = false;\n  let result;\n  return () => {\n    if (!called) {\n      called = true;\n      result = fn();\n    }\n    return result;\n  };\n};\nconst isProxy = (proxy) => {\n  return proxy == null ? false : !!proxy[Symbol.for(\"__isProxy\")];\n};\nconst fixBigInt = (v) => typeof v === \"bigint\" ? v + \"n\" : v;\nconst isPureFunction = (fn) => typeof fn === \"function\" && !isObservable(fn);\nconst toArray = (v) => [...[v].flat(Infinity)];\nconst options = {\n  sync: \"init\",\n  stack: void 0\n};\nconst useRenderEffect = (fn, stack) => {\n  return effect(fn, { ...options, stack });\n};\nconst useCheapDisposed = () => {\n  let disposed = false;\n  const get2 = () => disposed;\n  const set = () => disposed = true;\n  cleanup(set);\n  return get2;\n};\nconst useMicrotask = (fn, stack) => {\n  const disposed = useCheapDisposed();\n  const runWithOwner = _with();\n  queueMicrotask(() => {\n    if (disposed()) return;\n    runWithOwner(fn, stack);\n  });\n};\nconst classesToggle = (element, classes, force) => {\n  const { className } = element;\n  if (isString(className)) {\n    if (!className) {\n      if (force) {\n        element.className = classes;\n        return;\n      } else {\n        return;\n      }\n    } else if (!force && className === classes) {\n      element.className = \"\";\n      return;\n    }\n  }\n  if (classes.includes(\" \")) {\n    classes.split(\" \").forEach((cls) => {\n      if (!cls.length) return;\n      element.classList.toggle(cls, !!force);\n    });\n  } else {\n    element.classList.toggle(classes, !!force);\n  }\n};\nconst NOOP_CHILDREN = [];\nconst FragmentUtils = {\n  make: () => {\n    return {\n      values: void 0,\n      length: 0\n    };\n  },\n  makeWithNode: (node) => {\n    return {\n      values: node,\n      length: 1\n    };\n  },\n  makeWithFragment: (fragment) => {\n    return {\n      values: fragment,\n      fragmented: true,\n      length: 1\n    };\n  },\n  getChildrenFragmented: (thiz, children = []) => {\n    const { values, length } = thiz;\n    if (!length) return children;\n    if (values instanceof Array) {\n      for (let i = 0, l = values.length; i < l; i++) {\n        const value = values[i];\n        if (value instanceof Node) {\n          children.push(value);\n        } else {\n          FragmentUtils.getChildrenFragmented(value, children);\n        }\n      }\n    } else {\n      if (values instanceof Node) {\n        children.push(values);\n      } else {\n        FragmentUtils.getChildrenFragmented(values, children);\n      }\n    }\n    return children;\n  },\n  getChildren: (thiz) => {\n    if (!thiz.length) return NOOP_CHILDREN;\n    if (!thiz.fragmented) return thiz.values;\n    if (thiz.length === 1) return FragmentUtils.getChildren(thiz.values);\n    return FragmentUtils.getChildrenFragmented(thiz);\n  },\n  pushFragment: (thiz, fragment) => {\n    FragmentUtils.pushValue(thiz, fragment);\n    thiz.fragmented = true;\n  },\n  pushNode: (thiz, node) => {\n    FragmentUtils.pushValue(thiz, node);\n  },\n  pushValue: (thiz, value) => {\n    const { values, length } = thiz;\n    if (length === 0) {\n      thiz.values = value;\n    } else if (length === 1) {\n      thiz.values = [values, value];\n    } else {\n      values.push(value);\n    }\n    thiz.length += 1;\n  },\n  replaceWithNode: (thiz, node) => {\n    thiz.values = node;\n    delete thiz.fragmented;\n    thiz.length = 1;\n  },\n  replaceWithFragment: (thiz, fragment) => {\n    thiz.values = fragment.values;\n    thiz.fragmented = fragment.fragmented;\n    thiz.length = fragment.length;\n  }\n};\nexport {\n  CONTEXTS_DATA as $,\n  isFunctionReactive as A,\n  SYMBOL_OBSERVABLE_READABLE as B,\n  SYMBOL_OBSERVABLE_WRITABLE as C,\n  DEBUGGER as D,\n  isNil as E,\n  FragmentUtils as F,\n  flatten as G,\n  useMicrotask as H,\n  isTemplateAccessor as I,\n  isSVG as J,\n  castArray as K,\n  SYMBOLS_DIRECTIVES as L,\n  DIRECTIVES as M,\n  isStore as N,\n  Owner as O,\n  SYMBOL_STORE_OBSERVABLE as P,\n  classesToggle as Q,\n  isBoolean as R,\n  SYMBOL_SUSPENSE$1 as S,\n  store as T,\n  isPrimitive as U,\n  once as V,\n  indexOf as W,\n  SYMBOL_TEMPLATE_ACCESSOR as X,\n  SYMBOL_OBSERVABLE as Y,\n  cleanup as Z,\n  isBatching as _,\n  OWNER as a,\n  SYMBOL_SUSPENSE as a0,\n  SYMBOL_OBSERVABLE_FROZEN as a1,\n  SYMBOL_UNTRACKED as a2,\n  castError as a3,\n  isComponent as a4,\n  isError as a5,\n  isFalsy as a6,\n  isPromise as a7,\n  isTruthy as a8,\n  noop as a9,\n  writable as aA,\n  OBSERVABLE_TRUE as aB,\n  OBSERVABLE_FALSE as aC,\n  Scheduler$1 as aD,\n  useCheapDisposed as aE,\n  isProxy as aa,\n  fixBigInt as ab,\n  isPureFunction as ac,\n  toArray as ad,\n  _with as ae,\n  setBatch as af,\n  noop$1 as ag,\n  isFunction$1 as ah,\n  SYMBOL_OBSERVABLE_BOOLEAN as ai,\n  Observer as aj,\n  Observable as ak,\n  UNINITIALIZED as al,\n  UNAVAILABLE as am,\n  DIRTY_MAYBE_YES as an,\n  frozen as ao,\n  readable as ap,\n  SYMBOL_CACHED as aq,\n  lazyArrayPush as ar,\n  lazyArrayEach as as,\n  lazySetEach as at,\n  Effect as au,\n  DIRTY_YES as av,\n  isArray$1 as aw,\n  isEqual as ax,\n  SYMBOL_STORE_VALUES as ay,\n  is as az,\n  lazySetDelete as b,\n  callStack as c,\n  SYMBOL_UNTRACKED_UNWRAPPED as d,\n  Stack as e,\n  SYMBOL_CLONE as f,\n  SYMBOL_JSX as g,\n  SYMBOL_DEFAULT as h,\n  isObject as i,\n  isFunction as j,\n  isString as k,\n  lazySetAdd as l,\n  isSVGElement as m,\n  isNode as n,\n  isVoidChild as o,\n  isClass as p,\n  get as q,\n  useRenderEffect as r,\n  assign as s,\n  context as t,\n  untrack as u,\n  SYMBOL_SUSPENSE_COLLECTOR as v,\n  effect as w,\n  isArray as x,\n  isObservable as y,\n  SYMBOL_UNCACHED as z\n};\n//# sourceMappingURL=fragment-BdrG6unk.js.map\n","import { d as SYMBOL_UNTRACKED_UNWRAPPED, D as DEBUGGER, e as Stack, f as SYMBOL_CLONE } from \"./fragment-BdrG6unk.js\";\nconst SYMBOL_STACK = Symbol(\"STACK\");\nconst wrapElement = (element) => {\n  element[SYMBOL_UNTRACKED_UNWRAPPED] = true;\n  if (DEBUGGER.test)\n    element[SYMBOL_STACK] = new Stack(\"createElement\");\n  return element;\n};\nconst wrapCloneElement = (target, component, props) => {\n  target[SYMBOL_CLONE] = { Component: component, props };\n  return target;\n};\nexport {\n  SYMBOL_STACK as S,\n  wrapElement as a,\n  wrapCloneElement as w\n};\n//# sourceMappingURL=wrap_clone_element-cGq665B_.js.map\n","import { x as isArray, y as isObservable, z as SYMBOL_UNCACHED, j as isFunction, A as isFunctionReactive, B as SYMBOL_OBSERVABLE_READABLE, C as SYMBOL_OBSERVABLE_WRITABLE, q as get, r as useRenderEffect, k as isString, E as isNil, G as flatten, H as useMicrotask, F as FragmentUtils, I as isTemplateAccessor, J as isSVG, K as castArray, L as SYMBOLS_DIRECTIVES, t as context, M as DIRECTIVES, N as isStore, u as untrack, P as SYMBOL_STORE_OBSERVABLE, Q as classesToggle, i as isObject, o as isVoidChild, R as isBoolean, T as store } from \"./fragment-BdrG6unk.js\";\nconst { createComment, createHTMLNode, createSVGNode, createText, createDocumentFragment } = (() => {\n  if (typeof via !== \"undefined\") {\n    const document2 = via.document;\n    const createComment2 = document2.createComment;\n    const createHTMLNode2 = document2.createElement;\n    const createSVGNode2 = (name) => document2.createElementNS(\"http://www.w3.org/2000/svg\", name);\n    const createText2 = document2.createTextNode;\n    const createDocumentFragment2 = document2.createDocumentFragment;\n    return { createComment: createComment2, createHTMLNode: createHTMLNode2, createSVGNode: createSVGNode2, createText: createText2, createDocumentFragment: createDocumentFragment2 };\n  } else {\n    const createComment2 = document.createComment.bind(document, \"\");\n    const createHTMLNode2 = document.createElement.bind(document);\n    const createSVGNode2 = document.createElementNS.bind(document, \"http://www.w3.org/2000/svg\");\n    const createText2 = document.createTextNode.bind(document);\n    const createDocumentFragment2 = document.createDocumentFragment.bind(document);\n    return { createComment: createComment2, createHTMLNode: createHTMLNode2, createSVGNode: createSVGNode2, createText: createText2, createDocumentFragment: createDocumentFragment2 };\n  }\n})();\nconst dummyNode = createComment(\"\");\nconst beforeDummyWrapper = [dummyNode];\nconst afterDummyWrapper = [dummyNode];\nconst diff = (parent, before, after, nextSibling) => {\n  if (before === after) return;\n  if (before instanceof Node) {\n    if (after instanceof Node) {\n      if (before.parentNode === parent) {\n        parent.replaceChild(after, before);\n        return;\n      }\n    }\n    beforeDummyWrapper[0] = before;\n    before = beforeDummyWrapper;\n  }\n  if (after instanceof Node) {\n    afterDummyWrapper[0] = after;\n    after = afterDummyWrapper;\n  }\n  const bLength = after.length;\n  let aEnd = before.length;\n  let bEnd = bLength;\n  let aStart = 0;\n  let bStart = 0;\n  let map = null;\n  let removable;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? after[bStart - 1].nextSibling : after[bEnd - bStart] : nextSibling;\n      if (bStart < bEnd) {\n        if (node) {\n          node.before.apply(node, after.slice(bStart, bEnd));\n        } else {\n          parent.append.apply(parent, after.slice(bStart, bEnd));\n        }\n        bStart = bEnd;\n      }\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(before[aStart])) {\n          removable = before[aStart];\n          if (removable.parentNode === parent) {\n            parent.removeChild(removable);\n          }\n        }\n        aStart++;\n      }\n    } else if (before[aStart] === after[bStart]) {\n      aStart++;\n      bStart++;\n    } else if (before[aEnd - 1] === after[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    } else if (before[aStart] === after[bEnd - 1] && after[bStart] === before[aEnd - 1]) {\n      const node = before[--aEnd].nextSibling;\n      parent.insertBefore(\n        after[bStart++],\n        before[aStart++].nextSibling\n      );\n      parent.insertBefore(after[--bEnd], node);\n      before[aEnd] = after[bEnd];\n    } else {\n      if (!map) {\n        map = /* @__PURE__ */ new Map();\n        let i = bStart;\n        while (i < bEnd)\n          map.set(after[i], i++);\n      }\n      if (map.has(before[aStart])) {\n        const index = map.get(before[aStart]);\n        if (bStart < index && index < bEnd) {\n          let i = aStart;\n          let sequence = 1;\n          while (++i < aEnd && i < bEnd && map.get(before[i]) === index + sequence)\n            sequence++;\n          if (sequence > index - bStart) {\n            const node = before[aStart];\n            if (bStart < index) {\n              if (node) {\n                node.before.apply(node, after.slice(bStart, index));\n              } else {\n                parent.append.apply(parent, after.slice(bStart, index));\n              }\n              bStart = index;\n            }\n          } else {\n            parent.replaceChild(\n              after[bStart++],\n              before[aStart++]\n            );\n          }\n        } else\n          aStart++;\n      } else {\n        removable = before[aStart++];\n        if (removable.parentNode === parent) {\n          parent.removeChild(removable);\n        }\n      }\n    }\n  }\n  beforeDummyWrapper[0] = dummyNode;\n  afterDummyWrapper[0] = dummyNode;\n};\nconst resolveChild = (value, setter, _dynamic = false, stack) => {\n  if (isArray(value)) {\n    const [values, hasObservables] = resolveArraysAndStatics(value);\n    values[SYMBOL_UNCACHED] = value[SYMBOL_UNCACHED];\n    setter(values, hasObservables || _dynamic, stack);\n  } else if (isFunction(value)) {\n    if (!isFunctionReactive(value)) {\n      if (value[SYMBOL_OBSERVABLE_READABLE] ?? value[SYMBOL_OBSERVABLE_WRITABLE])\n        (value[SYMBOL_OBSERVABLE_READABLE] ?? value[SYMBOL_OBSERVABLE_WRITABLE]).stack = stack;\n      const newValue = get(value);\n      resolveChild(newValue, setter, _dynamic, stack);\n    } else {\n      useRenderEffect((stack2) => {\n        if (value[SYMBOL_OBSERVABLE_READABLE] ?? value[SYMBOL_OBSERVABLE_WRITABLE])\n          (value[SYMBOL_OBSERVABLE_READABLE] ?? value[SYMBOL_OBSERVABLE_WRITABLE]).stack = stack2;\n        const newValue = get(value);\n        resolveChild(newValue, setter, true, stack2);\n      }, stack);\n    }\n  } else {\n    setter(value, _dynamic, stack);\n  }\n};\nconst resolveClass = (classes, resolved = {}) => {\n  if (isString(classes)) {\n    classes.split(/\\s+/g).filter(Boolean).filter((cls) => {\n      resolved[cls] = true;\n    });\n  } else if (isFunction(classes)) {\n    resolveClass(classes(), resolved);\n  } else if (isArray(classes)) {\n    classes.forEach((cls) => {\n      resolveClass(cls, resolved);\n    });\n  } else if (classes) {\n    for (const key in classes) {\n      const value = classes[key];\n      const isActive = !!get(value);\n      if (!isActive) continue;\n      resolved[key] = true;\n    }\n  }\n  return resolved;\n};\nconst resolveStyle = (styles, resolved = {}) => {\n  if (isString(styles)) {\n    return styles;\n  } else if (isFunction(styles)) {\n    return resolveStyle(styles(), resolved);\n  } else if (isArray(styles)) {\n    styles.forEach((style) => {\n      resolveStyle(style, resolved);\n    });\n  } else if (styles) {\n    for (const key in styles) {\n      const value = styles[key];\n      resolved[key] = get(value);\n    }\n  }\n  return resolved;\n};\nconst resolveArraysAndStatics = /* @__PURE__ */ (() => {\n  const DUMMY_RESOLVED = [];\n  const resolveArraysAndStaticsInner = (values, resolved, hasObservables) => {\n    for (let i = 0, l = values.length; i < l; i++) {\n      const value = values[i];\n      const type = typeof value;\n      if (type === \"string\" || type === \"number\" || type === \"bigint\") {\n        if (resolved === DUMMY_RESOLVED) resolved = values.slice(0, i);\n        resolved.push(createText(value));\n      } else if (type === \"object\" && isArray(value)) {\n        if (resolved === DUMMY_RESOLVED) resolved = values.slice(0, i);\n        hasObservables = resolveArraysAndStaticsInner(value, resolved, hasObservables)[1];\n      } else if (type === \"function\" && isObservable(value)) {\n        if (resolved !== DUMMY_RESOLVED) resolved.push(value);\n        hasObservables = true;\n      } else {\n        if (resolved !== DUMMY_RESOLVED) resolved.push(value);\n      }\n    }\n    if (resolved === DUMMY_RESOLVED) resolved = values;\n    return [resolved, hasObservables];\n  };\n  return (values) => {\n    return resolveArraysAndStaticsInner(values, DUMMY_RESOLVED, false);\n  };\n})();\nconst kebabToCamelCase = (str) => {\n  return str.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n};\nconst camelToKebabCase = (str) => {\n  return str.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`);\n};\nconst normalizePropertyPath = (path) => {\n  if (path.includes(\"$\")) {\n    path = path.replace(/\\$/g, \".\");\n  }\n  if (path.includes(\".\")) {\n    return path.split(\".\").map((part) => kebabToCamelCase(part)).join(\".\");\n  }\n  return kebabToCamelCase(path);\n};\nconst setNestedAttribute = (element, attributeName, value) => {\n  const normalizedPath = normalizePropertyPath(attributeName);\n  if (normalizedPath.startsWith(\"style.\")) {\n    const styleProperty = normalizedPath.slice(6);\n    if (element.style) {\n      element.style[styleProperty] = value;\n    }\n    return;\n  }\n  if (normalizedPath.includes(\".\")) {\n    const keys = normalizedPath.split(\".\");\n    const lastKey = keys.pop();\n    let target = element;\n    if (!target.props) {\n      target.props = {};\n    }\n    target = target.props;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (!(key in target) || typeof target[key] !== \"object\" || target[key] === null) {\n        target[key] = {};\n      }\n      target = target[key];\n    }\n    if (lastKey) {\n      target[lastKey] = value;\n    }\n    return;\n  }\n  const propName = kebabToCamelCase(normalizedPath);\n  element[propName] = value;\n};\nconst setAttributeStatic = /* @__PURE__ */ (() => {\n  const attributesBoolean = /* @__PURE__ */ new Set([\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"]);\n  const attributeCamelCasedRe = /e(r[HRWrv]|[Vawy])|Con|l(e[Tcs]|c)|s(eP|y)|a(t[rt]|u|v)|Of|Ex|f[XYa]|gt|hR|d[Pg]|t[TXYd]|[UZq]/;\n  const attributesCache = {};\n  const uppercaseRe = /[A-Z]/g;\n  const normalizeKeySvg = (key) => {\n    return attributesCache[key] || (attributesCache[key] = attributeCamelCasedRe.test(key) ? key : key.replace(uppercaseRe, (char) => `-${char.toLowerCase()}`));\n  };\n  return (element, key, value) => {\n    if (key.includes(\".\") || key.includes(\"$\")) {\n      setNestedAttribute(element, key, value);\n      return;\n    }\n    if (isSVG(element)) {\n      key = key === \"xlinkHref\" || key === \"xlink:href\" ? \"href\" : normalizeKeySvg(key);\n      if (isNil(value) || value === false && attributesBoolean.has(key)) {\n        element.removeAttribute(key);\n      } else {\n        element.setAttribute(key, String(value));\n      }\n    } else {\n      if (isNil(value) || value === false && attributesBoolean.has(key)) {\n        element.removeAttribute(key);\n      } else {\n        value = value === true ? \"\" : String(value);\n        element.setAttribute(key, value);\n      }\n    }\n  };\n})();\nconst setAttribute = (element, key, value, stack) => {\n  if (isFunction(value) && isFunctionReactive(value))\n    useRenderEffect(() => {\n      var _a;\n      const unwrappedValue = value();\n      const { toHtml } = ((_a = value[SYMBOL_OBSERVABLE_WRITABLE]) == null ? void 0 : _a.options) ?? {};\n      setAttributeStatic(element, key, toHtml ? toHtml(unwrappedValue) : unwrappedValue);\n    }, stack);\n  else\n    setAttributeStatic(element, key, get(value));\n};\nconst setChildReplacementFunction = (parent, fragment, child, stack) => {\n  useRenderEffect((stack2) => {\n    let valueNext = child();\n    while (isFunction(valueNext)) {\n      valueNext = valueNext();\n    }\n    setChildStatic(parent, fragment, false, valueNext, true, child, stack2);\n  }, stack);\n};\nconst setChildReplacementText = (child, childPrev) => {\n  if (childPrev.nodeType === 3) {\n    childPrev.nodeValue = child;\n    return childPrev;\n  } else {\n    const parent = childPrev.parentElement;\n    if (!parent) throw new Error(\"Invalid child replacement\");\n    const textNode = createText(child);\n    parent.replaceChild(textNode, childPrev);\n    return textNode;\n  }\n};\nconst setChildReplacement = (child, childPrev, stack) => {\n  const type = typeof child;\n  if (type === \"string\" || type === \"number\" || type === \"bigint\") {\n    setChildReplacementText(String(child), childPrev);\n  } else {\n    const parent = childPrev.parentElement ?? childPrev.parentNode;\n    if (!parent) throw new Error(\"Invalid child replacement\");\n    const fragment = FragmentUtils.makeWithNode(childPrev);\n    if (type === \"function\") {\n      setChildReplacementFunction(parent, fragment, child, stack);\n    } else {\n      setChild(parent, child, fragment, stack);\n    }\n  }\n};\nconst setChildStatic = (parent, fragment, fragmentOnly, child, dynamic, childComp, stack) => {\n  if (!dynamic && isVoidChild(child)) return;\n  const prev = FragmentUtils.getChildren(fragment);\n  const prevIsArray = prev instanceof Array;\n  const prevLength = prevIsArray ? prev.length : 1;\n  const prevFirst = prevIsArray ? prev[0] : prev;\n  const prevLast = prevIsArray ? prev[prevLength - 1] : prev;\n  const prevSibling = (prevLast == null ? void 0 : prevLast.nextSibling) || null;\n  if (prevLength === 0) {\n    const type = typeof child;\n    if (type === \"string\" || type === \"number\" || type === \"bigint\") {\n      const textNode = createText(child);\n      if (!fragmentOnly) {\n        parent.appendChild(textNode);\n      }\n      FragmentUtils.replaceWithNode(fragment, textNode);\n      return;\n    } else if (type === \"object\" && child !== null && typeof child.nodeType === \"number\") {\n      const node = child;\n      if (!fragmentOnly) {\n        parent.insertBefore(node, null);\n      }\n      FragmentUtils.replaceWithNode(fragment, node);\n      return;\n    }\n  }\n  if (prevLength === 1) {\n    const type = typeof child;\n    if (type === \"string\" || type === \"number\" || type === \"bigint\") {\n      const node = setChildReplacementText(String(child), prevFirst);\n      FragmentUtils.replaceWithNode(fragment, node);\n      return;\n    }\n  }\n  const fragmentNext = FragmentUtils.make();\n  const children = isArray(child) ? child : [child];\n  for (let i = 0, l = children.length; i < l; i++) {\n    const child2 = children[i];\n    const type = typeof child2;\n    if (type === \"string\" || type === \"number\" || type === \"bigint\") {\n      FragmentUtils.pushNode(fragmentNext, createText(child2));\n    } else if (type === \"object\" && child2 !== null && typeof child2.nodeType === \"number\") {\n      FragmentUtils.pushNode(fragmentNext, child2);\n    } else if (type === \"function\") {\n      const fragment2 = FragmentUtils.make();\n      let childFragmentOnly = !fragmentOnly;\n      FragmentUtils.pushFragment(fragmentNext, fragment2);\n      resolveChild(child2, (child3, dynamic2, stack2) => {\n        const fragmentOnly2 = childFragmentOnly;\n        childFragmentOnly = false;\n        setChildStatic(parent, fragment2, fragmentOnly2, child3, dynamic2, children[i], stack2);\n      }, false, stack);\n    }\n  }\n  let next = FragmentUtils.getChildren(fragmentNext);\n  let nextLength = fragmentNext.length;\n  if (nextLength === 0 && prevLength === 1 && prevFirst.nodeType === 8) {\n    return;\n  }\n  if (!fragmentOnly && (nextLength === 0 || prevLength === 1 && prevFirst.nodeType === 8 || children[SYMBOL_UNCACHED])) {\n    const { childNodes } = parent;\n    if (childNodes.length === prevLength) {\n      parent.textContent = \"\";\n      if (nextLength === 0) {\n        const placeholder = (\n          /* childComp[SYMBOL_DOM] = */\n          createComment(\"\")\n        );\n        FragmentUtils.pushNode(fragmentNext, placeholder);\n        if (next !== fragmentNext.values) {\n          next = placeholder;\n          nextLength += 1;\n        }\n      }\n      if (prevSibling) {\n        if (next instanceof Array) {\n          prevSibling.before.apply(prevSibling, next);\n        } else {\n          parent.insertBefore(next, prevSibling);\n        }\n      } else {\n        if (next instanceof Array) {\n          for (const node of next) parent.appendChild(node);\n        } else {\n          parent.appendChild(next);\n        }\n      }\n      FragmentUtils.replaceWithFragment(fragment, fragmentNext);\n      return;\n    }\n  }\n  if (nextLength === 0) {\n    const placeholder = (\n      /* childComp[SYMBOL_DOM] = */\n      createComment(\"\")\n    );\n    FragmentUtils.pushNode(fragmentNext, placeholder);\n    if (next !== fragmentNext.values) {\n      next = placeholder;\n      nextLength += 1;\n    }\n  }\n  if (!fragmentOnly) {\n    diff(parent, prev, next, prevSibling);\n  }\n  FragmentUtils.replaceWithFragment(fragment, fragmentNext);\n};\nconst setChild = (parent, child, fragment = FragmentUtils.make(), stack) => {\n  const cd = child;\n  resolveChild(cd, (child2, dynamic, stack2) => setChildStatic(parent, fragment, false, child2, dynamic, cd, stack2), false, stack);\n};\nconst setClassStatic = classesToggle;\nconst setClass = (element, key, value, stack) => {\n  if (isFunction(value) && isFunctionReactive(value)) {\n    useRenderEffect(() => {\n      setClassStatic(element, key, value());\n    }, stack);\n  } else {\n    setClassStatic(element, key, get(value));\n  }\n};\nconst setClassBooleanStatic = (element, value, key, keyPrev) => {\n  if (keyPrev && keyPrev !== true) {\n    setClassStatic(element, keyPrev, false);\n  }\n  if (key && key !== true) {\n    setClassStatic(element, key, value);\n  }\n};\nconst setClassBoolean = (element, value, key, stack) => {\n  if (isFunction(key) && isFunctionReactive(key)) {\n    let keyPrev;\n    useRenderEffect(() => {\n      const keyNext = key();\n      setClassBooleanStatic(element, value, keyNext, keyPrev);\n      keyPrev = keyNext;\n    }, stack);\n  } else {\n    setClassBooleanStatic(element, value, get(key));\n  }\n};\nconst setClassesStatic = (element, object, objectPrev, stack) => {\n  if (isString(object)) {\n    if (isSVG(element)) {\n      element.setAttribute(\"class\", object);\n    } else {\n      element.className = object;\n    }\n  } else {\n    if (objectPrev) {\n      if (isString(objectPrev)) {\n        if (objectPrev) {\n          if (isSVG(element)) {\n            element.setAttribute(\"class\", \"\");\n          } else {\n            element.className = \"\";\n          }\n        }\n      } else if (isArray(objectPrev)) {\n        objectPrev = store.unwrap(objectPrev);\n        for (let i = 0, l = objectPrev.length; i < l; i++) {\n          if (!objectPrev[i]) continue;\n          setClassBoolean(element, false, objectPrev[i], stack);\n        }\n      } else {\n        objectPrev = store.unwrap(objectPrev);\n        for (const key in objectPrev) {\n          if (object && key in object) continue;\n          setClass(element, key, false, stack);\n        }\n      }\n    }\n    if (isArray(object)) {\n      if (isStore(object)) {\n        for (let i = 0, l = object.length; i < l; i++) {\n          const fn = untrack(() => isFunction(object[i]) ? object[i] : object[SYMBOL_STORE_OBSERVABLE](String(i)));\n          setClassBoolean(element, true, fn, stack);\n        }\n      } else {\n        for (let i = 0, l = object.length; i < l; i++) {\n          if (!object[i]) continue;\n          setClassBoolean(element, true, object[i], stack);\n        }\n      }\n    } else {\n      if (isStore(object)) {\n        for (const key in object) {\n          const fn = untrack(() => isFunction(object[key]) ? object[key] : object[SYMBOL_STORE_OBSERVABLE](key));\n          setClass(element, key, fn, stack);\n        }\n      } else {\n        for (const key in object) {\n          setClass(element, key, object[key], stack);\n        }\n      }\n    }\n  }\n};\nconst setClasses = (element, object, stack) => {\n  if (isFunction(object) || isArray(object)) {\n    let objectPrev;\n    useRenderEffect(() => {\n      const objectNext = resolveClass(object);\n      setClassesStatic(element, objectNext, objectPrev, stack);\n      objectPrev = objectNext;\n    }, stack);\n  } else {\n    setClassesStatic(element, object, null, stack);\n  }\n};\nconst setDirective = (element, directive, args) => {\n  const symbol = SYMBOLS_DIRECTIVES[directive] || Symbol();\n  const data = context(symbol) || DIRECTIVES[symbol];\n  if (!data) throw new Error(`Directive \"${directive}\" not found`);\n  const call = () => data.fn(element, ...castArray(args));\n  const stack = new Error();\n  if (data.immediate) {\n    call();\n  } else {\n    useMicrotask(call, stack);\n  }\n};\nconst setEventStatic = /* @__PURE__ */ (() => {\n  const delegatedEvents = {\n    onauxclick: [\"_onauxclick\", false],\n    onbeforeinput: [\"_onbeforeinput\", false],\n    onclick: [\"_onclick\", false],\n    ondblclick: [\"_ondblclick\", false],\n    onfocusin: [\"_onfocusin\", false],\n    onfocusout: [\"_onfocusout\", false],\n    oninput: [\"_oninput\", false],\n    onkeydown: [\"_onkeydown\", false],\n    onkeyup: [\"_onkeyup\", false],\n    onmousedown: [\"_onmousedown\", false],\n    onmouseup: [\"_onmouseup\", false]\n  };\n  const delegate = (event) => {\n    const key = `_${event}`;\n    document.addEventListener(event.slice(2), (event2) => {\n      const targets = event2.composedPath();\n      let target = null;\n      Object.defineProperty(event2, \"currentTarget\", {\n        configurable: true,\n        get() {\n          return target;\n        }\n      });\n      for (let i = 0, l = targets.length; i < l; i++) {\n        target = targets[i];\n        const handler = target[key];\n        if (!handler) continue;\n        handler(event2);\n        if (event2.cancelBubble) break;\n      }\n      target = null;\n    });\n  };\n  return (element, event, value) => {\n    if (event.startsWith(\"onmiddleclick\")) {\n      const _value = value;\n      event = `onauxclick${event.slice(13)}`;\n      value = _value && ((event2) => event2[\"button\"] === 1 && _value(event2));\n    }\n    const delegated = delegatedEvents[event];\n    if (delegated) {\n      if (!delegated[1]) {\n        delegated[1] = true;\n        delegate(event);\n      }\n      element[delegated[0]] = value;\n    } else if (event.endsWith(\"passive\")) {\n      const isCapture = event.endsWith(\"capturepassive\");\n      const type = event.slice(2, -7 - (isCapture ? 7 : 0));\n      const key = `_${event}`;\n      const valuePrev = element[key];\n      if (valuePrev) element.removeEventListener(type, valuePrev, { capture: isCapture });\n      if (value) element.addEventListener(type, value, { passive: true, capture: isCapture });\n      element[key] = value;\n    } else if (event.endsWith(\"capture\")) {\n      const type = event.slice(2, -7);\n      const key = `_${event}`;\n      const valuePrev = element[key];\n      if (valuePrev) element.removeEventListener(type, valuePrev, { capture: true });\n      if (value) element.addEventListener(type, value, { capture: true });\n      element[key] = value;\n    } else {\n      element[event] = value;\n    }\n  };\n})();\nconst setEvent = (element, event, value) => {\n  setEventStatic(element, event, value);\n};\nconst setHTMLStatic = (element, value) => {\n  element.innerHTML = String(isNil(value) ? \"\" : value);\n};\nconst setHTML = (element, value, stack) => {\n  useRenderEffect(() => {\n    setHTMLStatic(element, get(get(value).__html));\n  }, stack);\n};\nconst setPropertyStatic = (element, key, value) => {\n  const isComment = element instanceof Comment;\n  if (key === \"tabIndex\" && isBoolean(value)) {\n    value = value ? 0 : void 0;\n  }\n  if (key === \"value\" && !isComment) {\n    if (element.tagName === \"PROGRESS\") {\n      value ?? (value = null);\n    } else if (element.tagName === \"SELECT\" && !element[\"_$inited\"]) {\n      element[\"_$inited\"] = true;\n      queueMicrotask(() => element[key] = value);\n    }\n  }\n  try {\n    element[key] = value;\n    if (isNil(value) && !isComment) {\n      setAttributeStatic(element, key, null);\n    }\n  } catch {\n    if (!isComment)\n      setAttributeStatic(element, key, value);\n  }\n};\nconst setProperty = (element, key, value, stack) => {\n  if (isFunction(value) && isFunctionReactive(value)) {\n    useRenderEffect(() => {\n      setPropertyStatic(element, key, value());\n    }, stack);\n  } else {\n    setPropertyStatic(element, key, get(value));\n  }\n};\nconst setRef = (element, value) => {\n  if (isNil(value)) return;\n  const values = flatten(castArray(value)).filter(Boolean);\n  if (!values.length) return;\n  const stack = new Error();\n  useMicrotask(() => untrack(() => values.forEach((value2) => value2 == null ? void 0 : value2(element))), stack);\n};\nconst setStyleStatic = /* @__PURE__ */ (() => {\n  const propertyNonDimensionalRe = /^(-|f[lo].*[^se]$|g.{5,}[^ps]$|z|o[pr]|(W.{5})?[lL]i.*(t|mp)$|an|(bo|s).{4}Im|sca|m.{6}[ds]|ta|c.*[st]$|wido|ini)/i;\n  const propertyNonDimensionalCache = {};\n  return (element, key, value) => {\n    if (key.charCodeAt(0) === 45) {\n      if (isNil(value)) {\n        element.style.removeProperty(key);\n      } else {\n        element.style.setProperty(key, String(value));\n      }\n    } else if (isNil(value)) {\n      element.style[key] = null;\n    } else {\n      element.style[key] = isString(value) || isObject(value) || (propertyNonDimensionalCache[key] || (propertyNonDimensionalCache[key] = propertyNonDimensionalRe.test(key))) ? value : `${value}px`;\n    }\n  };\n})();\nconst setStyle = (element, key, value, stack) => {\n  if (isFunction(value) && isFunctionReactive(value)) {\n    useRenderEffect(() => {\n      setStyleStatic(element, key, value());\n    }, stack);\n  } else {\n    setStyleStatic(element, key, get(value));\n  }\n};\nconst setStylesStatic = (element, object, objectPrev, stack) => {\n  if (isString(object)) {\n    element.setAttribute(\"style\", object);\n  } else {\n    if (objectPrev) {\n      if (isString(objectPrev)) {\n        if (objectPrev) {\n          element.style.cssText = \"\";\n        }\n      } else {\n        objectPrev = store.unwrap(objectPrev);\n        for (const key in objectPrev) {\n          if (object && key in object) continue;\n          setStyleStatic(element, key, null);\n        }\n      }\n    }\n    if (isStore(object)) {\n      for (const key in object) {\n        const fn = untrack(() => isFunction(object[key]) ? object[key] : object[SYMBOL_STORE_OBSERVABLE](key));\n        setStyle(element, key, fn, stack);\n      }\n    } else {\n      for (const key in object) {\n        setStyle(element, key, object[key], stack);\n      }\n    }\n  }\n};\nconst setStyles = (element, object, stack) => {\n  if (isFunction(object) || isArray(object)) {\n    let objectPrev;\n    useRenderEffect((stack2) => {\n      const objectNext = resolveStyle(object);\n      setStylesStatic(element, objectNext, objectPrev, stack2);\n      objectPrev = objectNext;\n    }, stack);\n  } else {\n    setStylesStatic(element, get(object), null, stack);\n  }\n};\nconst setTemplateAccessor = (element, key, value) => {\n  if (key === \"children\") {\n    const placeholder = createText(\"\");\n    element.insertBefore(placeholder, null);\n    value(element, \"setChildReplacement\", void 0, placeholder);\n  } else if (key === \"ref\") {\n    value(element, \"setRef\");\n  } else if (key === \"style\") {\n    value(element, \"setStyles\");\n  } else if (key === \"class\" || key === \"className\") {\n    if (!isSVG(element)) {\n      element.className = \"\";\n    }\n    value(element, \"setClasses\");\n  } else if (key === \"dangerouslySetInnerHTML\") {\n    value(element, \"setHTML\");\n  } else if (key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110) {\n    value(element, \"setEvent\", key.toLowerCase());\n  } else if (key.charCodeAt(0) === 117 && key.charCodeAt(3) === 58) {\n    value(element, \"setDirective\", key.slice(4));\n  } else if (key === \"innerHTML\" || key === \"outerHTML\" || key === \"textContent\" || key === \"className\") ;\n  else if (key in element && !isSVG(element)) {\n    value(element, \"setProperty\", key);\n  } else {\n    element.setAttribute(key, \"\");\n    value(element, \"setAttribute\", key);\n  }\n};\nconst setProp = (element, key, value, stack) => {\n  if (element instanceof Comment || element instanceof Text) {\n    if (key === \"ref\")\n      setRef(element, value);\n    else if (key in element)\n      setProperty(element, key, value, stack);\n  } else {\n    if (value === void 0) return;\n    if (isTemplateAccessor(value)) {\n      setTemplateAccessor(element, key, value);\n    } else if (key === \"children\") {\n      setChild(element, value, FragmentUtils.make(), stack);\n    } else if (key === \"ref\") {\n      setRef(element, value);\n    } else if (key === \"style\") {\n      setStyles(element, value, stack);\n    } else if (key === \"class\" || key === \"className\") {\n      setClasses(element, value, stack);\n    } else if (key === \"dangerouslySetInnerHTML\") {\n      setHTML(element, value, stack);\n    } else if (key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110) {\n      setEvent(element, key.toLowerCase(), value);\n    } else if (key.charCodeAt(0) === 117 && key.charCodeAt(3) === 58) {\n      setDirective(element, key.slice(4), value);\n    } else if (key === \"innerHTML\" || key === \"outerHTML\" || key === \"textContent\" || key === \"className\") ;\n    else if (key in element && !isSVG(element)) {\n      setProperty(element, key, value, stack);\n    } else {\n      setAttribute(element, key, value, stack);\n    }\n  }\n};\nconst setProps = (element, object, stack) => {\n  for (const key in object) {\n    setProp(element, key, object[key], stack);\n  }\n};\nexport {\n  createText as a,\n  createSVGNode as b,\n  createComment as c,\n  createHTMLNode as d,\n  setProps as e,\n  setStyles as f,\n  setRef as g,\n  setProperty as h,\n  setHTML as i,\n  setEvent as j,\n  setClasses as k,\n  setChildReplacement as l,\n  setAttribute as m,\n  setProp as n,\n  camelToKebabCase as o,\n  normalizePropertyPath as p,\n  kebabToCamelCase as q,\n  resolveArraysAndStatics as r,\n  setChild as s\n};\n//# sourceMappingURL=setters-D4dgVjKR.js.map\n","import { w as wrapCloneElement, a as wrapElement } from \"./wrap_clone_element-cGq665B_.js\";\nimport { g as SYMBOL_JSX, f as SYMBOL_CLONE, h as SYMBOL_DEFAULT, i as isObject, j as isFunction, k as isString, m as isSVGElement, n as isNode, o as isVoidChild, u as untrack, p as isClass, e as Stack } from \"./fragment-BdrG6unk.js\";\nimport { c as createComment, a as createText, b as createSVGNode, d as createHTMLNode, e as setProps } from \"./setters-D4dgVjKR.js\";\nconst Fragment = ({ children, ...props }) => {\n  return children;\n};\nconst wrapJsx = (props) => {\n  if (props[SYMBOL_JSX]) return props;\n  props[SYMBOL_JSX] = true;\n  return props;\n};\nconst unwrapJsx = (props) => {\n  delete props[SYMBOL_JSX];\n  return props;\n};\nconst isJsx = (props) => !!props[SYMBOL_JSX];\nfunction getProps(component, props) {\n  var _a;\n  if (typeof component === \"string\") {\n    const ce = customElements.get(component);\n    if (!!ce) {\n      const defaultPropsFn = (_a = ce.__component__) == null ? void 0 : _a[SYMBOL_DEFAULT];\n      if (!defaultPropsFn) {\n        console.error(`Component ${component} is missing default props. Please use the 'defaults' helper function to provide default props.`);\n      }\n      if (!props) props = defaultPropsFn() ?? {};\n    }\n  }\n  if (!props) props = {};\n  return wrapJsx(props);\n}\nfunction jsx(component, props, ...children) {\n  if (typeof children === \"string\")\n    return wrapCloneElement(createElement(component, props ?? {}, children), component, props);\n  props = getProps(component, props);\n  if (typeof children === \"string\")\n    Object.assign(props, { children });\n  return wrapCloneElement(createElement(component, props, props == null ? void 0 : props.key), component, props);\n}\nconst jsxDEV = (component, props, key, isStatic, source, self) => {\n  props = getProps(component, props);\n  if (key)\n    Object.assign(props, { key });\n  return wrapCloneElement(createElement(component, props), component, props);\n};\nconst getMeta = (target) => target == null ? void 0 : target[SYMBOL_CLONE];\nconst jsxs = jsx;\nconst createElement = (component, _props, ..._children) => {\n  const children = _children.length > 1 ? _children : _children.length > 0 ? _children[0] : void 0;\n  const hasChildren = !isVoidChild(children);\n  const { ...rest } = _props ?? {};\n  if (hasChildren && isObject(_props) && \"children\" in _props) {\n    throw new Error('Providing \"children\" both as a prop and as rest arguments is forbidden');\n  }\n  if (isFunction(component)) {\n    const props = hasChildren ? Object.assign(_props, { children }) : _props;\n    return wrapElement(() => {\n      return untrack(() => isClass(component) ? new component(props) : component.call(component, props));\n    });\n  } else if (isString(component)) {\n    const isSVG = isSVGElement(component);\n    const isComment = component === \"comment\";\n    const isText = component === \"text\";\n    const createNode = isSVG ? createSVGNode : createHTMLNode;\n    const create = isComment ? () => createComment(_props.data ?? \"\") : isText ? () => createText(_props.data ?? \"\") : createNode;\n    return wrapElement(() => {\n      const ce = customElements.get(component);\n      const child = !!ce ? new ce(_props) : create(component);\n      if (isSVG) child[\"isSVG\"] = true;\n      const stack = new Stack();\n      untrack(() => {\n        if (_props) {\n          if (!!ce) {\n            const { children: children2, ...np } = _props;\n            setProps(child, np, stack);\n          } else\n            setProps(child, _props, stack);\n        }\n      });\n      return child;\n    });\n  } else if (isNode(component)) {\n    return wrapElement(() => component);\n  } else {\n    throw new Error(\"Invalid component\");\n  }\n};\nexport {\n  Fragment as F,\n  jsxDEV as a,\n  jsxs as b,\n  createElement as c,\n  getMeta as g,\n  isJsx as i,\n  jsx as j,\n  unwrapJsx as u\n};\n//# sourceMappingURL=create_element-WjH6kFsa.js.map\n","import { O as Owner, a as OWNER, S as SYMBOL_SUSPENSE, l as lazySetAdd, b as lazySetDelete, c as callStack } from \"./fragment-BdrG6unk.js\";\nclass Root extends Owner {\n  /* CONSTRUCTOR */\n  constructor(register) {\n    super();\n    this.parent = OWNER;\n    this.context = OWNER.context;\n    if (register) {\n      const suspense = this.get(SYMBOL_SUSPENSE);\n      if (suspense) {\n        this.registered = true;\n        lazySetAdd(this.parent, \"roots\", this);\n      }\n    }\n  }\n  /* API */\n  dispose(deep) {\n    if (this.registered) {\n      lazySetDelete(this.parent, \"roots\", this);\n    }\n    super.dispose(deep);\n  }\n  wrap(fn, owner, observer, stack) {\n    const dispose = (disposeStack) => this.dispose(true);\n    const wrapper = (callStack2) => fn(callStack2, dispose);\n    return super.wrap(wrapper, this, void 0, stack);\n  }\n}\nconst root = (fn) => {\n  const stack = callStack();\n  return new Root(true).wrap(fn, void 0, void 0, stack);\n};\nexport {\n  Root as R,\n  root as r\n};\n//# sourceMappingURL=root-BYeYk3r_.js.map\n","import { af as setBatch, ag as noop, ah as isFunction, ai as SYMBOL_OBSERVABLE_BOOLEAN, a1 as SYMBOL_OBSERVABLE_FROZEN, B as SYMBOL_OBSERVABLE_READABLE, a2 as SYMBOL_UNTRACKED, d as SYMBOL_UNTRACKED_UNWRAPPED, aj as Observer, ak as Observable, al as UNINITIALIZED, c as callStack, am as UNAVAILABLE, an as DIRTY_MAYBE_YES, ao as frozen, ap as readable, Z as cleanup, Y as SYMBOL_OBSERVABLE, a as OWNER, S as SYMBOL_SUSPENSE, b as lazySetDelete, aq as SYMBOL_CACHED, z as SYMBOL_UNCACHED, l as lazySetAdd, O as Owner, ar as lazyArrayPush, as as lazyArrayEach, at as lazySetEach, au as Effect, av as DIRTY_YES, w as effect, q as get, aw as isArray, N as isStore, u as untrack, y as isObservable, ax as isEqual, ay as SYMBOL_STORE_VALUES, az as is, aA as writable, C as SYMBOL_OBSERVABLE_WRITABLE, aB as OBSERVABLE_TRUE, aC as OBSERVABLE_FALSE, aD as Scheduler, D as DEBUGGER, x as isArray$1, j as isFunction$1, K as castArray, $ as CONTEXTS_DATA, t as context, E as isNil, a0 as SYMBOL_SUSPENSE$1, v as SYMBOL_SUSPENSE_COLLECTOR, r as useRenderEffect, s as assign$1, aE as useCheapDisposed, a7 as isPromise, a3 as castError, a4 as isComponent, a8 as isTruthy, g as SYMBOL_JSX, h as SYMBOL_DEFAULT, F as FragmentUtils, ac as isPureFunction, i as isObject$1, L as SYMBOLS_DIRECTIVES, M as DIRECTIVES } from \"./fragment-BdrG6unk.js\";\nimport { j as jsx, i as isJsx, c as createElement } from \"./create_element-WjH6kFsa.js\";\nimport { R as Root } from \"./root-BYeYk3r_.js\";\nimport { s as setChild, o as camelToKebabCase, n as setProp, p as normalizePropertyPath, q as kebabToCamelCase } from \"./setters-D4dgVjKR.js\";\nlet counter = 0;\nlet resolve$1 = noop;\nconst batch = async (fn, stack) => {\n  if (!counter) {\n    setBatch(new Promise((r) => resolve$1 = r));\n  }\n  try {\n    counter += 1;\n    return await fn();\n  } finally {\n    counter -= 1;\n    if (!counter) {\n      setBatch(void 0);\n      resolve$1(stack);\n    }\n  }\n};\nconst isObservableBoolean = (value) => {\n  return isFunction(value) && SYMBOL_OBSERVABLE_BOOLEAN in value;\n};\nconst isObservableFrozen = (value) => {\n  var _a, _b;\n  return isFunction(value) && (SYMBOL_OBSERVABLE_FROZEN in value || !!((_b = (_a = value[SYMBOL_OBSERVABLE_READABLE]) == null ? void 0 : _a.parent) == null ? void 0 : _b.disposed));\n};\nconst isUntracked = (value) => {\n  return isFunction(value) && (SYMBOL_UNTRACKED in value || SYMBOL_UNTRACKED_UNWRAPPED in value);\n};\nclass Memo extends Observer {\n  /* CONSTRUCTOR */\n  constructor(fn, options) {\n    super();\n    this.fn = fn;\n    this.observable = new Observable(UNINITIALIZED, options, this);\n    const { stack } = options ?? { stack: callStack(\"Memo init\") };\n    if ((options == null ? void 0 : options.sync) === true) {\n      this.sync = true;\n      this.update(stack);\n    }\n  }\n  /* API */\n  run(stack) {\n    const result = super.refresh(this.fn, stack);\n    if (!this.disposed && this.observables.empty()) {\n      this.disposed = true;\n    }\n    if (result !== UNAVAILABLE) {\n      this.observable.set(result);\n    }\n  }\n  stale(status, stack) {\n    const statusPrev = this.status;\n    if (statusPrev >= status)\n      return;\n    this.status = status;\n    if (statusPrev === DIRTY_MAYBE_YES)\n      return;\n    this.observable.stale(DIRTY_MAYBE_YES, stack);\n  }\n}\nconst memo = (fn, options) => {\n  const stack = (options == null ? void 0 : options.stack) ?? callStack();\n  if (isObservableFrozen(fn)) {\n    return fn;\n  } else if (isUntracked(fn)) {\n    return frozen(fn(stack));\n  } else {\n    const memo2 = new Memo(fn, options);\n    const observable2 = readable(memo2.observable, stack);\n    return observable2;\n  }\n};\nconst boolean = (value) => {\n  if (isFunction(value)) {\n    if (isObservableFrozen(value) || isUntracked(value)) {\n      return !!value();\n    } else if (isObservableBoolean(value)) {\n      return value;\n    } else {\n      const boolean2 = memo(() => !!value());\n      boolean2[SYMBOL_OBSERVABLE_BOOLEAN] = true;\n      return boolean2;\n    }\n  } else {\n    return !!value;\n  }\n};\nconst disposed = (stack) => {\n  const observable2 = new Observable(false);\n  const toggle = () => observable2.set(true);\n  cleanup(toggle);\n  return readable(observable2);\n};\nfunction resolve(value) {\n  if (isFunction(value)) {\n    if (SYMBOL_UNTRACKED_UNWRAPPED in value) {\n      return resolve(value());\n    } else if (SYMBOL_UNTRACKED in value) {\n      return frozen(resolve(value()));\n    } else if (SYMBOL_OBSERVABLE in value) {\n      return value;\n    } else {\n      return memo(() => resolve(value()));\n    }\n  }\n  if (value instanceof Array) {\n    const resolved = new Array(value.length);\n    for (let i = 0, l = resolved.length; i < l; i++) {\n      resolved[i] = resolve(value[i]);\n    }\n    return resolved;\n  } else {\n    return value;\n  }\n}\nconst DUMMY_INDEX$1 = frozen(-1);\nlet MappedRoot$1 = class MappedRoot extends Root {\n};\nclass CacheKeyed {\n  /* CONSTRUCTOR */\n  constructor(fn) {\n    this.parent = OWNER;\n    this.suspense = OWNER.get(SYMBOL_SUSPENSE);\n    this.cache = /* @__PURE__ */ new Map();\n    this.bool = false;\n    this.prevCount = 0;\n    this.reuseCount = 0;\n    this.nextCount = 0;\n    this.cleanup = () => {\n      if (!this.prevCount)\n        return;\n      if (this.prevCount === this.reuseCount)\n        return;\n      const { cache, bool } = this;\n      if (!cache.size)\n        return;\n      if (this.nextCount) {\n        cache.forEach((mapped, value) => {\n          if (mapped.bool === bool)\n            return;\n          mapped.dispose(true);\n          cache.delete(value);\n        });\n      } else {\n        this.cache.forEach((mapped) => {\n          mapped.dispose(true);\n        });\n        this.cache = /* @__PURE__ */ new Map();\n      }\n    };\n    this.dispose = () => {\n      if (this.suspense) {\n        lazySetDelete(this.parent, \"roots\", this.roots);\n      }\n      this.prevCount = this.cache.size;\n      this.reuseCount = 0;\n      this.nextCount = 0;\n      this.cleanup();\n    };\n    this.before = () => {\n      this.bool = !this.bool;\n      this.reuseCount = 0;\n      this.nextCount = 0;\n    };\n    this.after = (values) => {\n      this.nextCount = values.length;\n      this.cleanup();\n      this.prevCount = this.nextCount;\n      this.reuseCount = 0;\n    };\n    this.map = (values) => {\n      var _a;\n      this.before();\n      const { cache, bool, fn: fn2, fnWithIndex } = this;\n      const results = new Array(values.length);\n      let resultsCached = true;\n      let resultsUncached = true;\n      let reuseCount = 0;\n      const stack = callStack();\n      for (let i = 0, l = values.length; i < l; i++) {\n        const value = values[i];\n        const cached = cache.get(value);\n        if (cached && cached.bool !== bool) {\n          resultsUncached = false;\n          reuseCount += 1;\n          cached.bool = bool;\n          (_a = cached.index) == null ? void 0 : _a.set(i);\n          results[i] = cached.result;\n        } else {\n          resultsCached = false;\n          const mapped = new MappedRoot$1(false);\n          if (cached) {\n            cleanup(() => mapped.dispose(true));\n          }\n          mapped.wrap(() => {\n            let index = DUMMY_INDEX$1;\n            if (fnWithIndex) {\n              mapped.index = new Observable(i);\n              index = readable(mapped.index, stack);\n            }\n            const result = results[i] = resolve(fn2(value, index));\n            mapped.bool = bool;\n            mapped.result = result;\n            if (!cached) {\n              cache.set(value, mapped);\n            }\n          }, void 0, void 0, stack);\n        }\n      }\n      this.reuseCount = reuseCount;\n      this.after(values);\n      if (resultsCached) {\n        results[SYMBOL_CACHED] = true;\n      }\n      if (resultsUncached) {\n        results[SYMBOL_UNCACHED] = true;\n      }\n      return results;\n    };\n    this.roots = () => {\n      return Array.from(this.cache.values());\n    };\n    this.fn = fn;\n    this.fnWithIndex = fn.length > 1;\n    if (this.suspense) {\n      lazySetAdd(this.parent, \"roots\", this.roots);\n    }\n  }\n}\nlet Suspense$1 = class Suspense extends Owner {\n  /* CONSTRUCTOR */\n  constructor() {\n    var _a;\n    super();\n    this.parent = OWNER;\n    this.context = { ...OWNER.context, [SYMBOL_SUSPENSE]: this };\n    lazyArrayPush(this.parent, \"suspenses\", this);\n    this.suspended = ((_a = OWNER.get(SYMBOL_SUSPENSE)) == null ? void 0 : _a.suspended) || 0;\n  }\n  /* API */\n  toggle(force) {\n    var _a;\n    if (!this.suspended && !force)\n      return;\n    const suspendedPrev = this.suspended;\n    const suspendedNext = suspendedPrev + (force ? 1 : -1);\n    this.suspended = suspendedNext;\n    if (!!suspendedPrev === !!suspendedNext)\n      return;\n    const stack = callStack();\n    (_a = this.observable) == null ? void 0 : _a.set(!!suspendedNext);\n    const notifyOwner = (owner) => {\n      lazyArrayEach(owner.contexts, notifyOwner);\n      lazyArrayEach(owner.observers, notifyObserver);\n      lazyArrayEach(owner.suspenses, notifySuspense);\n      lazySetEach(owner.roots, notifyRoot);\n    };\n    const notifyObserver = (observer) => {\n      if (observer instanceof Effect) {\n        if (observer.status === DIRTY_MAYBE_YES || observer.status === DIRTY_YES) {\n          if (observer.init) {\n            observer.update(stack);\n          } else {\n            observer.schedule(stack);\n          }\n        }\n      }\n      notifyOwner(observer);\n    };\n    const notifyRoot = (root) => {\n      if (isFunction(root)) {\n        root().forEach(notifyOwner);\n      } else {\n        notifyOwner(root);\n      }\n    };\n    const notifySuspense = (suspense2) => {\n      suspense2.toggle(force);\n    };\n    notifyOwner(this);\n  }\n  wrap(fn, owner, observer, stack) {\n    return super.wrap(fn, this, void 0, stack);\n  }\n};\nconst suspense = (when, fn, stack) => {\n  const suspense2 = new Suspense$1();\n  const condition = boolean(when);\n  const toggle = () => suspense2.toggle(get(condition));\n  effect(toggle, { sync: true, stack });\n  return suspense2.wrap(fn, void 0, void 0, stack);\n};\nconst DUMMY_INDEX = frozen(-1);\nclass MappedRoot2 extends Root {\n}\nclass CacheUnkeyed {\n  /* CONSTRUCTOR */\n  constructor(fn, pooled) {\n    this.parent = OWNER;\n    this.suspense = OWNER.get(SYMBOL_SUSPENSE);\n    this.cache = /* @__PURE__ */ new Map();\n    this.pool = [];\n    this.poolMaxSize = 0;\n    this.cleanup = () => {\n      let pooled2 = 0;\n      let poolable = Math.max(0, this.pooled ? this.poolMaxSize - this.pool.length : 0);\n      this.cache.forEach((mapped) => {\n        var _a;\n        if (poolable > 0 && pooled2++ < poolable) {\n          (_a = mapped.suspended) == null ? void 0 : _a.set(true);\n          this.pool.push(mapped);\n        } else {\n          mapped.dispose(true);\n        }\n      });\n    };\n    this.dispose = () => {\n      if (this.suspense) {\n        lazySetDelete(this.parent, \"roots\", this.roots);\n      }\n      this.cache.forEach((mapped) => {\n        mapped.dispose(true);\n      });\n      this.pool.forEach((mapped) => {\n        mapped.dispose(true);\n      });\n    };\n    this.map = (values) => {\n      var _a, _b, _c, _d, _e, _f;\n      const { cache, fn: fn2, fnWithIndex } = this;\n      const cacheNext = /* @__PURE__ */ new Map();\n      const results = new Array(values.length);\n      const pool = this.pool;\n      const pooled2 = this.pooled;\n      let resultsCached = true;\n      let resultsUncached = true;\n      let leftovers = [];\n      const stack = callStack();\n      if (cache.size) {\n        for (let i = 0, l = values.length; i < l; i++) {\n          const value = values[i];\n          const cached = cache.get(value);\n          if (cached) {\n            resultsUncached = false;\n            cache.delete(value);\n            cacheNext.set(value, cached);\n            (_a = cached.index) == null ? void 0 : _a.set(i);\n            results[i] = cached.result;\n          } else {\n            leftovers.push(i);\n          }\n        }\n      } else {\n        leftovers = new Array(results.length);\n      }\n      outer: for (let i = 0, l = leftovers.length; i < l; i++) {\n        const index = leftovers[i] || i;\n        const value = values[index];\n        const isDuplicate = cacheNext.has(value);\n        if (!isDuplicate) {\n          for (const [key, mapped2] of cache.entries()) {\n            cache.delete(key);\n            cacheNext.set(value, mapped2);\n            (_b = mapped2.index) == null ? void 0 : _b.set(index);\n            (_c = mapped2.value) == null ? void 0 : _c.set(value);\n            results[index] = mapped2.result;\n            continue outer;\n          }\n        }\n        resultsCached = false;\n        let mapped;\n        if (pooled2 && pool.length) {\n          mapped = pool.pop();\n          (_d = mapped.index) == null ? void 0 : _d.set(index);\n          (_e = mapped.value) == null ? void 0 : _e.set(value);\n          (_f = mapped.suspended) == null ? void 0 : _f.set(false);\n          results[index] = mapped.result;\n        } else {\n          mapped = new MappedRoot2(false);\n          mapped.wrap(() => {\n            let $index = DUMMY_INDEX;\n            if (fnWithIndex) {\n              mapped.index = new Observable(index);\n              $index = readable(mapped.index, stack);\n            }\n            const observable2 = mapped.value = new Observable(value);\n            const suspended2 = pooled2 ? new Observable(false) : void 0;\n            if (suspended2)\n              suspended2.stack = stack;\n            const $value = memo(() => get(observable2.get()));\n            const result = results[index] = suspended2 ? suspense(() => suspended2.get(), () => resolve(fn2($value, $index)), stack) : resolve(fn2($value, $index));\n            mapped.value = observable2;\n            mapped.result = result;\n            mapped.suspended = suspended2;\n          }, void 0, void 0, stack);\n        }\n        if (isDuplicate) {\n          cleanup(() => mapped.dispose(true));\n        } else {\n          cacheNext.set(value, mapped);\n        }\n      }\n      this.poolMaxSize = Math.max(this.poolMaxSize, results.length);\n      this.cleanup();\n      this.cache = cacheNext;\n      if (resultsCached) {\n        results[SYMBOL_CACHED] = true;\n      }\n      if (resultsUncached) {\n        results[SYMBOL_UNCACHED] = true;\n      }\n      return results;\n    };\n    this.roots = () => {\n      return [...this.cache.values(), ...this.pool.values()];\n    };\n    this.fn = fn;\n    this.fnWithIndex = fn.length > 1;\n    this.pooled = pooled;\n    if (this.suspense) {\n      lazySetAdd(this.parent, \"roots\", this.roots);\n    }\n  }\n}\nfunction _for(values, fn, fallback = [], options) {\n  const stack = callStack();\n  if (isArray(values) && !isStore(values)) {\n    const isUnkeyed = !!(options == null ? void 0 : options.unkeyed);\n    return frozen(untrack(() => {\n      if (values.length) {\n        return values.map((value, index) => {\n          return resolve(fn(isUnkeyed && !isObservable(value) ? frozen(value) : value, index));\n        });\n      } else {\n        return resolve(fallback);\n      }\n    }));\n  } else {\n    const { dispose, map } = (options == null ? void 0 : options.unkeyed) ? new CacheUnkeyed(fn, !!options.pooled) : new CacheKeyed(fn);\n    cleanup(dispose);\n    const value = memo(() => {\n      return get(values) ?? [];\n    }, {\n      equals: (next, prev) => {\n        return !!next && !!prev && !next.length && !prev.length && !isStore(next) && !isStore(prev);\n      },\n      stack\n    });\n    return memo(() => {\n      const array = value();\n      if (isStore(array)) {\n        array[SYMBOL_STORE_VALUES];\n      }\n      return untrack(() => {\n        const results = map(array);\n        return (results == null ? void 0 : results.length) ? results : resolve(fallback);\n      });\n    }, {\n      equals: (next, prev) => {\n        return isArray(next) && !!next[SYMBOL_CACHED] && isArray(prev) && isEqual(next, prev);\n      },\n      stack\n    });\n  }\n}\nconst warmup = (value) => {\n  untrack(value);\n  return value;\n};\nconst match = (condition, values, fallback) => {\n  for (let i = 0, l = values.length; i < l; i++) {\n    const value = values[i];\n    if (value.length === 1)\n      return value[0];\n    if (is(value[0], condition))\n      return value[1];\n  }\n  return fallback;\n};\nfunction _switch(when, values, fallback) {\n  const isDynamic = isFunction(when) && !isObservableFrozen(when) && !isUntracked(when);\n  if (isDynamic) {\n    if (isObservableBoolean(when)) {\n      return memo(() => resolve(match(when(), values, fallback)));\n    }\n    const value = warmup(memo(() => match(when(), values, fallback)));\n    if (isObservableFrozen(value)) {\n      return frozen(resolve(value()));\n    } else {\n      return memo(() => resolve(get(value)));\n    }\n  } else {\n    const value = match(get(when), values, fallback);\n    return frozen(resolve(value));\n  }\n}\nconst ternary = (when, valueTrue, valueFalse) => {\n  const condition = boolean(when);\n  return _switch(condition, [[true, valueTrue], [valueFalse]]);\n};\nfunction observable(value, options) {\n  const stack = callStack();\n  return writable(new Observable(value, options), stack);\n}\nconst isObservableWritable = (value) => {\n  return isFunction(value) && SYMBOL_OBSERVABLE_WRITABLE in value;\n};\nconst target = (observable2) => {\n  if (isFunction(observable2)) {\n    return observable2[SYMBOL_OBSERVABLE_READABLE] || observable2[SYMBOL_OBSERVABLE_WRITABLE] || UNAVAILABLE;\n  } else {\n    return observable2;\n  }\n};\nconst readonly = (observable2, stack) => {\n  if (isObservableWritable(observable2)) {\n    return readable(target(observable2), stack);\n  } else {\n    return observable2;\n  }\n};\nconst isEqualForSelector = (a, b) => {\n  if ((a === 0 || is(a, -0)) && (b === 0 || is(b, -0)))\n    return true;\n  return is(a, b);\n};\nclass DisposableMap extends Map {\n  constructor() {\n    super(...arguments);\n    this.disposed = false;\n  }\n}\nclass SelectedObservable extends Observable {\n  constructor() {\n    super(...arguments);\n    this.count = 1;\n  }\n  /* API */\n  call() {\n    if (this.selecteds.disposed)\n      return;\n    this.count -= 1;\n    if (this.count)\n      return;\n    this.selecteds.delete(this.source);\n  }\n}\nconst selector = (source) => {\n  source = warmup(memo(source));\n  if (isObservableFrozen(source)) {\n    const sourceValue = untrack(source);\n    return (value) => {\n      return isEqualForSelector(value, sourceValue) ? OBSERVABLE_TRUE : OBSERVABLE_FALSE;\n    };\n  }\n  let selecteds = new DisposableMap();\n  let selectedValue = untrack(source);\n  const stack = callStack();\n  effect((stack2) => {\n    var _a, _b;\n    const valuePrev = selectedValue;\n    const valueNext = source();\n    if (isEqualForSelector(valuePrev, valueNext))\n      return;\n    selectedValue = valueNext;\n    (_a = selecteds.get(valuePrev)) == null ? void 0 : _a.set(false);\n    (_b = selecteds.get(valueNext)) == null ? void 0 : _b.set(true);\n  }, { suspense: false, sync: true, stack });\n  const cleanupAll = () => {\n    selecteds.disposed = true;\n  };\n  cleanup(cleanupAll);\n  return (value) => {\n    let selected = selecteds.get(value);\n    if (selected) {\n      selected.count += 1;\n    } else {\n      const isSelected = isEqualForSelector(value, selectedValue);\n      selected = new SelectedObservable(isSelected);\n      selected.selecteds = selecteds;\n      selected.source = value;\n      selecteds.set(value, selected);\n    }\n    cleanup(selected);\n    return readable(selected);\n  };\n};\nconst suspended = (stack) => {\n  const suspense2 = OWNER.get(SYMBOL_SUSPENSE);\n  if (!suspense2)\n    return OBSERVABLE_FALSE;\n  const observable2 = suspense2.observable || (suspense2.observable = new Observable(!!suspense2.suspended));\n  return readable(observable2, stack);\n};\nconst tick = (stack) => {\n  Scheduler.flush(stack);\n};\nconst tryCatch = (value, fn) => {\n  const observable$1 = observable();\n  return memo((stack) => {\n    const error = observable$1();\n    if (error) {\n      const reset = () => observable$1(void 0);\n      const options = { error, reset };\n      return resolve(fn(options));\n    } else {\n      OWNER.errorHandler = observable$1;\n      return resolve(value);\n    }\n  });\n};\nfunction untracked(fn) {\n  const untracked2 = isFunction(fn) ? (...args) => untrack(() => fn(...args)) : () => fn;\n  untracked2[SYMBOL_UNTRACKED] = true;\n  return untracked2;\n}\nconst mark = (msg, ref) => DEBUGGER.verboseComment ? jsx(\"comment\", { ref, data: msg }) : jsx(\"text\", { ref });\nconst useAttached = (ref, match2) => {\n  const isGiven = !!ref;\n  if (!ref)\n    ref = observable();\n  const parent = observable(null);\n  const fn = () => {\n    if (!get(ref)) return;\n    const updateParent = () => {\n      var _a;\n      let currentParent = ((_a = get(ref)) == null ? void 0 : _a.parentNode) || null;\n      if (match2) {\n        while (currentParent) {\n          if (match2(currentParent)) {\n            parent(currentParent);\n            return !!currentParent;\n          }\n          currentParent = currentParent.assignedSlot ?? currentParent.parentNode ?? currentParent.host;\n        }\n        parent(null);\n        return false;\n      } else {\n        parent(currentParent);\n        return !!currentParent;\n      }\n    };\n    if (updateParent()) return;\n    const callback = (mutationsList, observer2) => {\n      var _a;\n      if (((_a = mutationsList[0]) == null ? void 0 : _a.type) === \"childList\") {\n        if (updateParent()) {\n          observer2.disconnect();\n          return;\n        }\n      }\n    };\n    const observer = new MutationObserver(callback);\n    const config = {\n      childList: true,\n      // Crucial: Watch for children being added/removed\n      subtree: true\n      // Optional: Watch all descendants, not just direct children\n    };\n    observer.observe(document, config);\n    return () => observer.disconnect();\n  };\n  if (isObservable(ref))\n    effect(fn);\n  else\n    fn();\n  return {\n    parent,\n    mount: isGiven ? void 0 : mark(\"attached\", ref),\n    ref\n  };\n};\nconst useLightDom = (ref) => {\n  const { parent, mount, ref: r } = useAttached(ref, (parent2) => !!parent2.assignedSlot);\n  return { lightDom: parent, mount, ref: r };\n};\nfunction useResolved(values, callback, resolveFunction) {\n  const isResolvable = resolveFunction !== false && callback !== false ? isFunction$1 : isObservable;\n  const resolve2 = (value) => isResolvable(value) ? value() : value;\n  if (isArray$1(values)) {\n    const resolved = values.map(resolve2);\n    if (isFunction$1(callback)) {\n      return callback.apply(void 0, resolved);\n    } else {\n      return resolved;\n    }\n  } else {\n    const resolved = resolve2(values);\n    if (isFunction$1(callback)) {\n      return callback(resolved);\n    } else {\n      return resolved;\n    }\n  }\n}\nfunction useEventListener(target2, event, handler, options) {\n  const stack = new Error();\n  return effect((stack2) => {\n    const fn = get(handler, false);\n    return useResolved([target2, event, options], (target22, event2, options2) => {\n      const targets = castArray(target22);\n      targets.forEach((target3) => {\n        target3 == null ? void 0 : target3.addEventListener(event2, fn, options2);\n      });\n      return (stack3) => {\n        targets.forEach((target3) => {\n          target3 == null ? void 0 : target3.removeEventListener(event2, fn, options2);\n        });\n      };\n    });\n  }, { sync: \"init\", stack });\n}\nconst useAbortController = (signals = []) => {\n  signals = castArray(signals);\n  const controller = new AbortController();\n  const abort = controller.abort.bind(controller);\n  const aborted = signals.some((signal) => signal.aborted);\n  if (aborted) {\n    abort();\n  } else {\n    signals.forEach((signal) => useEventListener(signal, \"abort\", abort));\n    cleanup(abort);\n  }\n  return controller;\n};\nconst useAbortSignal = (signals = []) => {\n  return useAbortController(signals).signal;\n};\nconst useScheduler = ({ loop, once, callback, cancel, schedule, stack }) => {\n  let executed = false;\n  let suspended$1 = suspended(stack);\n  let tickId;\n  const work = (value) => {\n    executed = true;\n    if (get(loop)) tick2();\n    get(callback, false)(value);\n  };\n  const tick2 = () => {\n    tickId = untrack(() => schedule(work));\n  };\n  const dispose = () => {\n    untrack(() => cancel(tickId));\n  };\n  effect(() => {\n    if (once && executed) return;\n    if (suspended$1()) return;\n    tick2();\n    return dispose;\n  }, { suspense: false, stack });\n  return dispose;\n};\nconst useAnimationFrame = (callback) => {\n  const stack = new Error();\n  return useScheduler({\n    callback,\n    once: true,\n    cancel: cancelAnimationFrame,\n    schedule: requestAnimationFrame,\n    stack\n  });\n};\nconst useAnimationLoop = (callback) => {\n  const stack = new Error();\n  return useScheduler({\n    callback,\n    loop: true,\n    cancel: cancelAnimationFrame,\n    schedule: requestAnimationFrame,\n    stack\n  });\n};\nfunction useContext(Context) {\n  const { symbol, defaultValue } = CONTEXTS_DATA.get(Context) || { symbol: Symbol() };\n  const valueContext = context(symbol);\n  const value = isNil(valueContext) ? defaultValue : valueContext;\n  return value;\n}\nconst SuspenseContext = {\n  create: () => {\n    const count = observable(0);\n    const active = memo(() => !!count());\n    const increment = (nr = 1) => count((prev) => prev + nr);\n    const decrement = (nr = -1) => queueMicrotask(() => count((prev) => prev + nr));\n    const data = { active, increment, decrement };\n    const collector = context(SYMBOL_SUSPENSE_COLLECTOR);\n    if (collector) {\n      collector == null ? void 0 : collector.register(data);\n      cleanup(() => collector.unregister(data));\n    }\n    return data;\n  },\n  get: () => {\n    return context(SYMBOL_SUSPENSE$1);\n  },\n  wrap: (fn) => {\n    const data = SuspenseContext.create();\n    return context({ [SYMBOL_SUSPENSE$1]: data }, () => {\n      return resolve(() => fn(data));\n    });\n  }\n};\nclass SuspenseManager {\n  constructor() {\n    this.suspenses = /* @__PURE__ */ new Map();\n    this.change = (suspense2, nr) => {\n      const counter2 = this.suspenses.get(suspense2) || 0;\n      const counterNext = Math.max(0, counter2 + nr);\n      if (counter2 === counterNext) return;\n      if (counterNext) {\n        this.suspenses.set(suspense2, counterNext);\n      } else {\n        this.suspenses.delete(suspense2);\n      }\n      if (nr > 0) {\n        suspense2.increment(nr);\n      } else {\n        suspense2.decrement(nr);\n      }\n    };\n    this.suspend = () => {\n      const suspense2 = SuspenseContext.get();\n      if (!suspense2) return;\n      this.change(suspense2, 1);\n      cleanup(() => {\n        this.change(suspense2, -1);\n      });\n    };\n    this.unsuspend = () => {\n      this.suspenses.forEach((counter2, suspense2) => {\n        this.change(suspense2, -counter2);\n      });\n    };\n  }\n}\nconst useResource = (fetcher) => {\n  const pending = observable(true);\n  const error = observable();\n  const value = observable();\n  const latest = observable();\n  const { suspend, unsuspend } = new SuspenseManager();\n  const resourcePending = { pending: true, get value() {\n    return void suspend();\n  }, get latest() {\n    return latest() ?? void suspend();\n  } };\n  const resourceRejected = { pending: false, get error() {\n    return error();\n  }, get value() {\n    throw error();\n  }, get latest() {\n    throw error();\n  } };\n  const resourceResolved = { pending: false, get value() {\n    return value();\n  }, get latest() {\n    return value();\n  } };\n  const resourceFunction = { pending: () => pending(), error: () => error(), value: () => resource().value, latest: () => resource().latest };\n  const resource = observable(resourcePending);\n  const stack = new Error();\n  useRenderEffect(() => {\n    const disposed2 = useCheapDisposed();\n    const onPending = () => {\n      pending(true);\n      error(void 0);\n      value(void 0);\n      resource(resourcePending);\n    };\n    const onResolve = (result) => {\n      if (disposed2()) return;\n      pending(false);\n      error(void 0);\n      value(() => result);\n      latest(() => result);\n      resource(resourceResolved);\n    };\n    const onReject = (exception) => {\n      if (disposed2()) return;\n      pending(false);\n      error(castError(exception));\n      value(void 0);\n      latest(void 0);\n      resource(resourceRejected);\n    };\n    const fetch2 = () => {\n      try {\n        const value2 = get(fetcher());\n        if (isPromise(value2)) {\n          onPending();\n          value2.then(onResolve, onReject);\n          value2.then(unsuspend, unsuspend);\n        } else {\n          onResolve(value2);\n        }\n      } catch (error2) {\n        onReject(error2);\n      }\n    };\n    fetch2();\n  }, stack);\n  return assign$1(readonly(resource, stack), resourceFunction);\n};\nconst useFetch = (request, init) => {\n  return useResource(() => {\n    return useResolved([request, init], (request2, init2 = {}) => {\n      const signal = useAbortSignal(init2.signal || []);\n      init2.signal = signal;\n      return fetch(request2, init2);\n    });\n  });\n};\nconst useIdleCallback = (callback, options) => {\n  const stack = new Error();\n  return useScheduler({\n    callback,\n    once: true,\n    cancel: cancelIdleCallback,\n    schedule: (callback2) => requestIdleCallback(callback2, get(options)),\n    stack\n  });\n};\nconst useIdleLoop = (callback, options) => {\n  const stack = new Error();\n  return useScheduler({\n    callback,\n    loop: true,\n    cancel: cancelIdleCallback,\n    schedule: (callback2) => requestIdleCallback(callback2, get(options)),\n    stack\n  });\n};\nconst useInterval = (callback, ms) => {\n  const stack = new Error();\n  return useScheduler({\n    callback,\n    cancel: clearInterval,\n    schedule: (callback2) => setInterval(callback2, get(ms)),\n    stack\n  });\n};\nconst usePromise = (promise) => {\n  return useResource(() => get(promise));\n};\nconst useTimeout = (callback, ms) => {\n  const stack = new Error();\n  return useScheduler({\n    callback,\n    once: true,\n    cancel: clearTimeout,\n    schedule: (callback2) => setTimeout(callback2, get(ms)),\n    stack\n  });\n};\nfunction useMounted(ref) {\n  const given = !!ref;\n  const internalRef = ref ?? observable();\n  const isMounted = memo(() => !!get(internalRef));\n  const mount = !given ? mark(\"mount\", internalRef) : void 0;\n  return {\n    ref: internalRef,\n    isMounted,\n    mount\n  };\n}\nfunction useMountedContext(ctx, ref) {\n  const { parent: provider, ref: rf, mount } = useAttached(ref, (p) => p.tagName === \"CONTEXT-PROVIDER\" && !!(p == null ? void 0 : p[ctx.symbol]));\n  const context2 = memo(() => {\n    var _a;\n    if (!get(provider)) return;\n    return (_a = get(provider)) == null ? void 0 : _a[ctx.symbol];\n  });\n  Object.defineProperties(context2, {\n    length: {\n      value: 2,\n      writable: false,\n      enumerable: false,\n      configurable: false\n    }\n  });\n  return Object.assign([context2, mount], context2, { mount, ref: rf, context: context2 });\n}\nconst ErrorBoundary = ({ fallback, children }) => {\n  return tryCatch(children, (props) => {\n    const error = props.error instanceof Error ? props.error : new Error(String(props.error ?? \"Unknown error\"));\n    const newProps = { error, reset: props.reset };\n    return untrack(() => isFunction$1(fallback) ? fallback(newProps) : fallback);\n  });\n};\nfunction For({ values, fallback, unkeyed, children }) {\n  return _for(values, children, fallback, { unkeyed });\n}\nconst useGuarded = (value, guard) => {\n  let valueLast;\n  const guarded = memo(() => {\n    const current = get(value);\n    if (!guard(current)) return valueLast;\n    return valueLast = current;\n  });\n  return () => {\n    const current = guarded();\n    if (isNil(current)) throw new Error(\"The value never passed the type guard\");\n    return current;\n  };\n};\nconst If = ({ when, fallback, children }) => {\n  if (isFunction$1(children) && !isObservable(children) && !isComponent(children)) {\n    const truthy = useGuarded(when, isTruthy);\n    return ternary(when, untracked(() => children(truthy)), fallback);\n  } else {\n    return ternary(when, children, fallback);\n  }\n};\nconst Suspense2 = ({ when, fallback, children }) => {\n  return SuspenseContext.wrap((suspense$1) => {\n    const condition = memo(() => !!get(when) || suspense$1.active());\n    const stack = new Error();\n    const childrenSuspended = suspense(condition, () => resolve(children), stack);\n    return ternary(condition, fallback, childrenSuspended);\n  });\n};\nconst Switch = ({ when, fallback, children }) => {\n  const childrenWithValues = castArray(children);\n  const values = childrenWithValues.map((child) => child().metadata);\n  return _switch(when, values, fallback);\n};\nSwitch.Case = ({ when, children }) => {\n  const metadata = { metadata: [when, children] };\n  return assign$1(() => children, metadata);\n};\nSwitch.Default = ({ children }) => {\n  const metadata = { metadata: [children] };\n  return assign$1(() => children, metadata);\n};\nconst Ternary = ({ when, children }) => {\n  return ternary(when, children[0], children[1]);\n};\nlet cachedConstructedSheets = null;\nlet stylesheetObserver = null;\nfunction convertAllDocumentStylesToConstructed() {\n  if (cachedConstructedSheets) {\n    return cachedConstructedSheets;\n  }\n  const constructedSheets = [];\n  for (let i = 0; i < document.styleSheets.length; i++) {\n    const sheet = document.styleSheets[i];\n    try {\n      const newSheet = new CSSStyleSheet();\n      let allRules = \"\";\n      for (let j = 0; j < sheet.cssRules.length; j++) {\n        const rule = sheet.cssRules[j];\n        allRules += rule.cssText;\n      }\n      newSheet.replaceSync(allRules);\n      constructedSheets.push(newSheet);\n    } catch (e) {\n      console.warn(\"Could not copy stylesheet:\", e);\n    }\n  }\n  cachedConstructedSheets = constructedSheets;\n  return constructedSheets;\n}\nfunction observeStylesheetChanges() {\n  if (stylesheetObserver) {\n    return;\n  }\n  stylesheetObserver = new MutationObserver(() => {\n    cachedConstructedSheets = null;\n  });\n  stylesheetObserver.observe(document.head, {\n    childList: true,\n    subtree: true\n  });\n  stylesheetObserver.observe(document, {\n    childList: true,\n    subtree: true\n  });\n}\nfunction mv(target2, source) {\n  const targetValue = target2;\n  const sourceValue = source;\n  if (typeof targetValue === \"string\" && typeof sourceValue === \"string\")\n    return `${targetValue} ${sourceValue}`.trim();\n  else if (typeof targetValue === \"object\" && typeof sourceValue === \"object\")\n    return { ...targetValue, ...sourceValue };\n  return source;\n}\nconst set = (target2, source, merge2) => {\n  if (merge2)\n    target2(mv(get(target2), get(source)));\n  else\n    target2(get(source));\n};\nconst isObject = (obj) => {\n  if (obj == void 0) return false;\n  if (obj.constructor.name == \"Object\") {\n    return true;\n  } else {\n    return false;\n  }\n};\nconst assign = (target2, source, options) => {\n  if (!source) return target2;\n  const { condition: method = \"all\", copyByRef = true, keepTargetNoObservable = false, track = false, merge: merge2 = [], copyOptions = false } = options ?? {};\n  const m = merge2.reduce((acc, item) => (acc[item] = true, acc), {});\n  const keys = (() => {\n    switch (method) {\n      case \"new\":\n        return Object.keys(source).filter((key) => !(key in target2));\n      case \"old\":\n        return Object.keys(target2).filter((key) => key in source);\n      case \"empty\":\n        return Object.keys(source).filter((key) => {\n          const targetValue = target2[key];\n          const sourceValue = source[key];\n          const isTargetEmpty = targetValue === void 0 || targetValue === null || targetValue === 0 || isNaN(targetValue) || targetValue === \"\" || isArray$1(targetValue) && targetValue.length === 0;\n          const isSourceNonEmpty = !(sourceValue === void 0 || sourceValue === null || sourceValue === 0 || isNaN(sourceValue) || sourceValue === \"\" || isArray$1(sourceValue) && sourceValue.length === 0);\n          return isTargetEmpty && isSourceNonEmpty;\n        });\n      default:\n        return Object.keys(source);\n    }\n  })();\n  keys.forEach((key) => {\n    if (copyByRef) {\n      if (isObservable(target2[key])) {\n        set(target2[key], source[key], m[key]);\n        if (track && isObservable(source[key]))\n          effect(() => {\n            set(target2[key], source[key], m[key]);\n          });\n      } else {\n        const temp = get(target2[key]);\n        target2[key] = isObservable(source[key]) || isFunction$1(source[key]) ? source[key] : observable(source[key]);\n        if (m[key])\n          target2[key](mv(temp, get(source[key])));\n      }\n    } else {\n      if (typeof get(source[key]) === \"object\" && isObject(get(source[key]))) {\n        if (isObservable(target2[key])) {\n          if (typeof get(target2[key]) === \"object\")\n            assign(get(target2[key]), get(source[key]), options);\n          else {\n            target2[key](assign({}, get(source[key]), options));\n            if (track && isObservable(source[key]))\n              effect(() => {\n                target2[key](assign({}, get(source[key]), options));\n              });\n          }\n        } else {\n          const temp = target2[key];\n          target2[key] = keepTargetNoObservable ? assign(m[key] ? temp : {}, get(source[key]), options) : observable(assign(m[key] ? temp : {}, get(source[key]), options));\n          if (track && isObservable(target2[key]) && isObservable(source[key]))\n            effect(() => {\n              target2[key](assign(m[key] ? temp : {}, get(source[key]), options));\n            });\n        }\n      } else {\n        if (isObservable(target2[key])) {\n          set(target2[key], source[key], m[key]);\n          const temp = get(target2[key]);\n          if (track && isObservable(source[key]))\n            effect(() => target2[key](m[key] ? mv(temp, get(source[key])) : get(source[key])));\n        } else {\n          const temp = target2[key];\n          target2[key] = keepTargetNoObservable ? source[key] : target2[key] = isObservable(source[key]) || isFunction$1(source[key]) ? source[key] : observable(source[key]);\n          if (m[key])\n            target2[key](mv(temp, get(source[key])));\n          if (track && isObservable(target2[key]) && isObservable(source[key])) {\n            if (target2[key] !== source[key])\n              effect(() => target2[key](m[key] ? mv(temp, get(source[key])) : get(source[key])));\n          }\n        }\n      }\n    }\n  });\n  return target2;\n};\nconst isJsxProp = (props) => props && props[SYMBOL_JSX];\nconst make = (obj, options = { inplace: false, convertFunction: false }) => {\n  const { inplace = false, convertFunction = false } = options;\n  const o = inplace ? obj : { ...obj };\n  Object.keys(o).forEach((k) => {\n    if (isObservable(o[k])) return;\n    if (typeof o[k] === \"function\" && !convertFunction) return;\n    if (convertFunction || typeof o[k] !== \"function\") {\n      o[k] = observable(o[k]);\n    }\n  });\n  return o;\n};\nconst merge = (target2, source) => {\n  return assign(target2, source, { condition: \"new\" });\n};\nconst defaults = (defs, component) => {\n  const defFactory = () => {\n    const d = defs();\n    if (d.children !== void 0 && !isObservable(d.children))\n      d.children = observable(d.children);\n    if (!d.children)\n      d.children = observable();\n    return d;\n  };\n  const compFactory = Object.assign(\n    (props) => component(isJsxProp(props) ? merge(make(props, { inplace: true, convertFunction: false }), defFactory()) : props),\n    {\n      [SYMBOL_DEFAULT]: defFactory\n    }\n  );\n  return compFactory;\n};\nobserveStylesheetChanges();\nconst setObservableValue = (obj, key, value) => {\n  if (isObservable(obj[key])) {\n    if (!isObservableWritable(obj[key])) return;\n    const observable2 = obj[key];\n    const options = observable2[SYMBOL_OBSERVABLE_WRITABLE].options;\n    const { type, fromHtml } = options ?? {};\n    if (type) {\n      switch (type) {\n        case \"number\":\n          obj[key](fromHtml ? fromHtml(value) : Number(value));\n          break;\n        case \"boolean\":\n          if (fromHtml) {\n            obj[key](fromHtml(value));\n          } else {\n            const lowerValue = value == null ? void 0 : value.toLowerCase();\n            obj[key](lowerValue === \"true\" || lowerValue === \"1\" || lowerValue === \"\");\n          }\n          break;\n        case \"bigint\":\n          if (fromHtml) {\n            obj[key](fromHtml(value));\n          } else {\n            try {\n              obj[key](BigInt(value));\n            } catch (e) {\n              obj[key](value);\n            }\n          }\n          break;\n        case \"object\":\n          if (fromHtml) {\n            obj[key](fromHtml(value));\n          } else {\n            try {\n              obj[key](JSON.parse(value));\n            } catch (e) {\n              obj[key](value);\n            }\n          }\n          break;\n        case \"function\":\n          obj[key](fromHtml ? fromHtml(value) : value);\n          break;\n        case \"symbol\":\n          obj[key](fromHtml ? fromHtml(value) : Symbol(value));\n          break;\n        case \"undefined\":\n          obj[key](fromHtml ? fromHtml(value) : void 0);\n          break;\n        default:\n          obj[key](fromHtml ? fromHtml(value) : value);\n          break;\n      }\n    } else {\n      obj[key](fromHtml ? fromHtml(value) : value);\n    }\n  } else {\n    obj[key] = value;\n  }\n};\nconst setNestedProperty = (obj, path, value) => {\n  if (path.startsWith(\"style.\")) {\n    const styleProperty = kebabToCamelCase(path.slice(6));\n    if (obj.style) {\n      obj.style[styleProperty] = value;\n    }\n    return;\n  }\n  if (path.includes(\".\")) {\n    const keys = path.split(\".\").map((key) => kebabToCamelCase(key));\n    const lastKey = keys.pop();\n    let target2 = obj;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (i === 0 && !(key in target2)) {\n        if (!target2.props) {\n          target2.props = {};\n        }\n        if (!(key in target2.props) || typeof target2.props[key] !== \"object\" || target2.props[key] === null) {\n          target2.props[key] = {};\n        }\n        target2 = target2.props[key];\n      } else if (!(key in target2) || typeof target2[key] !== \"object\" || target2[key] === null) {\n        target2[key] = {};\n        target2 = target2[key];\n      } else {\n        target2 = target2[key];\n      }\n    }\n    if (lastKey) {\n      setObservableValue(target2, lastKey, value);\n    }\n    return;\n  }\n  setObservableValue(obj, kebabToCamelCase(path), value);\n};\nconst customElement = (tagName, component) => {\n  var _a;\n  const defaultPropsFn = component[SYMBOL_DEFAULT];\n  if (!defaultPropsFn) {\n    console.error(`Component ${tagName} is missing default props. Please use the 'defaults' helper function to provide default props.`);\n  }\n  const C = (_a = class extends HTMLElement {\n    constructor(props) {\n      super();\n      this.childs = [];\n      this.props = !!props ? props : defaultPropsFn() || {};\n      C.observedAttributes = Object.keys(this.props);\n      if (!isJsx(this.props)) {\n        const shadowRoot = this.attachShadow({ mode: \"open\", serializable: true });\n        if (!(get(this.props.children) instanceof HTMLSlotElement)) {\n          this.slots = document.createElement(\"slot\");\n          this.props.children(this.slots);\n        }\n        const ignoreStyle = this.props.ignoreStyle === true;\n        if (!ignoreStyle) {\n          const allSheets = convertAllDocumentStylesToConstructed();\n          shadowRoot.adoptedStyleSheets = allSheets;\n        }\n        setChild(shadowRoot, createElement(component, this.props), FragmentUtils.make(), callStack(\"Custom element\"));\n      } else {\n        setChild(this, createElement(component, this.props), FragmentUtils.make(), callStack(\"Custom element\"));\n      }\n      if (!this.propDict) {\n        this.propDict = {};\n        Object.keys(this.props).forEach((k) => {\n          const c = camelToKebabCase(k);\n          this.propDict[c] = k;\n          this.propDict[k] = c;\n        });\n      }\n    }\n    /**\n     * Called when the element is added to the document\n     * \n     * Sets up attribute observation and initializes the element.\n     */\n    connectedCallback() {\n      const { observedAttributes } = C;\n      const { props: p } = this;\n      const aKeys = Object.keys(p).filter((k) => (\n        /* !isPureFunction(p[k]) && !isObject(p[k]) && */\n        k !== \"children\" && isObservable(p[k])\n      ));\n      const rKeys = Object.keys(p).filter((k) => isPureFunction(p[k]) || isObject$1(p[k]));\n      rKeys.forEach((k) => this.removeAttribute(k));\n      for (const k of aKeys)\n        if (!this.attributes[this.propDict[k]] || isJsx(p))\n          setProp(this, this.propDict[k], p[k], callStack(\"connectedCallback\"));\n      for (const attr of this.attributes)\n        this.attributeChangedCallback1(attr.name, void 0, attr.value);\n      const observer = new MutationObserver((mutations) => {\n        mutations.forEach((m) => {\n          if (m.type === \"attributes\") {\n            const name = m.attributeName;\n            const newValue = this.getAttribute(name);\n            const oldValue = m.oldValue;\n            this.attributeChangedCallback1(name, oldValue, newValue);\n          }\n        });\n      });\n      observer.observe(this, { attributes: true, attributeOldValue: true });\n    }\n    /**\n     * Called when the element is removed from the document\n     * \n     * Cleans up observers and resources.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Called when an observed attribute changes\n     * \n     * Updates the corresponding prop and handles nested properties.\n     * \n     * @param name - The name of the changed attribute\n     * @param oldValue - The previous value of the attribute\n     * @param newValue - The new value of the attribute\n     */\n    attributeChangedCallback1(name, oldValue, newValue) {\n      if (oldValue === newValue) return;\n      if (newValue === \"[object Object]\") return;\n      const { props } = this;\n      if (name.includes(\"$\") || name.includes(\".\")) {\n        const normalizedPath = normalizePropertyPath(name);\n        setNestedProperty(this, normalizedPath, newValue);\n        const propName = kebabToCamelCase(name.replace(/\\$/g, \".\").replace(/\\./g, \".\"));\n        setObservableValue(props, propName, newValue);\n      } else {\n        const propName = kebabToCamelCase(name);\n        setObservableValue(this.props, propName, newValue);\n      }\n    }\n  }, _a.__component__ = component, _a.observedAttributes = [], _a);\n  const ec = customElements.get(tagName);\n  if (!!ec)\n    console.warn(`Element ${tagName} already exists. (ignore this in dev env), use ec.__component__ to find target component`);\n  else\n    customElements.define(tagName, C);\n  return C;\n};\nconst hidden = { toHtml: (o) => void 0 };\nconst ContextProvider = defaults(\n  () => ({\n    value: observable(void 0),\n    children: observable(void 0),\n    symbol: observable(void 0)\n  }),\n  ({ children }) => {\n    return children;\n  }\n);\ncustomElement(\"context-provider\", ContextProvider);\nfunction createContext(defaultValue) {\n  const symbol = Symbol();\n  const Provider = ({ value, children }) => {\n    return context({ [symbol]: value }, () => {\n      const ref = observable();\n      effect(() => {\n        if (!get(ref)) return;\n        get(ref)[symbol] = value;\n        return () => delete get(ref)[symbol];\n      });\n      return jsx(\"context-provider\", {\n        ref,\n        value,\n        symbol: observable(symbol, hidden),\n        children: resolve(children)\n        //must resolve, for non dom\n      });\n    });\n  };\n  const Context = { Provider, symbol };\n  CONTEXTS_DATA.set(Context, { symbol, defaultValue });\n  return Context;\n}\nconst createDirective = (name, fn, options) => {\n  var _a;\n  const immediate = !!(options == null ? void 0 : options.immediate);\n  const data = { fn, immediate };\n  const symbol = (_a = SYMBOLS_DIRECTIVES)[name] || (_a[name] = Symbol());\n  const Provider = ({ children }) => {\n    return context({ [symbol]: data }, () => {\n      return resolve(children);\n    });\n  };\n  const ref = (...args) => {\n    return (element) => {\n      fn(element, ...args);\n    };\n  };\n  const register = () => {\n    if (symbol in DIRECTIVES) throw new Error('Directive \"name\" is already registered');\n    DIRECTIVES[symbol] = data;\n  };\n  return { Provider, ref, register };\n};\nconst COMPONENT_RE = /^_?[A-Z][a-zA-Z0-9$_-]*$/;\nconst SYMBOL_AS = \"__hmr_as__\";\nconst SYMBOL_COLD_COMPONENT = Symbol(\"HMR.Cold\");\nconst SYMBOL_HOT_COMPONENT = Symbol(\"HMR.Hot\");\nconst SYMBOL_HOT_ID = Symbol(\"HMR.ID\");\nconst SOURCES = /* @__PURE__ */ new WeakMap();\nconst hmr = (accept, component) => {\n  if (accept) {\n    const cached = component[SYMBOL_HOT_COMPONENT];\n    if (cached) return cached;\n    const isProvider = !isFunction$1(component) && \"Provider\" in component;\n    if (isProvider) return component;\n    const createHotComponent = (path) => {\n      return (...args) => {\n        return memo((stack2) => {\n          var _a;\n          const component2 = path.reduce((component3, key) => component3[key], ((_a = SOURCES.get(id(stack2))) == null ? void 0 : _a()) || source());\n          const result = resolve(untrack(() => component2(...args)));\n          return result;\n        });\n      };\n    };\n    const createHotComponentDeep = (component2, path) => {\n      const cached2 = component2[SYMBOL_HOT_COMPONENT];\n      if (cached2) return cached2;\n      const hot2 = component2[SYMBOL_HOT_COMPONENT] = createHotComponent(path);\n      for (const key in component2) {\n        const value = component2[key];\n        if (isFunction$1(value) && COMPONENT_RE.test(key)) {\n          hot2[key] = createHotComponentDeep(value, [...path, key]);\n        } else {\n          hot2[key] = value;\n        }\n      }\n      return hot2;\n    };\n    const onAccept = (module) => {\n      var _a, _b;\n      const hot2 = module[component[SYMBOL_AS]] || module[component.name] || module.default;\n      if (!hot2) return console.error(`[hmr] Failed to handle update for \"${component.name}\" component:\n\n`, component);\n      const cold2 = hot2[SYMBOL_COLD_COMPONENT] || hot2;\n      (_a = hot2[SYMBOL_HOT_ID]) == null ? void 0 : _a.call(hot2, id());\n      (_b = SOURCES.get(id())) == null ? void 0 : _b(() => cold2);\n    };\n    const id = observable({});\n    const source = observable(component);\n    const stack = new Error();\n    SOURCES.set(id(stack), source);\n    const cold = component[SYMBOL_COLD_COMPONENT] || component;\n    const hot = createHotComponentDeep(component, []);\n    cold[SYMBOL_HOT_COMPONENT] = hot;\n    hot[SYMBOL_COLD_COMPONENT] = cold;\n    hot[SYMBOL_HOT_COMPONENT] = hot;\n    hot[SYMBOL_HOT_ID] = id;\n    accept(onAccept);\n    return hot;\n  } else {\n    return component;\n  }\n};\nvar n = function(t2, s, r, e) {\n  var u;\n  s[0] = 0;\n  for (var h = 1; h < s.length; h++) {\n    var p = s[h++], a = s[h] ? (s[0] |= p ? 1 : 2, r[s[h++]]) : s[++h];\n    3 === p ? e[0] = a : 4 === p ? e[1] = Object.assign(e[1] || {}, a) : 5 === p ? (e[1] = e[1] || {})[s[++h]] = a : 6 === p ? e[1][s[++h]] += a + \"\" : p ? (u = t2.apply(a, n(t2, a, r, [\"\", null])), e.push(u), a[0] ? s[0] |= 2 : (s[h - 2] = 0, s[h] = u)) : e.push(a);\n  }\n  return e;\n}, t = /* @__PURE__ */ new Map();\nfunction htm(s) {\n  var r = t.get(this);\n  return r || (r = /* @__PURE__ */ new Map(), t.set(this, r)), (r = n(this, r.get(s) || (r.set(s, r = function(n2) {\n    for (var t2, s2, r2 = 1, e = \"\", u = \"\", h = [0], p = function(n3) {\n      1 === r2 && (n3 || (e = e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g, \"\"))) ? h.push(0, n3, e) : 3 === r2 && (n3 || e) ? (h.push(3, n3, e), r2 = 2) : 2 === r2 && \"...\" === e && n3 ? h.push(4, n3, 0) : 2 === r2 && e && !n3 ? h.push(5, 0, true, e) : r2 >= 5 && ((e || !n3 && 5 === r2) && (h.push(r2, 0, e, s2), r2 = 6), n3 && (h.push(r2, n3, 0, s2), r2 = 6)), e = \"\";\n    }, a = 0; a < n2.length; a++) {\n      a && (1 === r2 && p(), p(a));\n      for (var l = 0; l < n2[a].length; l++) t2 = n2[a][l], 1 === r2 ? \"<\" === t2 ? (p(), h = [h], r2 = 3) : e += t2 : 4 === r2 ? \"--\" === e && \">\" === t2 ? (r2 = 1, e = \"\") : e = t2 + e[0] : u ? t2 === u ? u = \"\" : e += t2 : '\"' === t2 || \"'\" === t2 ? u = t2 : \">\" === t2 ? (p(), r2 = 1) : r2 && (\"=\" === t2 ? (r2 = 5, s2 = e, e = \"\") : \"/\" === t2 && (r2 < 5 || \">\" === n2[a][l + 1]) ? (p(), 3 === r2 && (h = h[0]), r2 = h, (h = h[0]).push(2, 0, r2), r2 = 0) : \" \" === t2 || \"\t\" === t2 || \"\\n\" === t2 || \"\\r\" === t2 ? (p(), r2 = 2) : e += t2), 3 === r2 && \"!--\" === e && (r2 = 4, h = h[0]);\n    }\n    return p(), h;\n  }(s)), r), arguments, [])).length > 1 ? r : r[0];\n}\nexport {\n  selector as A,\n  suspended as B,\n  suspense as C,\n  untracked as D,\n  ErrorBoundary as E,\n  For as F,\n  batch as G,\n  tick as H,\n  If as I,\n  createContext as J,\n  createDirective as K,\n  hmr as L,\n  defaults as M,\n  assign as N,\n  make as O,\n  isObservableWritable as P,\n  customElement as Q,\n  mark as R,\n  Suspense2 as S,\n  Ternary as T,\n  useResolved as a,\n  boolean as b,\n  Switch as c,\n  useAttached as d,\n  useLightDom as e,\n  useAbortController as f,\n  useAbortSignal as g,\n  htm as h,\n  useAnimationFrame as i,\n  useAnimationLoop as j,\n  useContext as k,\n  useEventListener as l,\n  memo as m,\n  useFetch as n,\n  observable as o,\n  useIdleCallback as p,\n  useIdleLoop as q,\n  resolve as r,\n  useInterval as s,\n  usePromise as t,\n  useResource as u,\n  useTimeout as v,\n  useMounted as w,\n  useMountedContext as x,\n  disposed as y,\n  readonly as z\n};\n//# sourceMappingURL=htm.module-DsFqqNjU.js.map\n","import { F as FragmentUtils, q as get, r as useRenderEffect, s as assign, t as context, v as SYMBOL_SUSPENSE_COLLECTOR, w as effect } from \"./fragment-BdrG6unk.js\";\nimport { s as setChild, d as createHTMLNode } from \"./setters-D4dgVjKR.js\";\nimport { r as root } from \"./root-BYeYk3r_.js\";\nimport { b as boolean, r as resolve, o as observable, m as memo } from \"./htm.module-DsFqqNjU.js\";\nconst render = (child, parent) => {\n  if (!parent || !(parent instanceof HTMLElement || parent instanceof ShadowRoot)) throw new Error(\"Invalid parent node\");\n  parent.textContent = \"\";\n  return root((stack, dispose) => {\n    setChild(parent, child, FragmentUtils.make(), stack);\n    return () => {\n      dispose(stack);\n      parent.textContent = \"\";\n    };\n  });\n};\nconst Portal = ({ when = true, mount, wrapper, children }) => {\n  const portal = get(wrapper) || createHTMLNode(\"div\");\n  if (!(portal instanceof HTMLElement)) throw new Error(\"Invalid wrapper node\");\n  const condition = boolean(when);\n  const stack = new Error();\n  useRenderEffect(() => {\n    if (!get(condition)) return;\n    const parent = get(mount) || document.body;\n    if (!(parent instanceof Element)) throw new Error(\"Invalid mount node\");\n    parent.insertBefore(portal, null);\n    return () => {\n      parent.removeChild(portal);\n    };\n  }, stack);\n  useRenderEffect(() => {\n    if (!get(condition)) return;\n    return render(children, portal);\n  }, stack);\n  return assign(() => get(condition) || children, { metadata: { portal } });\n};\nconst SuspenseCollector = {\n  create: () => {\n    const parent = SuspenseCollector.get();\n    const suspenses = observable([]);\n    const active = memo(() => suspenses().some((suspense) => suspense.active()));\n    const register = (suspense) => {\n      parent == null ? void 0 : parent.register(suspense);\n      suspenses((prev) => [...prev, suspense]);\n    };\n    const unregister = (suspense) => {\n      parent == null ? void 0 : parent.unregister(suspense);\n      suspenses((prev) => prev.filter((other) => other !== suspense));\n    };\n    const data = { suspenses, active, register, unregister };\n    return data;\n  },\n  get: () => {\n    return context(SYMBOL_SUSPENSE_COLLECTOR);\n  },\n  wrap: (fn) => {\n    const data = SuspenseCollector.create();\n    return context({ [SYMBOL_SUSPENSE_COLLECTOR]: data }, () => {\n      return resolve(() => fn(data));\n    });\n  }\n};\nconst renderToString = (child) => {\n  return new Promise((resolve2) => {\n    root((stack, dispose) => {\n      get(SuspenseCollector.wrap((suspenses) => {\n        const { portal } = Portal({ children: child }).metadata;\n        effect((stack2) => {\n          if (suspenses.active()) return;\n          resolve2(portal.innerHTML);\n          dispose(stack2);\n        }, { suspense: false, stack });\n      }));\n    });\n  });\n};\nexport {\n  Portal as P,\n  renderToString as a,\n  render as r\n};\n//# sourceMappingURL=render_to_string-DpyNsaVb.js.map\n","var _a, _b;\nimport { c as createElement } from \"./create_element-WjH6kFsa.js\";\nimport { F, g, i, j, a, b, u } from \"./create_element-WjH6kFsa.js\";\nimport { j as isFunction, q as get, ae as _with, Z as cleanup, U as isPrimitive, f as SYMBOL_CLONE, x as isArray, i as isObject, s as assign, V as once, W as indexOf, k as isString, X as SYMBOL_TEMPLATE_ACCESSOR, y as isObservable, Y as SYMBOL_OBSERVABLE } from \"./fragment-BdrG6unk.js\";\nimport { $, D, M, L, h, g as g2, a1, B, C, a0, v, z, a2, d, e, c, K, a3, t, ab, G, _, R, p, a4, a5, a6, A, E, n, a7, J, m, N, I, a8, o, a9, T, ad, u as u2, w, H } from \"./fragment-BdrG6unk.js\";\nimport { m as memo, r as resolve, a as useResolved, o as observable, C as suspense, h as htm, u as useResource } from \"./htm.module-DsFqqNjU.js\";\nimport { E as E2, F as F2, I as I2, S, c as c2, T as T2, N as N2, G as G2, J as J2, K as K2, Q, M as M2, L as L2, P, O, R as R2, H as H2, f, g as g3, i as i2, j as j2, d as d2, b as b2, k, y, l, n as n2, p as p2, q, s, e as e2, w as w2, x, t as t2, z as z2, A as A2, B as B2, v as v2, D as D2 } from \"./htm.module-DsFqqNjU.js\";\nimport { r as root } from \"./root-BYeYk3r_.js\";\nimport { t as t3 } from \"./types-wf-bHbgv.js\";\nimport { P as P2, r, a as a10 } from \"./render_to_string-DpyNsaVb.js\";\nimport { w as wrapCloneElement, a as wrapElement } from \"./wrap_clone_element-cGq665B_.js\";\nimport { S as S2 } from \"./wrap_clone_element-cGq665B_.js\";\nimport { f as setStyles, g as setRef, h as setProperty, i as setHTML, j as setEvent, k as setClasses, l as setChildReplacement, m as setAttribute } from \"./setters-D4dgVjKR.js\";\nimport { r as r2, n as n3 } from \"./setters-D4dgVjKR.js\";\nconst IS_BROWSER = !!((_b = (_a = globalThis.CDATASection) == null ? void 0 : _a.toString) == null ? void 0 : _b.call(_a).match(/^\\s*function\\s+CDATASection\\s*\\(\\s*\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/));\nconst isServer = () => {\n  return !IS_BROWSER;\n};\nconst Dynamic = ({ component, props, children }) => {\n  if (isFunction(component) || isFunction(props)) {\n    return memo(() => {\n      return resolve(createElement(get(component, false), get(props), children));\n    });\n  } else {\n    return createElement(component, props, children);\n  }\n};\nconst cache = {};\nconst runWithSuperRoot = _with();\nlet lockId = 1;\nconst KeepAlive = ({ id, ttl, children }) => {\n  return memo((stack) => {\n    return useResolved([id, ttl], (id2, ttl2) => {\n      var _a2;\n      const lock = lockId++;\n      const item = cache[id2] || (cache[id2] = { id: id2, lock });\n      item.lock = lock;\n      (_a2 = item.reset) == null ? void 0 : _a2.call(item, stack);\n      item.suspended || (item.suspended = observable(false));\n      item.suspended(false);\n      if (!item.dispose || !item.result) {\n        runWithSuperRoot(() => {\n          root((stack2, dispose) => {\n            item.dispose = () => {\n              delete cache[id2];\n              dispose(stack2);\n            };\n            suspense(item.suspended, () => {\n              item.result = resolve(children);\n            }, stack2);\n          });\n        }, stack);\n      }\n      cleanup(() => {\n        var _a3;\n        const hasLock = () => lock === item.lock;\n        if (!hasLock()) return;\n        (_a3 = item.suspended) == null ? void 0 : _a3.call(item, true);\n        if (!ttl2 || ttl2 <= 0 || ttl2 >= Infinity) return;\n        const dispose = () => {\n          var _a4;\n          return hasLock() && ((_a4 = item.dispose) == null ? void 0 : _a4.call(item, stack));\n        };\n        const timeoutId = setTimeout(dispose, ttl2);\n        const reset = () => clearTimeout(timeoutId);\n        item.reset = reset;\n      });\n      return item.result;\n    });\n  });\n};\nconst cloneElement = (element, props, ...children) => {\n  if (isPrimitive(element))\n    return element;\n  else if (isFunction(element)) {\n    if (!element[SYMBOL_CLONE])\n      throw new Error(\"target is not cloneable, it is not created by jsx.createElement\");\n    const { Component, props: oldProps } = element[SYMBOL_CLONE];\n    const newProps = { ...oldProps, ...props };\n    if (children.length > 0)\n      Object.assign(props, { children });\n    return wrapCloneElement(createElement(Component, newProps), Component, newProps);\n  } else if (isArray(element))\n    return element.map((e3) => cloneElement(e3, props));\n  else if (element.cloneNode)\n    return element.cloneNode();\n  throw new Error(\"Unknown element\");\n};\nfunction h$1(component, props, ...children) {\n  if (children.length || isObject(props) && !isArray(props)) {\n    if (!props) props = { children };\n    else props = { ...props, children };\n    return createElement(component, props);\n  } else {\n    return createElement(component, null, props);\n  }\n}\nconst registry = {};\nconst h2 = (type, props, ...children) => createElement(registry[type] || type, props, ...children);\nconst register = (components) => void assign(registry, components);\nconst html = assign(htm.bind(h2), { register });\nconst lazy = (fetcher) => {\n  const fetcherOnce = once(fetcher);\n  const component = (props) => {\n    const resource = useResource(fetcherOnce);\n    return memo(() => {\n      return useResolved(resource, ({ pending, error, value }) => {\n        if (pending) return;\n        if (error) throw error;\n        const component2 = \"default\" in value ? value.default : value;\n        return resolve(createElement(component2, props));\n      });\n    });\n  };\n  component.preload = () => {\n    return new Promise((resolve2, reject) => {\n      const resource = useResource(fetcherOnce);\n      useResolved(resource, ({ pending, error }) => {\n        if (pending) return;\n        if (error) return reject(error);\n        return resolve2();\n      });\n    });\n  };\n  return component;\n};\nconst template = (fn) => {\n  const safePropertyRe = /^[a-z0-9-_]+$/i;\n  const checkValidProperty = (property) => {\n    if (isString(property) && safePropertyRe.test(property)) return true;\n    throw new Error(`Invalid property, only alphanumeric properties are allowed inside templates, received: \"${property}\"`);\n  };\n  const makeAccessor = (actionsWithNodes) => {\n    return new Proxy({}, {\n      get(target, prop) {\n        checkValidProperty(prop);\n        const accessor = (node, method, key, targetNode) => {\n          if (key) checkValidProperty(key);\n          actionsWithNodes.push([node, method, prop, key, targetNode]);\n        };\n        const metadata = { [SYMBOL_TEMPLATE_ACCESSOR]: true };\n        return assign(accessor, metadata);\n      }\n    });\n  };\n  const makeActionsWithNodesAndTemplate = () => {\n    const actionsWithNodes = [];\n    const accessor = makeAccessor(actionsWithNodes);\n    const component = fn(accessor);\n    if (isFunction(component)) {\n      const root2 = component();\n      if (root2 instanceof Element) {\n        return { actionsWithNodes, root: root2 };\n      }\n    }\n    throw new Error(\"Invalid template, it must return a function that returns an Element\");\n  };\n  const makeActionsWithPaths = (actionsWithNodes) => {\n    const actionsWithPaths = [];\n    for (let i3 = 0, l2 = actionsWithNodes.length; i3 < l2; i3++) {\n      const [node, method, prop, key, targetNode] = actionsWithNodes[i3];\n      const nodePath = makeNodePath(node);\n      const targetNodePath = targetNode ? makeNodePath(targetNode) : void 0;\n      actionsWithPaths.push([nodePath, method, prop, key, targetNodePath]);\n    }\n    return actionsWithPaths;\n  };\n  const makeNodePath = /* @__PURE__ */ (() => {\n    let prevNode = null;\n    let prevPath;\n    return (node) => {\n      if (node === prevNode) return prevPath;\n      const path = [];\n      let child = node;\n      let parent = child.parentNode;\n      while (parent) {\n        const index = !child.previousSibling ? 0 : !child.nextSibling ? -0 : indexOf(parent.childNodes, child);\n        path.push(index);\n        child = parent;\n        parent = parent.parentNode;\n      }\n      prevNode = node;\n      prevPath = path;\n      return path;\n    };\n  })();\n  const makeNodePathProperties = (path) => {\n    const properties = [\"root\"];\n    const parts = path.slice().reverse();\n    for (let i3 = 0, l2 = parts.length; i3 < l2; i3++) {\n      const part = parts[i3];\n      if (Object.is(0, part)) {\n        properties.push(\"firstChild\");\n      } else if (Object.is(-0, part)) {\n        properties.push(\"lastChild\");\n      } else {\n        properties.push(\"firstChild\");\n        for (let nsi = 0; nsi < part; nsi++) {\n          properties.push(\"nextSibling\");\n        }\n      }\n    }\n    return properties;\n  };\n  const makeReviverPaths = (actionsWithPaths) => {\n    const paths = [];\n    for (let i3 = 0, l2 = actionsWithPaths.length; i3 < l2; i3++) {\n      const action = actionsWithPaths[i3];\n      const nodePath = action[0];\n      const targetNodePath = action[4];\n      paths.push(nodePath);\n      if (targetNodePath) {\n        paths.push(targetNodePath);\n      }\n    }\n    return paths;\n  };\n  const makeReviverVariablesData = (paths, properties) => {\n    const data = new Array(paths.length);\n    for (let i3 = 0, l2 = paths.length; i3 < l2; i3++) {\n      data[i3] = {\n        path: paths[i3],\n        properties: properties[i3]\n      };\n    }\n    return data;\n  };\n  const makeReviverVariables = (actionsWithPaths) => {\n    const paths = makeReviverPaths(actionsWithPaths);\n    const properties = paths.map(makeNodePathProperties);\n    const data = makeReviverVariablesData(paths, properties);\n    const assignments = [];\n    const map = /* @__PURE__ */ new Map();\n    let variableId = 0;\n    while (true) {\n      const datum = data.find((datum2) => datum2.properties.length > 1);\n      if (!datum) break;\n      const [current, next] = datum.properties;\n      const variable = `$${variableId++}`;\n      const assignment = `const ${variable} = ${current}.${next};`;\n      assignments.push(assignment);\n      for (let i3 = 0, l2 = data.length; i3 < l2; i3++) {\n        const datum2 = data[i3];\n        const [otherCurrent, otherNext] = datum2.properties;\n        if (otherCurrent !== current || otherNext !== next) continue;\n        datum2.properties[0] = variable;\n        datum2.properties.splice(1, 1);\n      }\n    }\n    for (let i3 = 0, l2 = data.length; i3 < l2; i3++) {\n      const datum = data[i3];\n      map.set(datum.path, datum.properties[0]);\n    }\n    return { assignments, map };\n  };\n  const makeReviverActions = (actionsWithPaths, variables) => {\n    const actions = [];\n    for (let i3 = 0, l2 = actionsWithPaths.length; i3 < l2; i3++) {\n      const [nodePath, method, prop, key, targetNodePath] = actionsWithPaths[i3];\n      if (targetNodePath) {\n        actions.push(`this.${method} ( props[\"${prop}\"], ${variables.get(targetNodePath)} );`);\n      } else if (key) {\n        actions.push(`this.${method} ( ${variables.get(nodePath)}, \"${key}\", props[\"${prop}\"] );`);\n      } else {\n        actions.push(`this.${method} ( ${variables.get(nodePath)}, props[\"${prop}\"] );`);\n      }\n    }\n    return actions;\n  };\n  const makeReviver = (actionsWithPaths) => {\n    const { assignments, map } = makeReviverVariables(actionsWithPaths);\n    const actions = makeReviverActions(actionsWithPaths, map);\n    const fn2 = new Function(\"root\", \"props\", `${assignments.join(\"\")}${actions.join(\"\")}return root;`);\n    const apis = { setAttribute, setChildReplacement, setClasses, setEvent, setHTML, setProperty, setRef, setStyles };\n    const reviver = fn2.bind(apis);\n    return reviver;\n  };\n  const makeComponent = () => {\n    const { actionsWithNodes, root: root2 } = makeActionsWithNodesAndTemplate();\n    const actionsWithPaths = makeActionsWithPaths(actionsWithNodes);\n    const reviver = makeReviver(actionsWithPaths);\n    return (props) => {\n      const clone2 = root2.cloneNode(true);\n      return wrapElement(reviver.bind(void 0, clone2, props));\n    };\n  };\n  return makeComponent();\n};\nconst clone = (source, deepClone = false) => {\n  if (isPrimitive(source))\n    return source;\n  if (isFunction(source))\n    return source;\n  if (isArray(source))\n    if (deepClone)\n      return source.map((item) => clone(item, deepClone));\n    else\n      return source;\n  const newObject = {};\n  Object.keys(source).forEach((key) => {\n    if (typeof source[key] === \"function\" && !isObservable(source[key])) {\n      newObject[key] = source[key];\n    } else if (isObservable(source[key]) && isObject(get(source[key])) && !isArray(get(source[key]))) {\n      const innerObject = clone(get(source[key]));\n      newObject[key] = innerObject;\n    } else if (isObservable(source[key])) {\n      newObject[key] = observable(get(source[key]));\n    } else if (isObject(get(source[key])) && deepClone) {\n      const innerObject = clone(source[key]);\n      newObject[key] = innerObject;\n    } else\n      newObject[key] = source[key];\n  });\n  return newObject;\n};\nconst is = (value) => value === \"\" || value === \"true\" || value === true;\nconst HtmlBoolean = {\n  equals: (a11, b3) => is(a11) === is(b3),\n  type: Boolean,\n  toHtml: (value) => is(value) ? \"\" : void 0,\n  // Return empty string for true, undefined for false\n  fromHtml: (value) => is(value)\n};\nconst toNumber = (value) => {\n  if (value === void 0 || value === \"\") return NaN;\n  if (typeof value === \"number\") return value;\n  const num = Number(value);\n  return isNaN(num) ? NaN : num;\n};\nconst HtmlNumber = {\n  equals: (a11, b3) => toNumber(a11) === toNumber(b3),\n  type: Number,\n  toHtml: (value) => {\n    const num = toNumber(value);\n    return isNaN(num) ? void 0 : String(num);\n  },\n  fromHtml: (value) => toNumber(value)\n};\nconst toDate = (value) => {\n  if (value === void 0 || value === \"\") return void 0;\n  if (value instanceof Date) return isNaN(value.getTime()) ? void 0 : value;\n  if (typeof value === \"number\") {\n    const date2 = new Date(value);\n    return isNaN(date2.getTime()) ? void 0 : date2;\n  }\n  if (typeof value === \"string\") {\n    const timestamp = Date.parse(value);\n    if (!isNaN(timestamp)) {\n      return new Date(timestamp);\n    }\n    const numericTimestamp = Number(value);\n    if (!isNaN(numericTimestamp)) {\n      const date3 = new Date(numericTimestamp);\n      if (!isNaN(date3.getTime())) {\n        return date3;\n      }\n    }\n    const date2 = new Date(value);\n    return isNaN(date2.getTime()) ? void 0 : date2;\n  }\n  const date = new Date(value);\n  return isNaN(date.getTime()) ? void 0 : date;\n};\nconst HtmlDate = {\n  equals: (a11, b3) => {\n    const dateA = toDate(a11);\n    const dateB = toDate(b3);\n    return dateA === void 0 && dateB === void 0 || dateA !== void 0 && dateB !== void 0 && dateA.getTime() === dateB.getTime();\n  },\n  type: Date,\n  toHtml: (value) => {\n    const date = toDate(value);\n    return date ? date.toISOString() : \"\";\n  },\n  fromHtml: (value) => toDate(value) || /* @__PURE__ */ new Date(NaN)\n};\nconst toBigInt = (value) => {\n  if (value === void 0 || value === \"\") return void 0;\n  try {\n    if (typeof value === \"bigint\") return value;\n    if (typeof value === \"number\") {\n      if (!Number.isInteger(value)) return void 0;\n      return BigInt(value);\n    }\n    return BigInt(value);\n  } catch {\n    return void 0;\n  }\n};\nconst HtmlBigInt = {\n  equals: (a11, b3) => {\n    const bigA = toBigInt(a11);\n    const bigB = toBigInt(b3);\n    return bigA === void 0 && bigB === void 0 || bigA !== void 0 && bigB !== void 0 && bigA === bigB;\n  },\n  type: BigInt,\n  toHtml: (value) => {\n    const big = toBigInt(value);\n    return big ? big.toString() : void 0;\n  },\n  fromHtml: (value) => toBigInt(value) || BigInt(0)\n};\nconst toObject = (value) => {\n  if (value === void 0 || value === \"\") return void 0;\n  if (typeof value !== \"string\") return value;\n  try {\n    return HtmlObject.JSON.parse(value);\n  } catch {\n    return void 0;\n  }\n};\nconst HtmlObject = {\n  /**\n   * JSON implementation used for parsing and stringifying objects.\n   * Consumers can replace this with alternative implementations like JSON5.\n   */\n  JSON,\n  equals: (a11, b3) => {\n    const objA = toObject(a11);\n    const objB = toObject(b3);\n    return objA === void 0 && objB === void 0 || objA !== void 0 && objB !== void 0 && HtmlObject.JSON.stringify(objA) === HtmlObject.JSON.stringify(objB);\n  },\n  type: Object,\n  toHtml: (value) => {\n    const obj = toObject(value);\n    try {\n      return obj ? HtmlObject.JSON.stringify(obj) : void 0;\n    } catch {\n      return \"\";\n    }\n  },\n  fromHtml: (value) => toObject(value) || {}\n};\nconst parseCSSLength = (value) => {\n  if (typeof value === \"string\" && value === \"\") {\n    return void 0;\n  }\n  if (typeof value === \"object\" && value !== null && \"value\" in value && \"unit\" in value) {\n    return {\n      value: value.value,\n      unit: value.unit,\n      valueOf: () => `${value.value}${value.unit}`,\n      toString: () => `${value.value}${value.unit}`\n    };\n  }\n  if (value === \"auto\" || value === \"inherit\" || value === \"initial\" || value === \"unset\") {\n    return value;\n  }\n  if (typeof value === \"undefined\")\n    return void 0;\n  const match = value.match(/^(-?\\d*\\.?\\d+)([a-zA-Z%]+)$/);\n  if (match) {\n    const [, num, unit] = match;\n    const numericValue = parseFloat(num);\n    return {\n      value: numericValue,\n      unit,\n      valueOf: () => `${numericValue}${unit}`,\n      toString: () => `${numericValue}${unit}`\n    };\n  }\n  if (typeof value === \"string\" && /^-?\\d*\\.?\\d+$/.test(value)) {\n    const numericValue = parseFloat(value);\n    return {\n      value: numericValue,\n      unit: \"px\",\n      valueOf: () => `${numericValue}px`,\n      toString: () => `${numericValue}px`\n    };\n  }\n  return value;\n};\nconst stringifyCSSLength = (value) => {\n  if (typeof value === \"string\") return value;\n  if (typeof value === \"number\") return `${value}px`;\n  return `${value.value}${value.unit}`;\n};\nconst HtmlLength = {\n  equals: (a11, b3) => {\n    const parsedA = parseCSSLength(a11);\n    const parsedB = parseCSSLength(b3);\n    if (typeof parsedA === \"string\" && typeof parsedB === \"string\") {\n      return parsedA === parsedB;\n    }\n    if (typeof parsedA === \"object\" && typeof parsedB === \"object\") {\n      return parsedA.value === parsedB.value && parsedA.unit === parsedB.unit;\n    }\n    return false;\n  },\n  type: Object,\n  toHtml: (value) => {\n    const parsed = parseCSSLength(value);\n    if (parsed === void 0) return void 0;\n    if (typeof parsed === \"string\" || typeof parsed === \"number\") return parsed;\n    return stringifyCSSLength(parsed);\n  },\n  fromHtml: (value) => {\n    if (typeof value !== \"string\") return value;\n    return parseCSSLength(value);\n  }\n};\nconst parseCSSBox = (value) => {\n  if (value === \"\") {\n    return void 0;\n  }\n  if (typeof value === \"object\" && value !== null && \"top\" in value && \"right\" in value && \"bottom\" in value && \"left\" in value) {\n    return {\n      top: value.top,\n      right: value.right,\n      bottom: value.bottom,\n      left: value.left,\n      valueOf: () => `${value.top} ${value.right} ${value.bottom} ${value.left}`,\n      toString: () => `${value.top} ${value.right} ${value.bottom} ${value.left}`\n    };\n  }\n  if (Array.isArray(value)) {\n    switch (value.length) {\n      case 1:\n        return {\n          top: value[0],\n          right: value[0],\n          bottom: value[0],\n          left: value[0],\n          valueOf: () => `${value[0]}`,\n          toString: () => `${value[0]}`\n        };\n      case 2:\n        return {\n          top: value[0],\n          right: value[1],\n          bottom: value[0],\n          left: value[1],\n          valueOf: () => `${value[0]} ${value[1]}`,\n          toString: () => `${value[0]} ${value[1]}`\n        };\n      case 3:\n        return {\n          top: value[0],\n          right: value[1],\n          bottom: value[2],\n          left: value[1],\n          valueOf: () => `${value[0]} ${value[1]} ${value[2]}`,\n          toString: () => `${value[0]} ${value[1]} ${value[2]}`\n        };\n      case 4:\n        return {\n          top: value[0],\n          right: value[1],\n          bottom: value[2],\n          left: value[3],\n          valueOf: () => `${value[0]} ${value[1]} ${value[2]} ${value[3]}`,\n          toString: () => `${value[0]} ${value[1]} ${value[2]} ${value[3]}`\n        };\n    }\n  }\n  if (typeof value === \"string\" || typeof value === \"number\") {\n    return {\n      top: value,\n      right: value,\n      bottom: value,\n      left: value,\n      valueOf: () => `${value}`,\n      toString: () => `${value}`\n    };\n  }\n  return {\n    top: \"0px\",\n    right: \"0px\",\n    bottom: \"0px\",\n    left: \"0px\",\n    valueOf: () => \"0px\",\n    toString: () => \"0px\"\n  };\n};\nconst HtmlBox = {\n  // Compare two CSS box values for equality\n  // Handles undefined, string, and object values\n  equals: (a11, b3) => {\n    const boxA = parseCSSBox(a11);\n    const boxB = parseCSSBox(b3);\n    if (boxA === void 0 || boxB === void 0) {\n      return boxA === boxB;\n    }\n    return boxA.top === boxB.top && boxA.right === boxB.right && boxA.bottom === boxB.bottom && boxA.left === boxB.left;\n  },\n  type: Object,\n  toHtml: (value) => {\n    const box = parseCSSBox(value);\n    if (box === void 0) return void 0;\n    return box.toString();\n  },\n  fromHtml: (value) => {\n    if (typeof value !== \"string\") return value;\n    const parts = value.split(\" \").filter((part) => part.length > 0);\n    switch (parts.length) {\n      case 1:\n        return { top: parts[0], right: parts[0], bottom: parts[0], left: parts[0], valueOf: () => value, toString: () => value };\n      case 2:\n        return { top: parts[0], right: parts[1], bottom: parts[0], left: parts[1], valueOf: () => value, toString: () => value };\n      case 3:\n        return { top: parts[0], right: parts[1], bottom: parts[2], left: parts[1], valueOf: () => value, toString: () => value };\n      case 4:\n        return { top: parts[0], right: parts[1], bottom: parts[2], left: parts[3], valueOf: () => value, toString: () => value };\n      default:\n        return { top: \"0px\", right: \"0px\", bottom: \"0px\", left: \"0px\", valueOf: () => \"0px\", toString: () => \"0px\" };\n    }\n  }\n};\nconst parseCSSColor = (value) => {\n  if (value === \"\") {\n    return void 0;\n  }\n  if (typeof value === \"object\" && value !== null && \"r\" in value && \"g\" in value && \"b\" in value) {\n    return {\n      r: value.r,\n      g: value.g,\n      b: value.b,\n      valueOf: () => `#${Math.min(255, Math.max(0, value.r)).toString(16).padStart(2, \"0\")}${Math.min(255, Math.max(0, value.g)).toString(16).padStart(2, \"0\")}${Math.min(255, Math.max(0, value.b)).toString(16).padStart(2, \"0\")}`,\n      toString: () => `#${Math.min(255, Math.max(0, value.r)).toString(16).padStart(2, \"0\")}${Math.min(255, Math.max(0, value.g)).toString(16).padStart(2, \"0\")}${Math.min(255, Math.max(0, value.b)).toString(16).padStart(2, \"0\")}`\n    };\n  }\n  if (typeof value === \"string\") {\n    if (value.startsWith(\"#\")) {\n      const hex = value.slice(1);\n      if (hex.length === 3) {\n        const r3 = parseInt(hex[0] + hex[0], 16);\n        const g4 = parseInt(hex[1] + hex[1], 16);\n        const b3 = parseInt(hex[2] + hex[2], 16);\n        return {\n          r: r3,\n          g: g4,\n          b: b3,\n          valueOf: () => value,\n          toString: () => value\n        };\n      } else if (hex.length === 6) {\n        const r3 = parseInt(hex.slice(0, 2), 16);\n        const g4 = parseInt(hex.slice(2, 4), 16);\n        const b3 = parseInt(hex.slice(4, 6), 16);\n        return {\n          r: r3,\n          g: g4,\n          b: b3,\n          valueOf: () => value,\n          toString: () => value\n        };\n      }\n    }\n    return value;\n  }\n  if (typeof value === \"number\") {\n    const r3 = value >> 16 & 255;\n    const g4 = value >> 8 & 255;\n    const b3 = value & 255;\n    const hex = `#${r3.toString(16).padStart(2, \"0\")}${g4.toString(16).padStart(2, \"0\")}${b3.toString(16).padStart(2, \"0\")}`;\n    return {\n      r: r3,\n      g: g4,\n      b: b3,\n      valueOf: () => hex,\n      toString: () => hex\n    };\n  }\n  return String(value);\n};\nconst stringifyCSSColor = (value) => {\n  if (typeof value === \"string\") return value;\n  return `#${Math.min(255, Math.max(0, value.r)).toString(16).padStart(2, \"0\")}${Math.min(255, Math.max(0, value.g)).toString(16).padStart(2, \"0\")}${Math.min(255, Math.max(0, value.b)).toString(16).padStart(2, \"0\")}`;\n};\nconst HtmlColor = {\n  equals: (a11, b3) => {\n    const parsedA = parseCSSColor(a11);\n    const parsedB = parseCSSColor(b3);\n    if (typeof parsedA === \"string\" && typeof parsedB === \"string\") {\n      return parsedA === parsedB;\n    }\n    if (typeof parsedA === \"object\" && typeof parsedB === \"object\" && \"r\" in parsedA && \"r\" in parsedB) {\n      return parsedA.r === parsedB.r && parsedA.g === parsedB.g && parsedA.b === parsedB.b;\n    }\n    return false;\n  },\n  type: String,\n  toHtml: (value) => {\n    const parsed = parseCSSColor(value);\n    if (parsed === void 0) return void 0;\n    return stringifyCSSColor(parsed);\n  },\n  fromHtml: (value) => {\n    return value;\n  }\n};\nconst toStyleObject = (value) => {\n  if (value === void 0 || value === \"\") return void 0;\n  if (typeof value === \"object\" && value !== null) {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    if (value.trim() === \"\") return void 0;\n    const style = {};\n    const rules = value.split(\";\");\n    for (const rule of rules) {\n      const trimmedRule = rule.trim();\n      if (trimmedRule) {\n        const colonIndex = trimmedRule.indexOf(\":\");\n        if (colonIndex > 0) {\n          const property = trimmedRule.substring(0, colonIndex).trim();\n          const value2 = trimmedRule.substring(colonIndex + 1).trim();\n          if (property && value2) {\n            const camelCaseProperty = property.replace(/-([a-z])/g, (g4) => g4[1].toUpperCase());\n            style[camelCaseProperty] = value2;\n          }\n        }\n      }\n    }\n    return Object.keys(style).length > 0 ? style : void 0;\n  }\n  return void 0;\n};\nconst stringifyStyleObject = (value) => {\n  if (value === void 0 || value === null) return \"\";\n  const cssRules = [];\n  for (const [property, val] of Object.entries(value)) {\n    if (property && val !== void 0 && val !== null) {\n      const kebabCaseProperty = property.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`);\n      cssRules.push(`${kebabCaseProperty}: ${val}`);\n    }\n  }\n  return cssRules.join(\"; \");\n};\nconst HtmlStyle = {\n  // Compare two CSS style values for equality\n  // Handles undefined, string, and object values\n  equals: (a11, b3) => {\n    const styleA = toStyleObject(a11);\n    const styleB = toStyleObject(b3);\n    if (styleA === void 0 && styleB === void 0) return true;\n    if (styleA === void 0 || styleB === void 0) return false;\n    return stringifyStyleObject(styleA) === stringifyStyleObject(styleB);\n  },\n  type: Object,\n  toHtml: (value) => {\n    const style = toStyleObject(value);\n    return stringifyStyleObject(style);\n  },\n  fromHtml: (value) => {\n    return toStyleObject(value) || {};\n  }\n};\nconst toString = (value) => {\n  if (value === null || value === void 0) return \"\";\n  return String(value);\n};\nconst HtmlString = {\n  equals: (a11, b3) => toString(a11) === toString(b3),\n  type: String,\n  toHtml: (value) => toString(value),\n  fromHtml: (value) => toString(value)\n};\nconst toFunctionString = (value) => {\n  if (value === null || value === void 0) return void 0;\n  return void 0;\n};\nconst HtmlFunction = {\n  equals: (a11, b3) => {\n    return a11 === b3;\n  },\n  type: Function,\n  toHtml: (value) => {\n    const result = toFunctionString(value);\n    return result;\n  },\n  fromHtml: (value) => {\n    return void 0;\n  }\n};\nconst toClassString = (value) => {\n  if (value === null || value === void 0) return \"\";\n  if (typeof value === \"string\") return value;\n  if (typeof value === \"number\") return String(value);\n  if (typeof value === \"boolean\") return value ? \"\" : \"\";\n  if (typeof value === \"function\") {\n    try {\n      return toClassString(value());\n    } catch {\n      return \"\";\n    }\n  }\n  if (Array.isArray(value)) {\n    return value.map(toClassString).filter(Boolean).join(\" \");\n  }\n  if (typeof value === \"object\") {\n    return Object.entries(value).filter(([key, val]) => {\n      try {\n        const resolvedVal = typeof val === \"function\" ? val() : val;\n        return resolvedVal === true;\n      } catch {\n        return false;\n      }\n    }).map(([key]) => key).join(\" \");\n  }\n  return \"\";\n};\nconst HtmlClass = {\n  equals: (a11, b3) => toClassString(a11) === toClassString(b3),\n  type: String,\n  toHtml: (value) => toClassString(value),\n  fromHtml: (value) => value\n};\nconst ObservableSymbol = SYMBOL_OBSERVABLE;\nexport {\n  observable as $,\n  get as $$,\n  $ as CONTEXTS_DATA,\n  D as DEBUGGER,\n  M as DIRECTIVES,\n  Dynamic,\n  E2 as ErrorBoundary,\n  F2 as For,\n  F as Fragment,\n  HtmlBigInt,\n  HtmlBoolean,\n  HtmlBox,\n  HtmlClass,\n  HtmlColor,\n  HtmlDate,\n  HtmlFunction,\n  HtmlLength,\n  HtmlNumber,\n  HtmlObject,\n  HtmlString,\n  HtmlStyle,\n  I2 as If,\n  t3 as JSX,\n  KeepAlive,\n  ObservableSymbol,\n  P2 as Portal,\n  L as SYMBOLS_DIRECTIVES,\n  SYMBOL_CLONE,\n  h as SYMBOL_DEFAULT,\n  g2 as SYMBOL_JSX,\n  SYMBOL_OBSERVABLE,\n  a1 as SYMBOL_OBSERVABLE_FROZEN,\n  B as SYMBOL_OBSERVABLE_READABLE,\n  C as SYMBOL_OBSERVABLE_WRITABLE,\n  S2 as SYMBOL_STACK,\n  a0 as SYMBOL_SUSPENSE,\n  v as SYMBOL_SUSPENSE_COLLECTOR,\n  SYMBOL_TEMPLATE_ACCESSOR,\n  z as SYMBOL_UNCACHED,\n  a2 as SYMBOL_UNTRACKED,\n  d as SYMBOL_UNTRACKED_UNWRAPPED,\n  e as Stack,\n  S as Suspense,\n  c2 as Switch,\n  T2 as Ternary,\n  N2 as assign,\n  G2 as batch,\n  c as callStack,\n  K as castArray,\n  a3 as castError,\n  clone,\n  cloneElement,\n  t as context,\n  J2 as createContext,\n  K2 as createDirective,\n  createElement,\n  Q as customElement,\n  M2 as defaults,\n  ab as fixBigInt,\n  G as flatten,\n  g as getMeta,\n  h$1 as h,\n  L2 as hmr,\n  html,\n  indexOf,\n  isArray,\n  _ as isBatching,\n  R as isBoolean,\n  p as isClass,\n  a4 as isComponent,\n  a5 as isError,\n  a6 as isFalsy,\n  isFunction,\n  A as isFunctionReactive,\n  i as isJsx,\n  E as isNil,\n  n as isNode,\n  isObject,\n  isObservable,\n  P as isObservableWritable,\n  isPrimitive,\n  a7 as isPromise,\n  J as isSVG,\n  m as isSVGElement,\n  isServer,\n  N as isStore,\n  isString,\n  I as isTemplateAccessor,\n  a8 as isTruthy,\n  o as isVoidChild,\n  j as jsx,\n  a as jsxDEV,\n  b as jsxs,\n  lazy,\n  O as make,\n  R2 as mark,\n  a9 as noop,\n  once,\n  r as render,\n  a10 as renderToString,\n  resolve,\n  r2 as resolveArraysAndStatics,\n  n3 as setProp,\n  setRef,\n  T as store,\n  template,\n  H2 as tick,\n  ad as toArray,\n  u2 as untrack,\n  u as unwrapJsx,\n  f as useAbortController,\n  g3 as useAbortSignal,\n  i2 as useAnimationFrame,\n  j2 as useAnimationLoop,\n  d2 as useAttached,\n  b2 as useBoolean,\n  cleanup as useCleanup,\n  k as useContext,\n  y as useDisposed,\n  w as useEffect,\n  l as useEventListener,\n  n2 as useFetch,\n  p2 as useIdleCallback,\n  q as useIdleLoop,\n  s as useInterval,\n  e2 as useLightDom,\n  memo as useMemo,\n  H as useMicrotask,\n  w2 as useMounted,\n  x as useMountedContext,\n  t2 as usePromise,\n  z2 as useReadonly,\n  useResolved,\n  useResource,\n  root as useRoot,\n  A2 as useSelector,\n  B2 as useSuspended,\n  suspense as useSuspense,\n  v2 as useTimeout,\n  D2 as useUntracked,\n  wrapCloneElement\n};\n//# sourceMappingURL=index.es.js.map\n","/**\r\n * Handles string conversion in JEON to JavaScript\r\n * @param jeon The string value to convert\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitString(jeon: string, jsonImpl?: typeof JSON): string {\r\n    // Handle references\r\n    if (jeon.startsWith('@')) {\r\n        return jeon.substring(1)\r\n    }\r\n    return (jsonImpl || JSON).stringify(jeon)\r\n}","/**\r\n * Handles primitive value conversion in JEON to JavaScript\r\n * @param jeon The primitive value to convert\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitPrimitive(jeon: any, jsonImpl?: typeof JSON): string {\r\n    if (typeof jeon === 'number' || typeof jeon === 'boolean' || jeon === null) {\r\n        return (jsonImpl || JSON).stringify(jeon)\r\n    }\r\n    return ''\r\n}","/**\r\n * Handles array conversion in JEON to JavaScript\r\n * @param jeon The array to convert\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n * @param isTopLevel Whether this is a top-level call (default: false)\r\n */\r\nexport function visitArray(jeon: any[], visit: (item: any) => string, jsonImpl?: typeof JSON, isTopLevel: boolean = false): string {\r\n    // Handle execution blocks (arrays)\r\n    // Check if this array contains a spread operator\r\n    if (jeon.length === 1 && typeof jeon[0] === 'object' && jeon[0] !== null && jeon[0]['...']) {\r\n        const spreadValue = visit(jeon[0]['...'])\r\n        return `[...${spreadValue}]`\r\n    }\r\n\r\n    if (jeon.length === 0) {\r\n        return '[]'\r\n    }\r\n\r\n    // Check if it's a special construct\r\n    const firstElement = jeon[0]\r\n    if (typeof firstElement === 'object' && firstElement !== null) {\r\n        // Handle sequencing blocks\r\n        const statements = jeon.map(expr => visit(expr)).join(';\\n  ')\r\n        // Only wrap in IIFE if not at top level\r\n        if (!isTopLevel) {\r\n            return `(() => {\\n  ${statements};\\n})()`\r\n        } else {\r\n            // For top-level, just join the statements\r\n            return statements.replace(/;\\n  /g, ';\\n')\r\n        }\r\n    }\r\n\r\n    return `[${jeon.map(item => visit(item)).join(', ')}]`\r\n}","/**\r\n * Handles function declaration conversion in JEON to JavaScript\r\n * @param keys The keys of the JEON object\r\n * @param jeon The JEON object containing the function declaration\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitFunctionDeclaration(keys: string[], jeon: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string | null {\r\n    // Handle function declarations at the top level\r\n    for (const key of keys) {\r\n        if (key.startsWith('function') || key.startsWith('async function') || key.startsWith('function*')) {\r\n            const paramMatch = key.match(/\\(([^)]*)\\)/)\r\n            const params = paramMatch ? paramMatch[1].split(',').map((p: string) => p.trim()).filter((p: string) => p) : []\r\n            const body = jeon[key]\r\n            const bodyStr = Array.isArray(body) ? body.map((stmt: any) => visit(stmt)).join(';\\n  ') : visit(body)\r\n            return `${key.split('(')[0]}(${params.join(', ')}) {\\n  ${bodyStr}\\n}`\r\n        }\r\n    }\r\n    return null\r\n}","/**\r\n * Handles variable declaration conversion in JEON to JavaScript\r\n * @param op The operator (@ or @@)\r\n * @param operands The operands for the variable declaration\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitVariableDeclaration(op: string, operands: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string {\r\n    // Handle variable declarations and special cases like class declarations\r\n    const declarations = Object.entries(operands).map(([name, value]) => {\r\n        // Determine declaration type\r\n        const declarationType = op === '@@' ? 'const' : 'let'\r\n\r\n        // Check if this is a class declaration\r\n        if (typeof value === 'object' && value !== null && (value as any)['class']) {\r\n            // This is a class assigned to a variable\r\n            const classDef = (value as any)['class']\r\n            const classResult = visit({\r\n                'class': classDef\r\n            })\r\n            // Replace AnonymousClass with empty for anonymous class expression\r\n            return `${declarationType} ${name} = ${classResult.replace('class AnonymousClass', 'class')}`\r\n        }\r\n        // Check if this is a function declaration\r\n        if (typeof value === 'object' && value !== null) {\r\n            const valueKeys = Object.keys(value)\r\n            if (valueKeys.length === 1) {\r\n                const valueOp = valueKeys[0]\r\n                if (valueOp.startsWith('function') || valueOp.startsWith('async function') || valueOp.endsWith('=>')) {\r\n                    return `const ${name} = ${visit(value)}`\r\n                }\r\n                // Check if this is a JSX element\r\n                if (valueOp.startsWith('<') && valueOp.endsWith('>')) {\r\n                    return `${declarationType} ${name} = ${visit(value)};`\r\n                }\r\n            }\r\n        }\r\n        return `${declarationType} ${name} = ${visit(value)}`\r\n    })\r\n    return declarations.join(';\\n')\r\n}","/**\r\n * Handles arrow function conversion in JEON to JavaScript\r\n * @param op The operator (arrow function syntax)\r\n * @param operands The operands for the arrow function\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitArrowFunction(op: string, operands: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string {\r\n    // Handle flexible async arrow function declarations that match the async (...) => pattern\r\n    if (op.startsWith('async ') && op.endsWith(' =>')) {\r\n        const asyncArrowParamMatch = op.match(/\\(([^)]*)\\)/)\r\n        const asyncArrowParams = asyncArrowParamMatch ? asyncArrowParamMatch[1].split(',').map((p: string) => p.trim()).filter((p: string) => p) : []\r\n        const asyncArrowBody = Array.isArray(operands) ? operands.map((stmt: any) => visit(stmt)).join(';\\n  ') : visit(operands)\r\n        // Check if this is a block body (has explicit return statement) or expression\r\n        if (Array.isArray(operands)) {\r\n            // Multiple statements - block body\r\n            return `async (${asyncArrowParams.join(', ')}) => {\\n  ${asyncArrowBody}\\n}`\r\n        } else if (typeof operands === 'object' && operands !== null && operands.hasOwnProperty('return')) {\r\n            // Single return statement - block body\r\n            return `async (${asyncArrowParams.join(', ')}) => {\\n  ${asyncArrowBody}\\n}`\r\n        } else {\r\n            // Expression - wrap in return\r\n            return `async (${asyncArrowParams.join(', ')}) => { return ${asyncArrowBody}; }`\r\n        }\r\n    }\r\n\r\n    // Handle arrow functions with parameters\r\n    if (op.includes('=>')) {\r\n        const arrowParamMatch = op.match(/\\(([^)]*)\\)/)\r\n        const arrowParams = arrowParamMatch ? arrowParamMatch[1].split(',').map((p: string) => p.trim()).filter((p: string) => p) : []\r\n        const arrowBody = Array.isArray(operands) ? operands.map((stmt: any) => visit(stmt)).join(';\\n  ') : visit(operands)\r\n        // Check if this is a block body (has explicit return statement) or expression\r\n        if (Array.isArray(operands)) {\r\n            // Multiple statements - block body\r\n            return `(${arrowParams.join(', ')}) => {\\n  ${arrowBody}\\n}`\r\n        } else if (typeof operands === 'object' && operands !== null && operands.hasOwnProperty('return')) {\r\n            // Single return statement - block body\r\n            return `(${arrowParams.join(', ')}) => {\\n  ${arrowBody}\\n}`\r\n        } else {\r\n            // Expression - no braces needed\r\n            return `(${arrowParams.join(', ')}) => ${arrowBody}`\r\n        }\r\n    }\r\n\r\n    return ''\r\n}","/**\r\n * Handles JSX conversion in JEON to JavaScript\r\n * @param keys The keys of the JEON object\r\n * @param jeon The JEON object containing JSX\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitJSX(keys: string[], jeon: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string | null {\r\n    // Handle component structures (<Tag>)\r\n    const componentKey = keys.find(key => key.startsWith('<') && key.endsWith('>'))\r\n    if (componentKey) {\r\n        // This is a JSX-like component structure\r\n        // Generate proper JSX syntax\r\n        const tag = componentKey.substring(1, componentKey.length - 1)\r\n        const props = jeon[componentKey]\r\n        const children = props.children || []\r\n\r\n        // Generate props string\r\n        const propEntries = Object.entries(props)\r\n            .filter(([key]) => key !== 'children')\r\n            .map(([key, value]) => {\r\n                const valueStr = visit(value)\r\n                // For string values, we don't need quotes in JSX\r\n                if (typeof value === 'string') {\r\n                    return `${key}=\"${value}\"`\r\n                }\r\n                return `${key}={${valueStr}}`\r\n            })\r\n\r\n        const propsStr = propEntries.length > 0 ? ' ' + propEntries.join(' ') : ''\r\n\r\n        // Generate children string\r\n        if (children.length > 0) {\r\n            const childrenStr = children.map((child: any) => {\r\n                if (typeof child === 'string') {\r\n                    return child\r\n                }\r\n                // For JSX elements, don't wrap in curly braces\r\n                if (typeof child === 'object' && child !== null) {\r\n                    const childKeys = Object.keys(child)\r\n                    if (childKeys.length === 1 && childKeys[0].startsWith('<') && childKeys[0].endsWith('>')) {\r\n                        // This is a JSX element, convert it directly\r\n                        return visit(child)\r\n                    }\r\n                }\r\n                // For other expressions, wrap in curly braces\r\n                return `{${visit(child)}}`\r\n            }).join('')\r\n\r\n            // Format with newlines and indentation if there are child elements\r\n            if (children.some((child: any) => typeof child === 'object')) {\r\n                // If children contain JSX elements, format with newlines\r\n                const formattedChildren = children.map((child: any) => {\r\n                    if (typeof child === 'string') {\r\n                        return child\r\n                    }\r\n                    if (typeof child === 'object' && child !== null) {\r\n                        const childKeys = Object.keys(child)\r\n                        if (childKeys.length === 1 && childKeys[0].startsWith('<') && childKeys[0].endsWith('>')) {\r\n                            // Indent JSX elements\r\n                            return '\\n  ' + visit(child).replace(/\\n/g, '\\n  ')\r\n                        }\r\n                    }\r\n                    return `{${visit(child)}}`\r\n                }).join('')\r\n                return `<${tag}${propsStr}>${formattedChildren}\\n</${tag}>`\r\n            } else {\r\n                // Simple text children\r\n                return `<${tag}${propsStr}>${childrenStr}</${tag}>`\r\n            }\r\n        } else {\r\n            return `<${tag}${propsStr} />`\r\n        }\r\n    }\r\n    return null\r\n}","/**\r\n * Handles class conversion in JEON to JavaScript\r\n * @param op The operator (class ClassName)\r\n * @param operands The operands for the class (class members)\r\n * @param keys The keys of the JEON object\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitClass(op: string, operands: any, keys: string[], visit: (item: any) => string, jsonImpl?: typeof JSON): string {\r\n    // Handle class declarations (e.g., \"class Person\")\r\n    if (op.startsWith('class ')) {\r\n        const className = op.substring(6) // Extract class name after \"class \"\r\n        const classMembers = operands\r\n        const memberEntries = Object.entries(classMembers).map(([key, value]) => {\r\n            // Handle constructor\r\n            if (key.startsWith('constructor(')) {\r\n                const paramMatch = key.match(/\\(([^)]*)\\)/)\r\n                const params = paramMatch ? paramMatch[1].split(',').map(p => p.trim()).filter(p => p) : []\r\n                const body = Array.isArray(value) ? value.map((stmt: any) => visit(stmt)).join(';\\n    ') : visit(value)\r\n                return `  ${key.split('(')[0]}(${params.join(', ')}) {\\n    ${body}\\n  }`\r\n            }\r\n            // Handle methods\r\n            else if (key.includes('(')) {\r\n                const methodMatch = key.match(/^([^(]+)\\(([^)]*)\\)/)\r\n                if (methodMatch) {\r\n                    const methodName = methodMatch[1].trim()\r\n                    const paramStr = methodMatch[2]\r\n                    const params = paramStr.split(',').map(p => p.trim()).filter(p => p)\r\n                    // Handle array of statements for method body\r\n                    let body = ''\r\n                    if (Array.isArray(value)) {\r\n                        const statements = value.map((stmt: any) => visit(stmt)).join(';\\n    ')\r\n                        body = statements\r\n                    } else {\r\n                        body = visit(value)\r\n                    }\r\n                    return `  ${methodName}(${params.join(', ')}) {\\n    ${body}\\n  }`\r\n                }\r\n            }\r\n            // Handle getters/setters\r\n            else if (key.startsWith('get ') || key.startsWith('set ')) {\r\n                const [accessor, propName] = key.split(' ')\r\n                const body = Array.isArray(value) ? value.map((stmt: any) => visit(stmt)).join(';\\n    ') : visit(value)\r\n                return `  ${accessor} ${propName}() {\\n    ${body}\\n  }`\r\n            }\r\n            // Handle static members\r\n            else if (key.startsWith('static ')) {\r\n                const staticKey = key.substring(7)\r\n                if (staticKey.includes('(')) {\r\n                    const methodMatch = staticKey.match(/^([^(]+)\\(([^)]*)\\)/)\r\n                    if (methodMatch) {\r\n                        const methodName = methodMatch[1].trim()\r\n                        const paramStr = methodMatch[2]\r\n                        const params = paramStr.split(',').map(p => p.trim()).filter(p => p)\r\n                        const body = Array.isArray(value) ? value.map((stmt: any) => visit(stmt)).join(';\\n    ') : visit(value)\r\n                        return `  static ${methodName}(${params.join(', ')}) {\\n    ${body}\\n  }`\r\n                    }\r\n                } else {\r\n                    return `  static ${staticKey} = ${visit(value)}`\r\n                }\r\n            }\r\n            // Handle properties\r\n            else {\r\n                return `  ${key} = ${visit(value)}`\r\n            }\r\n        })\r\n        return `class ${className} {\\n${memberEntries.join('\\n')}\\n}`\r\n    }\r\n\r\n    // Handle class expressions (e.g., when class is a property of an object)\r\n    if (op === 'class') {\r\n        const className = keys.find(k => k !== 'class') || 'AnonymousClass'\r\n        const classMembers = operands\r\n        const memberEntries = Object.entries(classMembers).map(([key, value]) => {\r\n            // Handle constructor\r\n            if (key.startsWith('constructor(')) {\r\n                const paramMatch = key.match(/\\(([^)]*)\\)/)\r\n                const params = paramMatch ? paramMatch[1].split(',').map(p => p.trim()).filter(p => p) : []\r\n                const body = Array.isArray(value) ? value.map((stmt: any) => visit(stmt)).join(';\\n    ') : visit(value)\r\n                return `  ${key.split('(')[0]}(${params.join(', ')}) {\\n    ${body}\\n  }`\r\n            }\r\n            // Handle methods\r\n            else if (key.includes('(')) {\r\n                const methodMatch = key.match(/^([^(]+)\\(([^)]*)\\)/)\r\n                if (methodMatch) {\r\n                    const methodName = methodMatch[1].trim()\r\n                    const paramStr = methodMatch[2]\r\n                    const params = paramStr.split(',').map(p => p.trim()).filter(p => p)\r\n                    // Handle array of statements for method body\r\n                    let body = ''\r\n                    if (Array.isArray(value)) {\r\n                        const statements = value.map((stmt: any) => visit(stmt)).join(';\\n    ')\r\n                        body = statements\r\n                    } else {\r\n                        body = visit(value)\r\n                    }\r\n                    return `  ${methodName}(${params.join(', ')}) {\\n    ${body}\\n  }`\r\n                }\r\n            }\r\n            // Handle getters/setters\r\n            else if (key.startsWith('get ') || key.startsWith('set ')) {\r\n                const [accessor, propName] = key.split(' ')\r\n                const body = Array.isArray(value) ? value.map((stmt: any) => visit(stmt)).join(';\\n    ') : visit(value)\r\n                return `  ${accessor} ${propName}() {\\n    ${body}\\n  }`\r\n            }\r\n            // Handle static members\r\n            else if (key.startsWith('static ')) {\r\n                const staticKey = key.substring(7)\r\n                if (staticKey.includes('(')) {\r\n                    const methodMatch = staticKey.match(/^([^(]+)\\(([^)]*)\\)/)\r\n                    if (methodMatch) {\r\n                        const methodName = methodMatch[1].trim()\r\n                        const paramStr = methodMatch[2]\r\n                        const params = paramStr.split(',').map(p => p.trim()).filter(p => p)\r\n                        const body = Array.isArray(value) ? value.map((stmt: any) => visit(stmt)).join(';\\n    ') : visit(value)\r\n                        return `  static ${methodName}(${params.join(', ')}) {\\n    ${body}\\n  }`\r\n                    }\r\n                } else {\r\n                    return `  static ${staticKey} = ${visit(value)}`\r\n                }\r\n            }\r\n            // Handle properties\r\n            else {\r\n                return `  ${key} = ${visit(value)}`\r\n            }\r\n        })\r\n        return `class ${className} {\\n${memberEntries.join('\\n')}\\n}`\r\n    }\r\n    return ''\r\n}","/**\r\n * Generates a try/catch/finally block from JEON operands\r\n * @param operands The JEON operands containing try, catch, and finally blocks\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n * @returns The JavaScript try/catch/finally block as a string\r\n */\r\nexport function generateTryCatchBlock(operands: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string {\r\n    // Generate try block\r\n    const tryStatements = operands.body ?\r\n        (Array.isArray(operands.body) ? operands.body.map((stmt: any) => visit(stmt)).join(';\\n  ') : visit(operands.body)) : ''\r\n    const tryBlock = `try {\\n  ${tryStatements}\\n}`\r\n\r\n    // Generate catch block\r\n    let catchBlock = ''\r\n    if (operands.catch) {\r\n        const catchStatements = Array.isArray(operands.catch.body) ?\r\n            operands.catch.body.map((stmt: any) => visit(stmt)).join(';\\n    ') :\r\n            visit(operands.catch.body)\r\n        catchBlock = ` catch (${operands.catch.param || 'error'}) {\\n    ${catchStatements}\\n  }`\r\n    }\r\n\r\n    // Generate finally block\r\n    let finallyBlock = ''\r\n    if (operands.finally) {\r\n        const finallyStatements = Array.isArray(operands.finally) ?\r\n            operands.finally.map((stmt: any) => visit(stmt)).join(';\\n    ') :\r\n            visit(operands.finally)\r\n        finallyBlock = ` finally {\\n    ${finallyStatements}\\n  }`\r\n    }\r\n\r\n    return `${tryBlock}${catchBlock}${finallyBlock}`\r\n}","/**\r\n * Handles try/catch conversion in JEON to JavaScript\r\n * @param operands The operands for the try/catch block\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nimport { generateTryCatchBlock } from './utils'\r\n\r\nexport function visitTryCatch(operands: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string {\r\n    // Handle try/catch\r\n    if (operands) {\r\n        return generateTryCatchBlock(operands, visit, jsonImpl)\r\n    }\r\n    return ''\r\n}","/**\r\n * Handles operator conversion in JEON to JavaScript\r\n * @param op The operator\r\n * @param operands The operands for the operator\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitOperator(op: string, operands: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string {\r\n    switch (op) {\r\n        case '+':\r\n        case '-':\r\n        case '*':\r\n        case '/':\r\n        case '%':\r\n        case '==':\r\n        case '===':\r\n        case '!=':\r\n        case '!==':\r\n        case '<':\r\n        case '>':\r\n        case '<=':\r\n        case '>=':\r\n        case '&&':\r\n        case '||':\r\n            if (Array.isArray(operands) && operands.length >= 2) {\r\n                // Handle multiple operands by chaining binary operations\r\n                const operandStrings = operands.map(operand => visit(operand))\r\n                return `(${operandStrings.join(` ${op} `)})`\r\n            }\r\n            break\r\n\r\n        case '?':\r\n            if (Array.isArray(operands) && operands.length === 3) {\r\n                return `(${visit(operands[0])} ? ${visit(operands[1])} : ${visit(operands[2])})`\r\n            }\r\n            break\r\n\r\n        case 'if':\r\n            if (Array.isArray(operands) && operands.length === 2) {\r\n                return `if (${visit(operands[0])}) { ${visit(operands[1])}; }`\r\n            }\r\n            break\r\n\r\n        case 'while':\r\n            if (Array.isArray(operands) && operands.length === 2) {\r\n                return `while (${visit(operands[0])}) { ${visit(operands[1])}; }`\r\n            }\r\n            break\r\n\r\n        case 'for':\r\n            if (Array.isArray(operands) && operands.length === 4) {\r\n                return `for (${visit(operands[0])}; ${visit(operands[1])}; ${visit(operands[2])}) { ${visit(operands[3])}; }`\r\n            }\r\n            break\r\n\r\n        case 'function()':\r\n            // Handle traditional function declarations\r\n            const paramMatch = op.match(/\\(([^)]*)\\)/)\r\n            const params = paramMatch ? paramMatch[1].split(',').map(p => p.trim()).filter(p => p) : []\r\n            const body = Array.isArray(operands) ? operands.map(stmt => visit(stmt)).join(';\\n  ') : visit(operands)\r\n            return `function(${params.join(', ')}) {\\n  ${body}\\n}`\r\n\r\n        case 'await':\r\n            return `await ${visit(operands)}`\r\n\r\n        case '++':\r\n        case '--':\r\n            if (Array.isArray(operands) && operands.length === 1) {\r\n                return `${op}${visit(operands[0])}`\r\n            }\r\n            // Handle postfix\r\n            return `${visit(operands)}${op}`\r\n\r\n        case '+=':\r\n        case '-=':\r\n        case '*=':\r\n        case '/=':\r\n        case '%=':\r\n        case '<<=':\r\n        case '>>=':\r\n        case '>>>=':\r\n        case '&=':\r\n        case '^=':\r\n        case '|=':\r\n            if (Array.isArray(operands) && operands.length === 2) {\r\n                return `${visit(operands[0])} ${op} ${visit(operands[1])}`\r\n            }\r\n            break\r\n\r\n        case '...':\r\n            return `...${visit(operands)}`\r\n\r\n        case 'yield':\r\n            if (operands === null) {\r\n                return `yield`\r\n            }\r\n            return `yield ${visit(operands)}`\r\n\r\n        case 'yield*':\r\n            if (operands === null) {\r\n                return `yield*`\r\n            }\r\n            return `yield* ${visit(operands)}`\r\n\r\n        case 'break':\r\n            if (operands === null) {\r\n                return `break`\r\n            }\r\n            return `break ${operands}`\r\n\r\n        case 'return':\r\n            if (operands === null) {\r\n                return `return`\r\n            }\r\n            return `return ${visit(operands)}`\r\n\r\n    }\r\n    return ''\r\n}","/**\r\n * Handles function call conversion in JEON to JavaScript\r\n * @param keys The keys of the JEON object\r\n * @param jeon The JEON object containing the function call\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitFunctionCall(keys: string[], jeon: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string {\r\n    // Handle function calls (fn())\r\n    const functionCallKey = keys.find(key => key.endsWith('()'))\r\n    if (functionCallKey) {\r\n        const functionName = functionCallKey.substring(0, functionCallKey.length - 2)\r\n        const functionArgs = jeon[functionCallKey]\r\n        const args = Array.isArray(functionArgs) ? functionArgs.map((arg: any) => visit(arg)) : []\r\n        return `${functionName}(${args.join(', ')})`\r\n    }\r\n    return ''\r\n}","/**\r\n * Handles object conversion in JEON to JavaScript\r\n * @param keys The keys of the object\r\n * @param jeon The JEON object to convert\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitObject(keys: string[], jeon: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string {\r\n    // Default object handling\r\n    // Check if this object contains spread operators\r\n    const hasSpread = keys.some(key => key === '...' || key.startsWith('...'))\r\n    if (hasSpread) {\r\n        // Handle object with spread operators\r\n        const entries = []\r\n        for (const [key, value] of Object.entries(jeon)) {\r\n            if (key === '...') {\r\n                entries.push(`...${visit(value)}`)\r\n            } else if (key.startsWith('...')) {\r\n                // Handle multiple spread operators (...1, ...2, etc.)\r\n                entries.push(`...${visit(value)}`)\r\n            } else {\r\n                entries.push(`${(jsonImpl || JSON).stringify(key)}: ${visit(value)}`)\r\n            }\r\n        }\r\n        return `{ ${entries.join(', ')} }`\r\n    }\r\n\r\n    // Regular object handling\r\n    const entries = Object.entries(jeon).map(([key, value]) => {\r\n        return `${(jsonImpl || JSON).stringify(key)}: ${visit(value)}`\r\n    })\r\n    return `{ ${entries.join(', ')} }`\r\n}","/**\r\n * Handles property access conversion in JEON to JavaScript\r\n * @param op The operator (. or () or new or =)\r\n * @param operands The operands for the property access\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitPropertyAccess(op: string, operands: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string {\r\n    // Handle object property access\r\n    if (op === '.') {\r\n        if (Array.isArray(operands) && operands.length >= 2) {\r\n            return `${visit(operands[0])}.${operands.slice(1).join('.')}`\r\n        }\r\n    }\r\n\r\n    // Handle function execution\r\n    if (op === '()') {\r\n        if (Array.isArray(operands) && operands.length >= 1) {\r\n            const func = visit(operands[0])\r\n            const args = operands.slice(1).map(arg => visit(arg))\r\n            return `${func}(${args.join(', ')})`\r\n        }\r\n    }\r\n\r\n    // Handle new operator\r\n    if (op === 'new') {\r\n        if (Array.isArray(operands) && operands.length >= 1) {\r\n            const constructor = operands[0]\r\n            const args = operands.slice(1).map(arg => visit(arg))\r\n            return `new ${constructor}(${args.join(', ')})`\r\n        }\r\n    }\r\n\r\n    // Handle assignment\r\n    if (op === '=') {\r\n        if (Array.isArray(operands) && operands.length === 2) {\r\n            return `${visit(operands[0])} = ${visit(operands[1])}`\r\n        }\r\n    }\r\n\r\n    return ''\r\n}","/**\r\n * Handles sequencing conversion in JEON to JavaScript\r\n * @param op The operator (do)\r\n * @param operands The operands for the sequencing\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitSequencing(op: string, operands: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string {\r\n    // Handle sequencing blocks\r\n    if (op === 'do' && Array.isArray(operands)) {\r\n        const statements = operands.map(expr => visit(expr)).join(';\\n  ')\r\n        return `(() => {\\n  ${statements};\\n})()`\r\n    }\r\n    return ''\r\n}","/**\r\n * Handles switch statement conversion in JEON to JavaScript\r\n * @param operands The operands for the switch statement\r\n * @param visit The visitor function to process nested elements\r\n * @param jsonImpl The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function visitSwitch(operands: any, visit: (item: any) => string, jsonImpl?: typeof JSON): string {\r\n    if (!Array.isArray(operands) || operands.length !== 2) {\r\n        return ''\r\n    }\r\n\r\n    const discriminant = visit(operands[0])\r\n    const cases = operands[1]\r\n\r\n    if (!Array.isArray(cases)) {\r\n        return ''\r\n    }\r\n\r\n    const caseStatements = cases.map(caseClause => {\r\n        if (caseClause.case !== undefined) {\r\n            const caseValue = visit(caseClause.case)\r\n            const body = Array.isArray(caseClause.body)\r\n                ? caseClause.body.map((stmt: any) => visit(stmt)).join(';\\n    ')\r\n                : visit(caseClause.body)\r\n            return `    case ${caseValue}:\\n      ${body};`\r\n        } else if (caseClause.default !== undefined) {\r\n            const body = Array.isArray(caseClause.default)\r\n                ? caseClause.default.map((stmt: any) => visit(stmt)).join(';\\n    ')\r\n                : visit(caseClause.default)\r\n            return `    default:\\n      ${body};`\r\n        }\r\n        return ''\r\n    }).filter(stmt => stmt !== '')\r\n\r\n    return `switch (${discriminant}) {\\n${caseStatements.join('\\n')}\\n  }`\r\n}","import { visitString } from './stringVisitor'\r\nimport { visitPrimitive } from './primitiveVisitor'\r\nimport { visitArray } from './arrayVisitor'\r\nimport { visitFunctionDeclaration } from './functionDeclarationVisitor'\r\nimport { visitVariableDeclaration } from './variableDeclarationVisitor'\r\nimport { visitArrowFunction } from './arrowFunctionVisitor'\r\nimport { visitJSX } from './jsxVisitor'\r\nimport { visitClass } from './classVisitor'\r\nimport { visitTryCatch } from './tryCatchVisitor'\r\nimport { visitOperator } from './operatorVisitor'\r\nimport { visitFunctionCall } from './functionCallVisitor'\r\nimport { visitObject } from './objectVisitor'\r\nimport { visitPropertyAccess } from './propertyAccessVisitor'\r\nimport { visitSequencing } from './sequencingVisitor'\r\nimport { visitSwitch } from './switchVisitor'\r\n\r\nexport const visitorRegistry = {\r\n    visitString,\r\n    visitPrimitive,\r\n    visitArray,\r\n    visitFunctionDeclaration,\r\n    visitVariableDeclaration,\r\n    visitArrowFunction,\r\n    visitJSX,\r\n    visitClass,\r\n    visitTryCatch,\r\n    visitOperator,\r\n    visitFunctionCall,\r\n    visitObject,\r\n    visitPropertyAccess,\r\n    visitSequencing,\r\n    visitSwitch\r\n}","import * as ts from 'typescript'\r\nimport { visitorRegistry } from './jeon2js.visitors/visitorRegistry'\r\n\r\n/**\r\n * Converts JEON (JSON-based Executable Object Notation) to JavaScript code\r\n * @param jeon The JEON object to convert\r\n * @param options Conversion options\r\n * @param options.json The JSON implementation to use (JSON or JSON5)\r\n * @param isTopLevel Whether this is a top-level call (default: true)\r\n */\r\nexport function jeon2js(jeon: any, options?: { json?: typeof JSON }, isTopLevel: boolean = true): string {\r\n    // Set default JSON implementation if not provided\r\n    const jsonImpl = options?.json || JSON\r\n\r\n    if (typeof jeon === 'string') {\r\n        return visitorRegistry.visitString(jeon, jsonImpl)\r\n    }\r\n\r\n    if (typeof jeon === 'number' || typeof jeon === 'boolean' || jeon === null) {\r\n        return visitorRegistry.visitPrimitive(jeon, jsonImpl)\r\n    }\r\n\r\n    if (Array.isArray(jeon)) {\r\n        return visitorRegistry.visitArray(jeon, jeon2js, jsonImpl, isTopLevel)\r\n    }\r\n\r\n    if (typeof jeon === 'object' && jeon !== null) {\r\n        const keys = Object.keys(jeon)\r\n        if (keys.length === 0) {\r\n            return '{}'\r\n        }\r\n\r\n        // Handle function declarations at the top level\r\n        const functionDeclarationResult = visitorRegistry.visitFunctionDeclaration(keys, jeon, jeon2js, jsonImpl)\r\n        if (functionDeclarationResult) {\r\n            // When we process nested elements, they're not top level\r\n            return functionDeclarationResult\r\n        }\r\n\r\n        // Handle special JEON constructs\r\n        if (keys.length === 1) {\r\n            const op = keys[0]\r\n            const operands = jeon[op]\r\n\r\n            // Handle operators\r\n            const operatorResult = visitorRegistry.visitOperator(op, operands, jeon2js, jsonImpl)\r\n            if (operatorResult) {\r\n                return operatorResult\r\n            }\r\n\r\n            // Handle try/catch\r\n            if (op === 'try') {\r\n                return visitorRegistry.visitTryCatch(operands, jeon2js, jsonImpl)\r\n            }\r\n\r\n            // Handle variable declarations\r\n            if (op === '@' || op === '@@') {\r\n                return visitorRegistry.visitVariableDeclaration(op, operands, jeon2js, jsonImpl)\r\n            }\r\n\r\n            // Handle arrow functions\r\n            const arrowFunctionResult = visitorRegistry.visitArrowFunction(op, operands, jeon2js, jsonImpl)\r\n            if (arrowFunctionResult) {\r\n                // When we process nested elements, they're not top level\r\n                return arrowFunctionResult\r\n            }\r\n\r\n            // Handle class declarations\r\n            const classResult = visitorRegistry.visitClass(op, operands, keys, jeon2js, jsonImpl)\r\n            if (classResult) {\r\n                // When we process nested elements, they're not top level\r\n                return classResult\r\n            }\r\n\r\n            // Handle sequencing blocks\r\n            const sequencingResult = visitorRegistry.visitSequencing(op, operands, jeon2js, jsonImpl)\r\n            if (sequencingResult) {\r\n                return sequencingResult\r\n            }\r\n\r\n            // Handle property access\r\n            const propertyAccessResult = visitorRegistry.visitPropertyAccess(op, operands, jeon2js, jsonImpl)\r\n            if (propertyAccessResult) {\r\n                return propertyAccessResult\r\n            }\r\n\r\n            // Handle switch statements\r\n            if (op === 'switch') {\r\n                return visitorRegistry.visitSwitch(operands, jeon2js, jsonImpl)\r\n            }\r\n        }\r\n\r\n        // Handle JSX\r\n        const jsxResult = visitorRegistry.visitJSX(keys, jeon, jeon2js, jsonImpl)\r\n        if (jsxResult) {\r\n            return jsxResult\r\n        }\r\n\r\n        // Handle function calls\r\n        const functionCallResult = visitorRegistry.visitFunctionCall(keys, jeon, jeon2js, jsonImpl)\r\n        if (functionCallResult) {\r\n            return functionCallResult\r\n        }\r\n\r\n        // Default object handling\r\n        return visitorRegistry.visitObject(keys, jeon, jeon2js, jsonImpl)\r\n    }\r\n\r\n    return jsonImpl.stringify(jeon)\r\n}","// This file was generated. Do not modify manually!\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0897-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c8a\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7cd\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7dc\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range.\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords$1 = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n  return false\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords[name] = new TokenType(name, options)\n}\n\nvar types$1 = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  privateId: new TokenType(\"privateId\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n  coalesce: binop(\"??\", 1),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nfunction nextLineBreak(code, from, end) {\n  if ( end === void 0 ) end = code.length;\n\n  for (var i = from; i < end; i++) {\n    var next = code.charCodeAt(i);\n    if (isNewLine(next))\n      { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n  }\n  return -1\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\nvar hasOwn = Object.hasOwn || (function (obj, propName) { return (\n  hasOwnProperty.call(obj, propName)\n); });\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nvar regexpCache = Object.create(null);\n\nfunction wordsRegexp(words) {\n  return regexpCache[words] || (regexpCache[words] = new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\"))\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    var nextBreak = nextLineBreak(input, cur, offset);\n    if (nextBreak < 0) { return new Position(line, offset - cur) }\n    ++line;\n    cur = nextBreak;\n  }\n}\n\n// A second argument must be given to configure the parser process.\n// These options are recognized (only `ecmaVersion` is required):\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n  // (the latest version the library supports). This influences\n  // support for strict mode, the set of reserved words, and support\n  // for new syntax features.\n  ecmaVersion: null,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called when\n  // a semicolon is automatically inserted. It will be passed the\n  // position of the inserted semicolon as an offset, and if\n  // `locations` is enabled, it is given the location as a `{line,\n  // column}` object as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program, and an import.meta expression\n  // in a script isn't considered an error.\n  allowImportExportEverywhere: false,\n  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: null,\n  // When enabled, super identifiers are not constrained to\n  // appearing in methods and do not raise an error when they appear elsewhere.\n  allowSuperOutsideMethod: null,\n  // When enabled, hashbang directive in the beginning of file is\n  // allowed and treated as a line comment. Enabled by default when\n  // `ecmaVersion` >= 2023.\n  allowHashBang: false,\n  // By default, the parser will verify that private properties are\n  // only used in places where they are valid and have been declared.\n  // Set this to false to turn such checks off.\n  checkPrivateFields: true,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  // When this option has an array as value, objects representing the\n  // comments are pushed to it.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nvar warnedAboutEcmaVersion = false;\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion === \"latest\") {\n    options.ecmaVersion = 1e8;\n  } else if (options.ecmaVersion == null) {\n    if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n      warnedAboutEcmaVersion = true;\n      console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n    }\n    options.ecmaVersion = 11;\n  } else if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (!opts || opts.allowHashBang == null)\n    { options.allowHashBang = options.ecmaVersion >= 14; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar\n    SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128,\n    SCOPE_CLASS_STATIC_BLOCK = 256,\n    SCOPE_CLASS_FIELD_INIT = 512,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal* and declareName to determine the type of a binding\nvar\n    BIND_NONE = 0, // Not a binding\n    BIND_VAR = 1, // Var-style binding\n    BIND_LEXICAL = 2, // Let- or const-style binding\n    BIND_FUNCTION = 3, // Function declaration\n    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types$1.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n  this.potentialArrowInForAwait = false;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = Object.create(null);\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n\n  // The stack of private names.\n  // Each element has two properties: 'declared' and 'used'.\n  // When it exited from the outermost class definition, all used private names must be declared.\n  this.privateNameStack = [];\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n\nprototypeAccessors.canAwait.get = function () {\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    var ref = this.scopeStack[i];\n      var flags = ref.flags;\n    if (flags & (SCOPE_CLASS_STATIC_BLOCK | SCOPE_CLASS_FIELD_INIT)) { return false }\n    if (flags & SCOPE_FUNCTION) { return (flags & SCOPE_ASYNC) > 0 }\n  }\n  return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n};\n\nprototypeAccessors.allowSuper.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n  return (flags & SCOPE_SUPER) > 0 || this.options.allowSuperOutsideMethod\n};\n\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\nprototypeAccessors.allowNewDotTarget.get = function () {\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    var ref = this.scopeStack[i];\n      var flags = ref.flags;\n    if (flags & (SCOPE_CLASS_STATIC_BLOCK | SCOPE_CLASS_FIELD_INIT) ||\n        ((flags & SCOPE_FUNCTION) && !(flags & SCOPE_ARROW))) { return true }\n  }\n  return false\n};\n\nprototypeAccessors.inClassStaticBlock.get = function () {\n  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n};\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp$9 = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\[^]|[^'\\\\])*?)'|\"((?:\\\\[^]|[^\"\\\\])*?)\")/;\npp$9.strictDirective = function(start) {\n  if (this.options.ecmaVersion < 5) { return false }\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" ||\n        (lineBreak.test(spaceAfter[0]) &&\n         !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp$9.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp$9.isContextual = function(name) {\n  return this.type === types$1.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp$9.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp$9.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp$9.canInsertSemicolon = function() {\n  return this.type === types$1.eof ||\n    this.type === types$1.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp$9.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp$9.semicolon = function() {\n  if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp$9.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp$9.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp$9.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n};\n\npp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n};\n\npp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp$9.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp$9.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$8 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$8.parseTopLevel = function(node) {\n  var exports = Object.create(null);\n  if (!node.body) { node.body = []; }\n  while (this.type !== types$1.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\npp$8.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91 || nextCh === 92) { return true } // '[', '\\'\n  if (context) { return false }\n\n  if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$8.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, after;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length ||\n     !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n};\n\npp$8.isUsingKeyword = function(isAwaitUsing, isFor) {\n  if (this.options.ecmaVersion < 17 || !this.isContextual(isAwaitUsing ? \"await\" : \"using\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n\n  if (lineBreak.test(this.input.slice(this.pos, next))) { return false }\n\n  if (isAwaitUsing) {\n    var awaitEndPos = next + 5 /* await */, after;\n    if (this.input.slice(next, awaitEndPos) !== \"using\" ||\n      awaitEndPos === this.input.length ||\n      isIdentifierChar(after = this.input.charCodeAt(awaitEndPos)) ||\n      (after > 0xd7ff && after < 0xdc00)\n    ) { return false }\n\n    skipWhiteSpace.lastIndex = awaitEndPos;\n    var skipAfterUsing = skipWhiteSpace.exec(this.input);\n    if (skipAfterUsing && lineBreak.test(this.input.slice(awaitEndPos, awaitEndPos + skipAfterUsing[0].length))) { return false }\n  }\n\n  if (isFor) {\n    var ofEndPos = next + 2 /* of */, after$1;\n    if (this.input.slice(next, ofEndPos) === \"of\") {\n      if (ofEndPos === this.input.length ||\n        (!isIdentifierChar(after$1 = this.input.charCodeAt(ofEndPos)) && !(after$1 > 0xd7ff && after$1 < 0xdc00))) { return false }\n    }\n  }\n\n  var ch = this.input.charCodeAt(next);\n  return isIdentifierStart(ch, true) || ch === 92 // '\\'\n};\n\npp$8.isAwaitUsing = function(isFor) {\n  return this.isUsingKeyword(true, isFor)\n};\n\npp$8.isUsing = function(isFor) {\n  return this.isUsingKeyword(false, isFor)\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$8.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types$1._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types$1._debugger: return this.parseDebuggerStatement(node)\n  case types$1._do: return this.parseDoStatement(node)\n  case types$1._for: return this.parseForStatement(node)\n  case types$1._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types$1._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types$1._if: return this.parseIfStatement(node)\n  case types$1._return: return this.parseReturnStatement(node)\n  case types$1._switch: return this.parseSwitchStatement(node)\n  case types$1._throw: return this.parseThrowStatement(node)\n  case types$1._try: return this.parseTryStatement(node)\n  case types$1._const: case types$1._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types$1._while: return this.parseWhileStatement(node)\n  case types$1._with: return this.parseWithStatement(node)\n  case types$1.braceL: return this.parseBlock(true, node)\n  case types$1.semi: return this.parseEmptyStatement(node)\n  case types$1._export:\n  case types$1._import:\n    if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n      skipWhiteSpace.lastIndex = this.pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n      if (nextCh === 40 || nextCh === 46) // '(' or '.'\n        { return this.parseExpressionStatement(node, this.parseExpression()) }\n    }\n\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var usingKind = this.isAwaitUsing(false) ? \"await using\" : this.isUsing(false) ? \"using\" : null;\n    if (usingKind) {\n      if (topLevel && this.options.sourceType === \"script\") {\n        this.raise(this.start, \"Using declaration cannot appear in the top level when source type is `script`\");\n      }\n      if (usingKind === \"await using\") {\n        if (!this.canAwait) {\n          this.raise(this.start, \"Await using cannot appear outside of async function\");\n        }\n        this.next();\n      }\n      this.next();\n      this.parseVar(node, false, usingKind);\n      this.semicolon();\n      return this.finishNode(node, \"VariableDeclaration\")\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$8.parseBreakContinueStatement = function(node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types$1.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$8.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$8.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types$1._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types$1.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$8.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types$1.parenL);\n  if (this.type === types$1.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types$1._var || this.type === types$1._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    return this.parseForAfterInit(node, init$1, awaitAt)\n  }\n  var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n\n  var usingKind = this.isUsing(true) ? \"using\" : this.isAwaitUsing(true) ? \"await using\" : null;\n  if (usingKind) {\n    var init$2 = this.startNode();\n    this.next();\n    if (usingKind === \"await using\") { this.next(); }\n    this.parseVar(init$2, true, usingKind);\n    this.finishNode(init$2, \"VariableDeclaration\");\n    return this.parseForAfterInit(node, init$2, awaitAt)\n  }\n  var containsEsc = this.containsEsc;\n  var refDestructuringErrors = new DestructuringErrors;\n  var initPos = this.start;\n  var init = awaitAt > -1\n    ? this.parseExprSubscripts(refDestructuringErrors, \"await\")\n    : this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (awaitAt > -1) { // implies `ecmaVersion >= 9` (see declaration of awaitAt)\n      if (this.type === types$1._in) { this.unexpected(awaitAt); }\n      node.await = true;\n    } else if (isForOf && this.options.ecmaVersion >= 8) {\n      if (init.start === initPos && !containsEsc && init.type === \"Identifier\" && init.name === \"async\") { this.unexpected(); }\n      else if (this.options.ecmaVersion >= 9) { node.await = false; }\n    }\n    if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLValPattern(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\n// Helper method to parse for loop after variable initialization\npp$8.parseForAfterInit = function(node, init, awaitAt) {\n  if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init.declarations.length === 1) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types$1._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    return this.parseForIn(node, init)\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$8.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$8.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$8.parseSwitchStatement = function(node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types$1.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types$1.braceR;) {\n    if (this.type === types$1._case || this.type === types$1._default) {\n      var isCase = this.type === types$1._case;\n      if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types$1.colon);\n    } else {\n      if (!cur) { this.unexpected(); }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$8.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty$1 = [];\n\npp$8.parseCatchClauseParam = function() {\n  var param = this.parseBindingAtom();\n  var simple = param.type === \"Identifier\";\n  this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n  this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n  this.expect(types$1.parenR);\n\n  return param\n};\n\npp$8.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types$1._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types$1.parenL)) {\n      clause.param = this.parseCatchClauseParam();\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {\n  this.next();\n  this.parseVar(node, false, kind, allowMissingInitializer);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$8.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$8.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$8.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$8.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types$1.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) { this.strict = false; }\n  this.next();\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$8.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types$1.semi);\n  node.test = this.type === types$1.semi ? null : this.parseExpression();\n  this.expect(types$1.semi);\n  node.update = this.type === types$1.parenR ? null : this.parseExpression();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$8.parseForIn = function(node, init) {\n  var isForIn = this.type === types$1._in;\n  this.next();\n\n  if (\n    init.type === \"VariableDeclaration\" &&\n    init.declarations[0].init != null &&\n    (\n      !isForIn ||\n      this.options.ecmaVersion < 8 ||\n      this.strict ||\n      init.kind !== \"var\" ||\n      init.declarations[0].id.type !== \"Identifier\"\n    )\n  ) {\n    this.raise(\n      init.start,\n      ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n    );\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n};\n\n// Parse a list of variable declarations.\n\npp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types$1.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (!allowMissingInitializer && kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected();\n    } else if (!allowMissingInitializer && (kind === \"using\" || kind === \"await using\") && this.options.ecmaVersion >= 17 && this.type !== types$1._in && !this.isContextual(\"of\")) {\n      this.raise(this.lastTokEnd, (\"Missing initializer in \" + kind + \" declaration\"));\n    } else if (!allowMissingInitializer && decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types$1.comma)) { break }\n  }\n  return node\n};\n\npp$8.parseVarId = function(decl, kind) {\n  decl.id = kind === \"using\" || kind === \"await using\"\n    ? this.parseIdent()\n    : this.parseBindingAtom();\n\n  this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types$1.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$8.parseFunctionParams = function(node) {\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$8.parseClass = function(node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var privateNameMap = this.enterClassBody();\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types$1.braceL);\n  while (this.type !== types$1.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this.raiseRecoverable(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n        this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.exitClassBody();\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$8.parseClassElement = function(constructorAllowsSuper) {\n  if (this.eat(types$1.semi)) { return null }\n\n  var ecmaVersion = this.options.ecmaVersion;\n  var node = this.startNode();\n  var keyName = \"\";\n  var isGenerator = false;\n  var isAsync = false;\n  var kind = \"method\";\n  var isStatic = false;\n\n  if (this.eatContextual(\"static\")) {\n    // Parse static init block\n    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n      this.parseClassStaticBlock(node);\n      return node\n    }\n    if (this.isClassElementNameStart() || this.type === types$1.star) {\n      isStatic = true;\n    } else {\n      keyName = \"static\";\n    }\n  }\n  node.static = isStatic;\n  if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n      isAsync = true;\n    } else {\n      keyName = \"async\";\n    }\n  }\n  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n    isGenerator = true;\n  }\n  if (!keyName && !isAsync && !isGenerator) {\n    var lastValue = this.value;\n    if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n      if (this.isClassElementNameStart()) {\n        kind = lastValue;\n      } else {\n        keyName = lastValue;\n      }\n    }\n  }\n\n  // Parse element name\n  if (keyName) {\n    // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n    // The last token is any of those. Make it the element name.\n    node.computed = false;\n    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n    node.key.name = keyName;\n    this.finishNode(node.key, \"Identifier\");\n  } else {\n    this.parseClassElementName(node);\n  }\n\n  // Parse element value\n  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n    var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n    var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n    if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n    node.kind = isConstructor ? \"constructor\" : kind;\n    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n  } else {\n    this.parseClassField(node);\n  }\n\n  return node\n};\n\npp$8.isClassElementNameStart = function() {\n  return (\n    this.type === types$1.name ||\n    this.type === types$1.privateId ||\n    this.type === types$1.num ||\n    this.type === types$1.string ||\n    this.type === types$1.bracketL ||\n    this.type.keyword\n  )\n};\n\npp$8.parseClassElementName = function(element) {\n  if (this.type === types$1.privateId) {\n    if (this.value === \"constructor\") {\n      this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n    }\n    element.computed = false;\n    element.key = this.parsePrivateIdent();\n  } else {\n    this.parsePropertyName(element);\n  }\n};\n\npp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  // Check key and flags\n  var key = method.key;\n  if (method.kind === \"constructor\") {\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n  } else if (method.static && checkKeyName(method, \"prototype\")) {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n\n  // Parse value\n  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n  // Check value\n  if (method.kind === \"get\" && value.params.length !== 0)\n    { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && value.params.length !== 1)\n    { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$8.parseClassField = function(field) {\n  if (checkKeyName(field, \"constructor\")) {\n    this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n  } else if (field.static && checkKeyName(field, \"prototype\")) {\n    this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n  }\n\n  if (this.eat(types$1.eq)) {\n    // To raise SyntaxError if 'arguments' exists in the initializer.\n    this.enterScope(SCOPE_CLASS_FIELD_INIT | SCOPE_SUPER);\n    field.value = this.parseMaybeAssign();\n    this.exitScope();\n  } else {\n    field.value = null;\n  }\n  this.semicolon();\n\n  return this.finishNode(field, \"PropertyDefinition\")\n};\n\npp$8.parseClassStaticBlock = function(node) {\n  node.body = [];\n\n  var oldLabels = this.labels;\n  this.labels = [];\n  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  this.next();\n  this.exitScope();\n  this.labels = oldLabels;\n\n  return this.finishNode(node, \"StaticBlock\")\n};\n\npp$8.parseClassId = function(node, isStatement) {\n  if (this.type === types$1.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$8.parseClassSuper = function(node) {\n  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;\n};\n\npp$8.enterClassBody = function() {\n  var element = {declared: Object.create(null), used: []};\n  this.privateNameStack.push(element);\n  return element.declared\n};\n\npp$8.exitClassBody = function() {\n  var ref = this.privateNameStack.pop();\n  var declared = ref.declared;\n  var used = ref.used;\n  if (!this.options.checkPrivateFields) { return }\n  var len = this.privateNameStack.length;\n  var parent = len === 0 ? null : this.privateNameStack[len - 1];\n  for (var i = 0; i < used.length; ++i) {\n    var id = used[i];\n    if (!hasOwn(declared, id.name)) {\n      if (parent) {\n        parent.used.push(id);\n      } else {\n        this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n      }\n    }\n  }\n};\n\nfunction isPrivateNameConflicted(privateNameMap, element) {\n  var name = element.key.name;\n  var curr = privateNameMap[name];\n\n  var next = \"true\";\n  if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n    next = (element.static ? \"s\" : \"i\") + element.kind;\n  }\n\n  // `class { get #a(){}; static set #a(_){} }` is also conflict.\n  if (\n    curr === \"iget\" && next === \"iset\" ||\n    curr === \"iset\" && next === \"iget\" ||\n    curr === \"sget\" && next === \"sset\" ||\n    curr === \"sset\" && next === \"sget\"\n  ) {\n    privateNameMap[name] = \"true\";\n    return false\n  } else if (!curr) {\n    privateNameMap[name] = next;\n    return false\n  } else {\n    return true\n  }\n}\n\nfunction checkKeyName(node, name) {\n  var computed = node.computed;\n  var key = node.key;\n  return !computed && (\n    key.type === \"Identifier\" && key.name === name ||\n    key.type === \"Literal\" && key.value === name\n  )\n}\n\n// Parses module export declaration.\n\npp$8.parseExportAllDeclaration = function(node, exports) {\n  if (this.options.ecmaVersion >= 11) {\n    if (this.eatContextual(\"as\")) {\n      node.exported = this.parseModuleExportName();\n      this.checkExport(exports, node.exported, this.lastTokStart);\n    } else {\n      node.exported = null;\n    }\n  }\n  this.expectContextual(\"from\");\n  if (this.type !== types$1.string) { this.unexpected(); }\n  node.source = this.parseExprAtom();\n  if (this.options.ecmaVersion >= 16)\n    { node.attributes = this.parseWithClause(); }\n  this.semicolon();\n  return this.finishNode(node, \"ExportAllDeclaration\")\n};\n\npp$8.parseExport = function(node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types$1.star)) {\n    return this.parseExportAllDeclaration(node, exports)\n  }\n  if (this.eat(types$1._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    node.declaration = this.parseExportDefaultDeclaration();\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseExportDeclaration(node);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n    if (this.options.ecmaVersion >= 16)\n      { node.attributes = []; }\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types$1.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      if (this.options.ecmaVersion >= 16)\n        { node.attributes = this.parseWithClause(); }\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n\n        if (spec.local.type === \"Literal\") {\n          this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n        }\n      }\n\n      node.source = null;\n      if (this.options.ecmaVersion >= 16)\n        { node.attributes = []; }\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$8.parseExportDeclaration = function(node) {\n  return this.parseStatement(null)\n};\n\npp$8.parseExportDefaultDeclaration = function() {\n  var isAsync;\n  if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n    var fNode = this.startNode();\n    this.next();\n    if (isAsync) { this.next(); }\n    return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)\n  } else if (this.type === types$1._class) {\n    var cNode = this.startNode();\n    return this.parseClass(cNode, \"nullableID\")\n  } else {\n    var declaration = this.parseMaybeAssign();\n    this.semicolon();\n    return declaration\n  }\n};\n\npp$8.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (typeof name !== \"string\")\n    { name = name.type === \"Identifier\" ? name.name : name.value; }\n  if (hasOwn(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$8.checkPatternExport = function(exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n};\n\npp$8.checkVariableExport = function(exports, decls) {\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$8.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$8.parseExportSpecifier = function(exports) {\n  var node = this.startNode();\n  node.local = this.parseModuleExportName();\n\n  node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n  this.checkExport(\n    exports,\n    node.exported,\n    node.exported.start\n  );\n\n  return this.finishNode(node, \"ExportSpecifier\")\n};\n\npp$8.parseExportSpecifiers = function(exports) {\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    nodes.push(this.parseExportSpecifier(exports));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$8.parseImport = function(node) {\n  this.next();\n\n  // import '...'\n  if (this.type === types$1.string) {\n    node.specifiers = empty$1;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n  }\n  if (this.options.ecmaVersion >= 16)\n    { node.attributes = this.parseWithClause(); }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$8.parseImportSpecifier = function() {\n  var node = this.startNode();\n  node.imported = this.parseModuleExportName();\n\n  if (this.eatContextual(\"as\")) {\n    node.local = this.parseIdent();\n  } else {\n    this.checkUnreserved(node.imported);\n    node.local = node.imported;\n  }\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n\n  return this.finishNode(node, \"ImportSpecifier\")\n};\n\npp$8.parseImportDefaultSpecifier = function() {\n  // import defaultObj, { x, y as z } from '...'\n  var node = this.startNode();\n  node.local = this.parseIdent();\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n  return this.finishNode(node, \"ImportDefaultSpecifier\")\n};\n\npp$8.parseImportNamespaceSpecifier = function() {\n  var node = this.startNode();\n  this.next();\n  this.expectContextual(\"as\");\n  node.local = this.parseIdent();\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n  return this.finishNode(node, \"ImportNamespaceSpecifier\")\n};\n\npp$8.parseImportSpecifiers = function() {\n  var nodes = [], first = true;\n  if (this.type === types$1.name) {\n    nodes.push(this.parseImportDefaultSpecifier());\n    if (!this.eat(types$1.comma)) { return nodes }\n  }\n  if (this.type === types$1.star) {\n    nodes.push(this.parseImportNamespaceSpecifier());\n    return nodes\n  }\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    nodes.push(this.parseImportSpecifier());\n  }\n  return nodes\n};\n\npp$8.parseWithClause = function() {\n  var nodes = [];\n  if (!this.eat(types$1._with)) {\n    return nodes\n  }\n  this.expect(types$1.braceL);\n  var attributeKeys = {};\n  var first = true;\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var attr = this.parseImportAttribute();\n    var keyName = attr.key.type === \"Identifier\" ? attr.key.name : attr.key.value;\n    if (hasOwn(attributeKeys, keyName))\n      { this.raiseRecoverable(attr.key.start, \"Duplicate attribute key '\" + keyName + \"'\"); }\n    attributeKeys[keyName] = true;\n    nodes.push(attr);\n  }\n  return nodes\n};\n\npp$8.parseImportAttribute = function() {\n  var node = this.startNode();\n  node.key = this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\");\n  this.expect(types$1.colon);\n  if (this.type !== types$1.string) {\n    this.unexpected();\n  }\n  node.value = this.parseExprAtom();\n  return this.finishNode(node, \"ImportAttribute\")\n};\n\npp$8.parseModuleExportName = function() {\n  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n    var stringLiteral = this.parseLiteral(this.value);\n    if (loneSurrogate.test(stringLiteral.value)) {\n      this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n    }\n    return stringLiteral\n  }\n  return this.parseIdent(true)\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$8.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$8.isDirectiveCandidate = function(statement) {\n  return (\n    this.options.ecmaVersion >= 5 &&\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$7 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"AssignmentPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$7.toAssignableList = function(exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$7.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$7.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$7.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types$1.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types$1.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types$1.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this.expect(types$1.comma); }\n    if (allowEmpty && this.type === types$1.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === types$1.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types$1.comma) { this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\"); }\n      this.expect(close);\n      break\n    } else {\n      elts.push(this.parseAssignableListItem(allowModifiers));\n    }\n  }\n  return elts\n};\n\npp$7.parseAssignableListItem = function(allowModifiers) {\n  var elem = this.parseMaybeDefault(this.start, this.startLoc);\n  this.parseBindingListItem(elem);\n  return elem\n};\n\npp$7.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// The following three functions all verify that a node is an lvalue —\n// something that can be bound, or assigned to. In order to do so, they perform\n// a variety of checks:\n//\n// - Check that none of the bound/assigned-to identifiers are reserved words.\n// - Record name declarations for bindings in the appropriate scope.\n// - Check duplicate argument names, if checkClashes is set.\n//\n// If a complex binding pattern is encountered (e.g., object and array\n// destructuring), the entire pattern is recursively checked.\n//\n// There are three versions of checkLVal*() appropriate for different\n// circumstances:\n//\n// - checkLValSimple() shall be used if the syntactic construct supports\n//   nothing other than identifiers and member expressions. Parenthesized\n//   expressions are also correctly handled. This is generally appropriate for\n//   constructs for which the spec says\n//\n//   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   It is also appropriate for checking if an identifier is valid and not\n//   defined elsewhere, like import declarations or function/class identifiers.\n//\n//   Examples where this is used include:\n//     a += …;\n//     import a from '…';\n//   where a is the node to be checked.\n//\n// - checkLValPattern() shall be used if the syntactic construct supports\n//   anything checkLValSimple() supports, as well as object and array\n//   destructuring patterns. This is generally appropriate for constructs for\n//   which the spec says\n//\n//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n//   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   Examples where this is used include:\n//     (a = …);\n//     const a = …;\n//     try { … } catch (a) { … }\n//   where a is the node to be checked.\n//\n// - checkLValInnerPattern() shall be used if the syntactic construct supports\n//   anything checkLValPattern() supports, as well as default assignment\n//   patterns, rest elements, and other constructs that may appear within an\n//   object or array destructuring pattern.\n//\n//   As a special case, function parameters also use checkLValInnerPattern(),\n//   as they also support defaults and rest constructs.\n//\n// These functions deliberately support both assignment and binding constructs,\n// as the logic for both is exceedingly similar. If the node is the target of\n// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n// should be set to the appropriate BIND_* constant, like BIND_VAR or\n// BIND_LEXICAL.\n//\n// If the function is called with a non-BIND_NONE bindingType, then\n// additionally a checkClashes object may be specified to allow checking for\n// duplicate argument names. checkClashes is ignored if the provided construct\n// is an assignment (i.e., bindingType is BIND_NONE).\n\npp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  var isBind = bindingType !== BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (isBind) {\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (checkClashes) {\n        if (hasOwn(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    }\n    break\n\n  case \"ChainExpression\":\n    this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n    break\n\n  case \"MemberExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ParenthesizedExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n    return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n  default:\n    this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\npp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n    this.checkLValInnerPattern(prop, bindingType, checkClashes);\n    }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n    }\n    break\n\n  default:\n    this.checkLValSimple(expr, bindingType, checkClashes);\n  }\n};\n\npp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLValPattern(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLValPattern(expr.argument, bindingType, checkClashes);\n    break\n\n  default:\n    this.checkLValPattern(expr, bindingType, checkClashes);\n  }\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$6 = Parser.prototype;\n\npp$6.initialContext = function() {\n  return [types.b_stat]\n};\n\npp$6.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\npp$6.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types.f_expr || parent === types.f_stat)\n    { return true }\n  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n    { return true }\n  if (prevType === types$1.braceL)\n    { return parent === types.b_stat }\n  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$6.inGeneratorContext = function() {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$6.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types$1.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Used to handle edge cases when token context could not be inferred correctly during tokenization phase\n\npp$6.overrideContext = function(tokenCtx) {\n  if (this.curContext() !== tokenCtx) {\n    this.context[this.context.length - 1] = tokenCtx;\n  }\n};\n\n// Token-specific context update code\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes$1.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types$1._else &&\n      !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n      !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n    { this.context.push(types.f_expr); }\n  else\n    { this.context.push(types.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes$1.colon.updateContext = function() {\n  if (this.curContext().token === \"function\") { this.context.pop(); }\n  this.exprAllowed = true;\n};\n\ntypes$1.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes$1.star.updateContext = function(prevType) {\n  if (prevType === types$1._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types.f_expr)\n      { this.context[index] = types.f_expr_gen; }\n    else\n      { this.context[index] = types.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes$1.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\nvar pp$5 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0) {\n            refDestructuringErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n        }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$5.parseExpression = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n  if (this.type === types$1.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(forInit) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldDoubleProto = refDestructuringErrors.doubleProto;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types$1.parenL || this.type === types$1.name) {\n    this.potentialArrowAt = this.start;\n    this.potentialArrowInForAwait = forInit === \"await\";\n  }\n  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    if (this.type === types$1.eq)\n      { left = this.toAssignable(left, false, refDestructuringErrors); }\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= left.start)\n      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n    if (this.type === types$1.eq)\n      { this.checkLValPattern(left); }\n    else\n      { this.checkLValSimple(left); }\n    node.left = left;\n    this.next();\n    node.right = this.parseMaybeAssign(forInit);\n    if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(forInit, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types$1.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types$1.colon);\n    node.alternate = this.parseMaybeAssign(forInit);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n  var prec = this.type.binop;\n  if (prec != null && (!forInit || this.type !== types$1._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n      var coalesce = this.type === types$1.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types$1.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n    }\n  }\n  return left\n};\n\npp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && this.canAwait) {\n    expr = this.parseAwait(forInit);\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types$1.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, update, forInit);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLValSimple(node.argument); }\n    else if (this.strict && node.operator === \"delete\" && isLocalVariableAccess(node.argument))\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n      { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (!sawUnary && this.type === types$1.privateId) {\n    if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }\n    expr = this.parsePrivateIdent();\n    // only could be private fields in 'in', such as #x in obj\n    if (this.type !== types$1._in) { this.unexpected(); }\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLValSimple(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!incDec && this.eat(types$1.starstar)) {\n    if (sawUnary)\n      { this.unexpected(this.lastTokStart); }\n    else\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n  } else {\n    return expr\n  }\n};\n\nfunction isLocalVariableAccess(node) {\n  return (\n    node.type === \"Identifier\" ||\n    node.type === \"ParenthesizedExpression\" && isLocalVariableAccess(node.expression)\n  )\n}\n\nfunction isPrivateFieldAccess(node) {\n  return (\n    node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n    node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression) ||\n    node.type === \"ParenthesizedExpression\" && isPrivateFieldAccess(node.expression)\n  )\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n    { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n  }\n  return result\n};\n\npp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n      this.potentialArrowAt === base.start;\n  var optionalChained = false;\n\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n    if (element.optional) { optionalChained = true; }\n    if (element === base || element.type === \"ArrowFunctionExpression\") {\n      if (optionalChained) {\n        var chainNode = this.startNodeAt(startPos, startLoc);\n        chainNode.expression = element;\n        element = this.finishNode(chainNode, \"ChainExpression\");\n      }\n      return element\n    }\n\n    base = element;\n  }\n};\n\npp$5.shouldParseAsyncArrow = function() {\n  return !this.canInsertSemicolon() && this.eat(types$1.arrow)\n};\n\npp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n};\n\npp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optional = optionalSupported && this.eat(types$1.questionDot);\n  if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n  var computed = this.eat(types$1.bracketL);\n  if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(types$1.bracketR);\n    } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n      node.property = this.parsePrivateIdent();\n    } else {\n      node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n    }\n    node.computed = !!computed;\n    if (optionalSupported) {\n      node.optional = optional;\n    }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types$1.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    if (optionalSupported) {\n      node$1.optional = optional;\n    }\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types$1.backQuote) {\n    if (optional || optionalChained) {\n      this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n    }\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types$1.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types$1._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types$1.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super ( Arguments )\n    if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types$1._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types$1.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n      this.overrideContext(types.f_expr);\n      return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n    }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types$1.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n          (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n      }\n    }\n    return id\n\n  case types$1.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types$1.num: case types$1.string:\n    return this.parseLiteral(this.value)\n\n  case types$1._null: case types$1._true: case types$1._false:\n    node = this.startNode();\n    node.value = this.type === types$1._null ? null : this.type === types$1._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types$1.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types$1.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types$1.braceL:\n    this.overrideContext(types.b_expr);\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types$1._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types$1._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types$1._new:\n    return this.parseNew()\n\n  case types$1.backQuote:\n    return this.parseTemplate()\n\n  case types$1._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport(forNew)\n    } else {\n      return this.unexpected()\n    }\n\n  default:\n    return this.parseExprAtomDefault()\n  }\n};\n\npp$5.parseExprAtomDefault = function() {\n  this.unexpected();\n};\n\npp$5.parseExprImport = function(forNew) {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n  this.next();\n\n  if (this.type === types$1.parenL && !forNew) {\n    return this.parseDynamicImport(node)\n  } else if (this.type === types$1.dot) {\n    var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n    meta.name = \"import\";\n    node.meta = this.finishNode(meta, \"Identifier\");\n    return this.parseImportMeta(node)\n  } else {\n    this.unexpected();\n  }\n};\n\npp$5.parseDynamicImport = function(node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  if (this.options.ecmaVersion >= 16) {\n    if (!this.eat(types$1.parenR)) {\n      this.expect(types$1.comma);\n      if (!this.afterTrailingComma(types$1.parenR)) {\n        node.options = this.parseMaybeAssign();\n        if (!this.eat(types$1.parenR)) {\n          this.expect(types$1.comma);\n          if (!this.afterTrailingComma(types$1.parenR)) {\n            this.unexpected();\n          }\n        }\n      } else {\n        node.options = null;\n      }\n    } else {\n      node.options = null;\n    }\n  } else {\n    // Verify ending.\n    if (!this.eat(types$1.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n  }\n\n  return this.finishNode(node, \"ImportExpression\")\n};\n\npp$5.parseImportMeta = function(node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n\n  if (node.property.name !== \"meta\")\n    { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n  if (containsEsc)\n    { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n  if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n    { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n  return this.finishNode(node, \"MetaProperty\")\n};\n\npp$5.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110)\n    { node.bigint = node.value != null ? node.value.toString() : node.raw.slice(0, -1).replace(/_/g, \"\"); }\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$5.parseParenExpression = function() {\n  this.expect(types$1.parenL);\n  var val = this.parseExpression();\n  this.expect(types$1.parenR);\n  return val\n};\n\npp$5.shouldParseArrow = function(exprList) {\n  return !this.canInsertSemicolon()\n};\n\npp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types$1.parenR) {\n      first ? first = false : this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this.type === types$1.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types$1.comma) {\n          this.raiseRecoverable(\n            this.start,\n            \"Comma is not permitted after the rest element\"\n          );\n        }\n        break\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n    this.expect(types$1.parenR);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$5.parseParenItem = function(item) {\n  return item\n};\n\npp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\n\npp$5.parseNew = function() {\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n  var node = this.startNode();\n  this.next();\n  if (this.options.ecmaVersion >= 6 && this.type === types$1.dot) {\n    var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n    meta.name = \"new\";\n    node.meta = this.finishNode(meta, \"Identifier\");\n    this.next();\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n    if (!this.allowNewDotTarget)\n      { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);\n  if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$5.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types$1.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value.replace(/\\r\\n?/g, \"\\n\"),\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types$1.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$5.parseTemplate = function(ref) {\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n    this.expect(types$1.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types$1.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$5.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$5.parseObj = function(isPattern, refDestructuringErrors) {\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types$1.comma) {\n        this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types$1.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n    this.parsePropertyName(prop);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$5.parseGetterSetter = function(prop) {\n  var kind = prop.key.name;\n  this.parsePropertyName(prop);\n  prop.value = this.parseMethod(false);\n  prop.kind = kind;\n  var paramCount = prop.kind === \"get\" ? 0 : 1;\n  if (prop.value.params.length !== paramCount) {\n    var start = prop.value.start;\n    if (prop.kind === \"get\")\n      { this.raiseRecoverable(start, \"getter should have no params\"); }\n    else\n      { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n  } else {\n    if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n  }\n};\n\npp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types$1.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types$1.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n    prop.kind = \"init\";\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.parseGetterSetter(prop);\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else if (this.type === types$1.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else {\n      prop.value = this.copyNode(prop.key);\n    }\n    prop.kind = \"init\";\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$5.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types$1.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n};\n\n// Initialize empty function node.\n\npp$5.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n  var isExpression = isArrowFunction && this.type !== types$1.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign(forInit);\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\n\npp$5.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$5.checkParams = function(node, allowDuplicates) {\n  var nameHash = Object.create(null);\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this.type === types$1.comma)\n      { elt = null; }\n    else if (this.type === types$1.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this.start; }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$5.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (!(this.currentThisScope().flags & SCOPE_VAR) && name === \"arguments\")\n    { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n  if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n    { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$5.parseIdent = function(liberal) {\n  var node = this.parseIdentNode();\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\npp$5.parseIdentNode = function() {\n  var node = this.startNode();\n  if (this.type === types$1.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n      (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n    this.type = types$1.name;\n  } else {\n    this.unexpected();\n  }\n  return node\n};\n\npp$5.parsePrivateIdent = function() {\n  var node = this.startNode();\n  if (this.type === types$1.privateId) {\n    node.name = this.value;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"PrivateIdentifier\");\n\n  // For validating existence\n  if (this.options.checkPrivateFields) {\n    if (this.privateNameStack.length === 0) {\n      this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n    } else {\n      this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n    }\n  }\n\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$5.parseYield = function(forInit) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types$1.star);\n    node.argument = this.parseMaybeAssign(forInit);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$5.parseAwait = function(forInit) {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true, false, forInit);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  if (this.sourceFile) {\n    message += \" in \" + this.sourceFile;\n  }\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$3 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$3.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$3.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$3.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$3.declareName = function(name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$3.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$3.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$3.currentVarScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & (SCOPE_VAR | SCOPE_CLASS_FIELD_INIT | SCOPE_CLASS_STATIC_BLOCK)) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$3.currentThisScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & (SCOPE_VAR | SCOPE_CLASS_FIELD_INIT | SCOPE_CLASS_STATIC_BLOCK) &&\n        !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$2 = Parser.prototype;\n\npp$2.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$2.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$2.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$2.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\npp$2.copyNode = function(node) {\n  var newNode = new Node(this, node.start, this.startLoc);\n  for (var prop in node) { newNode[prop] = node[prop]; }\n  return newNode\n};\n\n// This file was generated by \"bin/generate-unicode-script-values.js\". Do not modify manually!\nvar scriptValuesAddedInUnicode = \"Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz\";\n\n// This file contains Unicode properties extracted from the ECMAScript specification.\n// The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\nvar ecma13BinaryProperties = ecma12BinaryProperties;\nvar ecma14BinaryProperties = ecma13BinaryProperties;\n\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties,\n  12: ecma12BinaryProperties,\n  13: ecma13BinaryProperties,\n  14: ecma14BinaryProperties\n};\n\n// #table-binary-unicode-properties-of-strings\nvar ecma14BinaryPropertiesOfStrings = \"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji\";\n\nvar unicodeBinaryPropertiesOfStrings = {\n  9: \"\",\n  10: \"\",\n  11: \"\",\n  12: \"\",\n  13: \"\",\n  14: ecma14BinaryPropertiesOfStrings\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\nvar ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\nvar ecma14ScriptValues = ecma13ScriptValues + \" \" + scriptValuesAddedInUnicode;\n\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues,\n  12: ecma12ScriptValues,\n  13: ecma13ScriptValues,\n  14: ecma14ScriptValues\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\n\nfor (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {\n  var ecmaVersion = list[i];\n\n  buildUnicodeData(ecmaVersion);\n}\n\nvar pp$1 = Parser.prototype;\n\n// Track disjunction structure to determine whether a duplicate\n// capture group name is allowed because it is in a separate branch.\nvar BranchID = function BranchID(parent, base) {\n  // Parent disjunction branch\n  this.parent = parent;\n  // Identifies this set of sibling branches\n  this.base = base || this;\n};\n\nBranchID.prototype.separatedFrom = function separatedFrom (alt) {\n  // A branch is separate from another branch if they or any of\n  // their parents are siblings in a given disjunction\n  for (var self = this; self; self = self.parent) {\n    for (var other = alt; other; other = other.parent) {\n      if (self.base === other.base && self !== other) { return true }\n    }\n  }\n  return false\n};\n\nBranchID.prototype.sibling = function sibling () {\n  return new BranchID(this.parent, this.base)\n};\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\") + (parser.options.ecmaVersion >= 15 ? \"v\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchV = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = Object.create(null);\n  this.backReferenceNames = [];\n  this.branchID = null;\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicodeSets = flags.indexOf(\"v\") !== -1;\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  if (unicodeSets && this.parser.options.ecmaVersion >= 15) {\n    this.switchU = true;\n    this.switchV = true;\n    this.switchN = true;\n  } else {\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchV = false;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  }\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i), next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.pos, forceU)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.nextIndex(this.pos, forceU), forceU)\n};\n\nRegExpValidationState.prototype.advance = function advance (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  this.pos = this.nextIndex(this.pos, forceU);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true\n  }\n  return false\n};\n\nRegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var pos = this.pos;\n  for (var i = 0, list = chs; i < list.length; i += 1) {\n    var ch = list[i];\n\n      var current = this.at(pos, forceU);\n    if (current === -1 || current !== ch) {\n      return false\n    }\n    pos = this.nextIndex(pos, forceU);\n  }\n  this.pos = pos;\n  return true\n};\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpFlags = function(state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  var u = false;\n  var v = false;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n    if (flag === \"u\") { u = true; }\n    if (flag === \"v\") { v = true; }\n  }\n  if (this.options.ecmaVersion >= 15 && u && v) {\n    this.raise(state.start, \"Invalid regular expression flag\");\n  }\n};\n\nfunction hasProp(obj) {\n  for (var _ in obj) { return true }\n  return false\n}\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && hasProp(state.groupNames)) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$1.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames = Object.create(null);\n  state.backReferenceNames.length = 0;\n  state.branchID = null;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (!state.groupNames[name]) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$1.regexp_disjunction = function(state) {\n  var trackDisjunction = this.options.ecmaVersion >= 16;\n  if (trackDisjunction) { state.branchID = new BranchID(state.branchID, null); }\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    if (trackDisjunction) { state.branchID = state.branchID.sibling(); }\n    this.regexp_alternative(state);\n  }\n  if (trackDisjunction) { state.branchID = state.branchID.parent; }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$1.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$1.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$1.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$1.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$1.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$1.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */)) {\n      if (this.options.ecmaVersion >= 16) {\n        var addModifiers = this.regexp_eatModifiers(state);\n        var hasHyphen = state.eat(0x2D /* - */);\n        if (addModifiers || hasHyphen) {\n          for (var i = 0; i < addModifiers.length; i++) {\n            var modifier = addModifiers.charAt(i);\n            if (addModifiers.indexOf(modifier, i + 1) > -1) {\n              state.raise(\"Duplicate regular expression modifiers\");\n            }\n          }\n          if (hasHyphen) {\n            var removeModifiers = this.regexp_eatModifiers(state);\n            if (!addModifiers && !removeModifiers && state.current() === 0x3A /* : */) {\n              state.raise(\"Invalid regular expression modifiers\");\n            }\n            for (var i$1 = 0; i$1 < removeModifiers.length; i$1++) {\n              var modifier$1 = removeModifiers.charAt(i$1);\n              if (\n                removeModifiers.indexOf(modifier$1, i$1 + 1) > -1 ||\n                addModifiers.indexOf(modifier$1) > -1\n              ) {\n                state.raise(\"Duplicate regular expression modifiers\");\n              }\n            }\n          }\n        }\n      }\n      if (state.eat(0x3A /* : */)) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 /* ) */)) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n// RegularExpressionModifiers ::\n//   [empty]\n//   RegularExpressionModifiers RegularExpressionModifier\npp$1.regexp_eatModifiers = function(state) {\n  var modifiers = \"\";\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && isRegularExpressionModifier(ch)) {\n    modifiers += codePointToString(ch);\n    state.advance();\n  }\n  return modifiers\n};\n// RegularExpressionModifier :: one of\n//   `i` `m` `s`\nfunction isRegularExpressionModifier(ch) {\n  return ch === 0x69 /* i */ || ch === 0x6d /* m */ || ch === 0x73 /* s */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$1.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$1.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$1.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$1.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$1.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (!this.regexp_eatGroupName(state)) { state.raise(\"Invalid group\"); }\n    var trackDisjunction = this.options.ecmaVersion >= 16;\n    var known = state.groupNames[state.lastStringValue];\n    if (known) {\n      if (trackDisjunction) {\n        for (var i = 0, list = known; i < list.length; i += 1) {\n          var altID = list[i];\n\n          if (!altID.separatedFrom(state.branchID))\n            { state.raise(\"Duplicate capture group name\"); }\n        }\n      } else {\n        state.raise(\"Duplicate capture group name\");\n      }\n    }\n    if (trackDisjunction) {\n      (known || (state.groupNames[state.lastStringValue] = [])).push(state.branchID);\n    } else {\n      state.groupNames[state.lastStringValue] = true;\n    }\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$1.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$1.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$1.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$1.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$1.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$1.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$1.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$1.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n  if ( forceU === void 0 ) forceU = false;\n\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$1.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$1.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// Return values used by character set parsing methods, needed to\n// forbid negation of sets that can match strings.\nvar CharSetNone = 0; // Nothing parsed\nvar CharSetOk = 1; // Construct parsed, cannot contain strings\nvar CharSetString = 2; // Construct parsed, can contain strings\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$1.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return CharSetOk\n  }\n\n  var negate = false;\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    var result;\n    if (\n      state.eat(0x7B /* { */) &&\n      (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&\n      state.eat(0x7D /* } */)\n    ) {\n      if (negate && result === CharSetString) { state.raise(\"Invalid property name\"); }\n      return result\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return CharSetNone\n};\n\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return CharSetOk\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)\n  }\n  return CharSetNone\n};\n\npp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!hasOwn(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\n\npp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }\n  if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }\n  state.raise(\"Invalid property name\");\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$1.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\n\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$1.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    var negate = state.eat(0x5E /* ^ */);\n    var result = this.regexp_classContents(state);\n    if (!state.eat(0x5D /* ] */))\n      { state.raise(\"Unterminated character class\"); }\n    if (negate && result === CharSetString)\n      { state.raise(\"Negated character class may contain strings\"); }\n    return true\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassContents\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\npp$1.regexp_classContents = function(state) {\n  if (state.current() === 0x5D /* ] */) { return CharSetOk }\n  if (state.switchV) { return this.regexp_classSetExpression(state) }\n  this.regexp_nonEmptyClassRanges(state);\n  return CharSetOk\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$1.regexp_nonEmptyClassRanges = function(state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$1.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$1.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetExpression\n// https://tc39.es/ecma262/#prod-ClassUnion\n// https://tc39.es/ecma262/#prod-ClassIntersection\n// https://tc39.es/ecma262/#prod-ClassSubtraction\npp$1.regexp_classSetExpression = function(state) {\n  var result = CharSetOk, subResult;\n  if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {\n    if (subResult === CharSetString) { result = CharSetString; }\n    // https://tc39.es/ecma262/#prod-ClassIntersection\n    var start = state.pos;\n    while (state.eatChars([0x26, 0x26] /* && */)) {\n      if (\n        state.current() !== 0x26 /* & */ &&\n        (subResult = this.regexp_eatClassSetOperand(state))\n      ) {\n        if (subResult !== CharSetString) { result = CharSetOk; }\n        continue\n      }\n      state.raise(\"Invalid character in character class\");\n    }\n    if (start !== state.pos) { return result }\n    // https://tc39.es/ecma262/#prod-ClassSubtraction\n    while (state.eatChars([0x2D, 0x2D] /* -- */)) {\n      if (this.regexp_eatClassSetOperand(state)) { continue }\n      state.raise(\"Invalid character in character class\");\n    }\n    if (start !== state.pos) { return result }\n  } else {\n    state.raise(\"Invalid character in character class\");\n  }\n  // https://tc39.es/ecma262/#prod-ClassUnion\n  for (;;) {\n    if (this.regexp_eatClassSetRange(state)) { continue }\n    subResult = this.regexp_eatClassSetOperand(state);\n    if (!subResult) { return result }\n    if (subResult === CharSetString) { result = CharSetString; }\n  }\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetRange\npp$1.regexp_eatClassSetRange = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatClassSetCharacter(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {\n      var right = state.lastIntValue;\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetOperand\npp$1.regexp_eatClassSetOperand = function(state) {\n  if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }\n  return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)\n};\n\n// https://tc39.es/ecma262/#prod-NestedClass\npp$1.regexp_eatNestedClass = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5B /* [ */)) {\n    var negate = state.eat(0x5E /* ^ */);\n    var result = this.regexp_classContents(state);\n    if (state.eat(0x5D /* ] */)) {\n      if (negate && result === CharSetString) {\n        state.raise(\"Negated character class may contain strings\");\n      }\n      return result\n    }\n    state.pos = start;\n  }\n  if (state.eat(0x5C /* \\ */)) {\n    var result$1 = this.regexp_eatCharacterClassEscape(state);\n    if (result$1) {\n      return result$1\n    }\n    state.pos = start;\n  }\n  return null\n};\n\n// https://tc39.es/ecma262/#prod-ClassStringDisjunction\npp$1.regexp_eatClassStringDisjunction = function(state) {\n  var start = state.pos;\n  if (state.eatChars([0x5C, 0x71] /* \\q */)) {\n    if (state.eat(0x7B /* { */)) {\n      var result = this.regexp_classStringDisjunctionContents(state);\n      if (state.eat(0x7D /* } */)) {\n        return result\n      }\n    } else {\n      // Make the same message as V8.\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return null\n};\n\n// https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents\npp$1.regexp_classStringDisjunctionContents = function(state) {\n  var result = this.regexp_classString(state);\n  while (state.eat(0x7C /* | */)) {\n    if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }\n  }\n  return result\n};\n\n// https://tc39.es/ecma262/#prod-ClassString\n// https://tc39.es/ecma262/#prod-NonEmptyClassString\npp$1.regexp_classString = function(state) {\n  var count = 0;\n  while (this.regexp_eatClassSetCharacter(state)) { count++; }\n  return count === 1 ? CharSetOk : CharSetString\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetCharacter\npp$1.regexp_eatClassSetCharacter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (\n      this.regexp_eatCharacterEscape(state) ||\n      this.regexp_eatClassSetReservedPunctuator(state)\n    ) {\n      return true\n    }\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n    state.pos = start;\n    return false\n  }\n  var ch = state.current();\n  if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }\n  if (isClassSetSyntaxCharacter(ch)) { return false }\n  state.advance();\n  state.lastIntValue = ch;\n  return true\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator\nfunction isClassSetReservedDoublePunctuatorCharacter(ch) {\n  return (\n    ch === 0x21 /* ! */ ||\n    ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||\n    ch >= 0x2A /* * */ && ch <= 0x2C /* , */ ||\n    ch === 0x2E /* . */ ||\n    ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||\n    ch === 0x5E /* ^ */ ||\n    ch === 0x60 /* ` */ ||\n    ch === 0x7E /* ~ */\n  )\n}\n\n// https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter\nfunction isClassSetSyntaxCharacter(ch) {\n  return (\n    ch === 0x28 /* ( */ ||\n    ch === 0x29 /* ) */ ||\n    ch === 0x2D /* - */ ||\n    ch === 0x2F /* / */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\npp$1.regexp_eatClassSetReservedPunctuator = function(state) {\n  var ch = state.current();\n  if (isClassSetReservedPunctuator(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\nfunction isClassSetReservedPunctuator(ch) {\n  return (\n    ch === 0x21 /* ! */ ||\n    ch === 0x23 /* # */ ||\n    ch === 0x25 /* % */ ||\n    ch === 0x26 /* & */ ||\n    ch === 0x2C /* , */ ||\n    ch === 0x2D /* - */ ||\n    ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||\n    ch === 0x40 /* @ */ ||\n    ch === 0x60 /* ` */ ||\n    ch === 0x7E /* ~ */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$1.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$1.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$1.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$1.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp = Parser.prototype;\n\n// Move to the next token\n\npp.next = function(ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n    { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp[Symbol.iterator] = function() {\n    var this$1$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1$1.getToken();\n        return {\n          done: token.type === types$1.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xdc00) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n};\n\npp.skipBlockComment = function() {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n      ++this.curLine;\n      pos = this.lineStart = nextBreak;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp.skipLineComment = function(startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this.pos;\n      break\n    case 13:\n      if (this.input.charCodeAt(this.pos + 1) === 10) {\n        ++this.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this.input.charCodeAt(this.pos + 1)) {\n      case 42: // '*'\n        this.skipBlockComment();\n        break\n      case 47:\n        this.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types$1.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types$1.dot)\n  }\n};\n\npp.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.slash, 1)\n};\n\npp.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types$1.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (this.options.ecmaVersion >= 12) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n    }\n    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n};\n\npp.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.bitwiseXOR, 1)\n};\n\npp.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types$1.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.plusMin, 1)\n};\n\npp.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(types$1.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types$1.relational, size)\n};\n\npp.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types$1.arrow)\n  }\n  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n};\n\npp.readToken_question = function() { // '?'\n  var ecmaVersion = this.options.ecmaVersion;\n  if (ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 46) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n    }\n    if (next === 63) {\n      if (ecmaVersion >= 12) {\n        var next2$1 = this.input.charCodeAt(this.pos + 2);\n        if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(types$1.coalesce, 2)\n    }\n  }\n  return this.finishOp(types$1.question, 1)\n};\n\npp.readToken_numberSign = function() { // '#'\n  var ecmaVersion = this.options.ecmaVersion;\n  var code = 35; // '#'\n  if (ecmaVersion >= 13) {\n    ++this.pos;\n    code = this.fullCharCodeAtPos();\n    if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n      return this.finishToken(types$1.privateId, this.readWord1())\n    }\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types$1.parenL)\n  case 41: ++this.pos; return this.finishToken(types$1.parenR)\n  case 59: ++this.pos; return this.finishToken(types$1.semi)\n  case 44: ++this.pos; return this.finishToken(types$1.comma)\n  case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n  case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n  case 123: ++this.pos; return this.finishToken(types$1.braceL)\n  case 125: ++this.pos; return this.finishToken(types$1.braceR)\n  case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types$1.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 63: // '?'\n    return this.readToken_question()\n\n  case 126: // '~'\n    return this.finishOp(types$1.prefix, 1)\n\n  case 35: // '#'\n    return this.readToken_numberSign()\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp.readRegexp = function() {\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n  // `len` is used for character escape sequences. In that case, disallow separators.\n  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n  // and isn't fraction part nor exponent part. In that case, if the first digit\n  // is zero then disallow separators.\n  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n  var start = this.pos, total = 0, lastCode = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n    var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n    if (allowSeparators && code === 95) {\n      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n      if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n      if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n      lastCode = code;\n      continue\n    }\n\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    lastCode = code;\n    total = total * radix + val;\n  }\n\n  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\nfunction stringToNumber(str, isLegacyOctalNumericLiteral) {\n  if (isLegacyOctalNumericLiteral) {\n    return parseInt(str, 8)\n  }\n\n  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n  return parseFloat(str.replace(/_/g, \"\"))\n}\n\nfunction stringToBigInt(str) {\n  if (typeof BigInt !== \"function\") {\n    return null\n  }\n\n  // `BigInt(value)` throws syntax error if the string contains numeric separators.\n  return BigInt(str.replace(/_/g, \"\"))\n}\n\npp.readRadixNumber = function(radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types$1.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val$1)\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var val = stringToNumber(this.input.slice(start, this.pos), octal);\n  return this.finishToken(types$1.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\npp.readString = function(quote) {\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else if (ch === 0x2028 || ch === 0x2029) {\n      if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n      if (this.options.locations) {\n        this.curLine++;\n        this.lineStart = this.pos;\n      }\n    } else {\n      if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types$1.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp.readTmplToken = function() {\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types$1.dollarBraceL)\n        } else {\n          ++this.pos;\n          return this.finishToken(types$1.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types$1.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n    case \"\\\\\":\n      ++this.pos;\n      break\n\n    case \"$\":\n      if (this.input[this.pos + 1] !== \"{\") { break }\n      // fall through\n    case \"`\":\n      return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n    case \"\\r\":\n      if (this.input[this.pos + 1] === \"\\n\") { ++this.pos; }\n      // fall through\n    case \"\\n\": case \"\\u2028\": case \"\\u2029\":\n      ++this.curLine;\n      this.lineStart = this.pos + 1;\n      break\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  case 56:\n  case 57:\n    if (this.strict) {\n      this.invalidStringToken(\n        this.pos - 1,\n        \"Invalid escape sequence\"\n      );\n    }\n    if (inTemplate) {\n      var codePos = this.pos - 1;\n\n      this.invalidStringToken(\n        codePos,\n        \"Invalid escape sequence in template string\"\n      );\n    }\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function() {\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n        { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function() {\n  var word = this.readWord1();\n  var type = types$1.name;\n  if (this.keywords.test(word)) {\n    type = keywords[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n\n\nvar version = \"8.15.0\";\n\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types$1,\n  keywordTypes: keywords,\n  TokContext: TokContext,\n  tokContexts: types,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and returns\n// an abstract syntax tree as specified by the [ESTree spec][estree].\n//\n// [estree]: https://github.com/estree/estree\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nexport { Node, Parser, Position, SourceLocation, TokContext, Token, TokenType, defaultOptions, getLineInfo, isIdentifierChar, isIdentifierStart, isNewLine, keywords as keywordTypes, lineBreak, lineBreakG, nonASCIIwhitespace, parse, parseExpressionAt, types as tokContexts, types$1 as tokTypes, tokenizer, version };\n","module.exports = {\n  quot: '\\u0022',\n  amp: '&',\n  apos: '\\u0027',\n  lt: '<',\n  gt: '>',\n  nbsp: '\\u00A0',\n  iexcl: '\\u00A1',\n  cent: '\\u00A2',\n  pound: '\\u00A3',\n  curren: '\\u00A4',\n  yen: '\\u00A5',\n  brvbar: '\\u00A6',\n  sect: '\\u00A7',\n  uml: '\\u00A8',\n  copy: '\\u00A9',\n  ordf: '\\u00AA',\n  laquo: '\\u00AB',\n  not: '\\u00AC',\n  shy: '\\u00AD',\n  reg: '\\u00AE',\n  macr: '\\u00AF',\n  deg: '\\u00B0',\n  plusmn: '\\u00B1',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  acute: '\\u00B4',\n  micro: '\\u00B5',\n  para: '\\u00B6',\n  middot: '\\u00B7',\n  cedil: '\\u00B8',\n  sup1: '\\u00B9',\n  ordm: '\\u00BA',\n  raquo: '\\u00BB',\n  frac14: '\\u00BC',\n  frac12: '\\u00BD',\n  frac34: '\\u00BE',\n  iquest: '\\u00BF',\n  Agrave: '\\u00C0',\n  Aacute: '\\u00C1',\n  Acirc: '\\u00C2',\n  Atilde: '\\u00C3',\n  Auml: '\\u00C4',\n  Aring: '\\u00C5',\n  AElig: '\\u00C6',\n  Ccedil: '\\u00C7',\n  Egrave: '\\u00C8',\n  Eacute: '\\u00C9',\n  Ecirc: '\\u00CA',\n  Euml: '\\u00CB',\n  Igrave: '\\u00CC',\n  Iacute: '\\u00CD',\n  Icirc: '\\u00CE',\n  Iuml: '\\u00CF',\n  ETH: '\\u00D0',\n  Ntilde: '\\u00D1',\n  Ograve: '\\u00D2',\n  Oacute: '\\u00D3',\n  Ocirc: '\\u00D4',\n  Otilde: '\\u00D5',\n  Ouml: '\\u00D6',\n  times: '\\u00D7',\n  Oslash: '\\u00D8',\n  Ugrave: '\\u00D9',\n  Uacute: '\\u00DA',\n  Ucirc: '\\u00DB',\n  Uuml: '\\u00DC',\n  Yacute: '\\u00DD',\n  THORN: '\\u00DE',\n  szlig: '\\u00DF',\n  agrave: '\\u00E0',\n  aacute: '\\u00E1',\n  acirc: '\\u00E2',\n  atilde: '\\u00E3',\n  auml: '\\u00E4',\n  aring: '\\u00E5',\n  aelig: '\\u00E6',\n  ccedil: '\\u00E7',\n  egrave: '\\u00E8',\n  eacute: '\\u00E9',\n  ecirc: '\\u00EA',\n  euml: '\\u00EB',\n  igrave: '\\u00EC',\n  iacute: '\\u00ED',\n  icirc: '\\u00EE',\n  iuml: '\\u00EF',\n  eth: '\\u00F0',\n  ntilde: '\\u00F1',\n  ograve: '\\u00F2',\n  oacute: '\\u00F3',\n  ocirc: '\\u00F4',\n  otilde: '\\u00F5',\n  ouml: '\\u00F6',\n  divide: '\\u00F7',\n  oslash: '\\u00F8',\n  ugrave: '\\u00F9',\n  uacute: '\\u00FA',\n  ucirc: '\\u00FB',\n  uuml: '\\u00FC',\n  yacute: '\\u00FD',\n  thorn: '\\u00FE',\n  yuml: '\\u00FF',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  Yuml: '\\u0178',\n  fnof: '\\u0192',\n  circ: '\\u02C6',\n  tilde: '\\u02DC',\n  Alpha: '\\u0391',\n  Beta: '\\u0392',\n  Gamma: '\\u0393',\n  Delta: '\\u0394',\n  Epsilon: '\\u0395',\n  Zeta: '\\u0396',\n  Eta: '\\u0397',\n  Theta: '\\u0398',\n  Iota: '\\u0399',\n  Kappa: '\\u039A',\n  Lambda: '\\u039B',\n  Mu: '\\u039C',\n  Nu: '\\u039D',\n  Xi: '\\u039E',\n  Omicron: '\\u039F',\n  Pi: '\\u03A0',\n  Rho: '\\u03A1',\n  Sigma: '\\u03A3',\n  Tau: '\\u03A4',\n  Upsilon: '\\u03A5',\n  Phi: '\\u03A6',\n  Chi: '\\u03A7',\n  Psi: '\\u03A8',\n  Omega: '\\u03A9',\n  alpha: '\\u03B1',\n  beta: '\\u03B2',\n  gamma: '\\u03B3',\n  delta: '\\u03B4',\n  epsilon: '\\u03B5',\n  zeta: '\\u03B6',\n  eta: '\\u03B7',\n  theta: '\\u03B8',\n  iota: '\\u03B9',\n  kappa: '\\u03BA',\n  lambda: '\\u03BB',\n  mu: '\\u03BC',\n  nu: '\\u03BD',\n  xi: '\\u03BE',\n  omicron: '\\u03BF',\n  pi: '\\u03C0',\n  rho: '\\u03C1',\n  sigmaf: '\\u03C2',\n  sigma: '\\u03C3',\n  tau: '\\u03C4',\n  upsilon: '\\u03C5',\n  phi: '\\u03C6',\n  chi: '\\u03C7',\n  psi: '\\u03C8',\n  omega: '\\u03C9',\n  thetasym: '\\u03D1',\n  upsih: '\\u03D2',\n  piv: '\\u03D6',\n  ensp: '\\u2002',\n  emsp: '\\u2003',\n  thinsp: '\\u2009',\n  zwnj: '\\u200C',\n  zwj: '\\u200D',\n  lrm: '\\u200E',\n  rlm: '\\u200F',\n  ndash: '\\u2013',\n  mdash: '\\u2014',\n  lsquo: '\\u2018',\n  rsquo: '\\u2019',\n  sbquo: '\\u201A',\n  ldquo: '\\u201C',\n  rdquo: '\\u201D',\n  bdquo: '\\u201E',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  bull: '\\u2022',\n  hellip: '\\u2026',\n  permil: '\\u2030',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  lsaquo: '\\u2039',\n  rsaquo: '\\u203A',\n  oline: '\\u203E',\n  frasl: '\\u2044',\n  euro: '\\u20AC',\n  image: '\\u2111',\n  weierp: '\\u2118',\n  real: '\\u211C',\n  trade: '\\u2122',\n  alefsym: '\\u2135',\n  larr: '\\u2190',\n  uarr: '\\u2191',\n  rarr: '\\u2192',\n  darr: '\\u2193',\n  harr: '\\u2194',\n  crarr: '\\u21B5',\n  lArr: '\\u21D0',\n  uArr: '\\u21D1',\n  rArr: '\\u21D2',\n  dArr: '\\u21D3',\n  hArr: '\\u21D4',\n  forall: '\\u2200',\n  part: '\\u2202',\n  exist: '\\u2203',\n  empty: '\\u2205',\n  nabla: '\\u2207',\n  isin: '\\u2208',\n  notin: '\\u2209',\n  ni: '\\u220B',\n  prod: '\\u220F',\n  sum: '\\u2211',\n  minus: '\\u2212',\n  lowast: '\\u2217',\n  radic: '\\u221A',\n  prop: '\\u221D',\n  infin: '\\u221E',\n  ang: '\\u2220',\n  and: '\\u2227',\n  or: '\\u2228',\n  cap: '\\u2229',\n  cup: '\\u222A',\n  'int': '\\u222B',\n  there4: '\\u2234',\n  sim: '\\u223C',\n  cong: '\\u2245',\n  asymp: '\\u2248',\n  ne: '\\u2260',\n  equiv: '\\u2261',\n  le: '\\u2264',\n  ge: '\\u2265',\n  sub: '\\u2282',\n  sup: '\\u2283',\n  nsub: '\\u2284',\n  sube: '\\u2286',\n  supe: '\\u2287',\n  oplus: '\\u2295',\n  otimes: '\\u2297',\n  perp: '\\u22A5',\n  sdot: '\\u22C5',\n  lceil: '\\u2308',\n  rceil: '\\u2309',\n  lfloor: '\\u230A',\n  rfloor: '\\u230B',\n  lang: '\\u2329',\n  rang: '\\u232A',\n  loz: '\\u25CA',\n  spades: '\\u2660',\n  clubs: '\\u2663',\n  hearts: '\\u2665',\n  diams: '\\u2666'\n};\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.acorn = {}));\n})(this, (function (exports) { 'use strict';\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0897-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c8a\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7cd\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7dc\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n  // These are a run-length and offset encoded representation of the\n  // >0xffff code points that are a valid part of identifiers. The\n  // offset starts at 0x10000, and each pair of numbers represents an\n  // offset to the next range, and then a size of the range.\n\n  // Reserved word lists for various dialects of the language\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n  // And the keywords\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords$1 = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n  // ## Character categories\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  // This has a complexity linear to the value of the code. The\n  // assumption is that looking up astral identifier characters is\n  // rare.\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n    return false\n  }\n\n  // Test whether a given character code starts an identifier.\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n  // Test whether a given character is part of an identifier.\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // The `startsExpr` property is used to check if the token ends a\n  // `yield` expression. It is set on all token types that either can\n  // directly start an expression (like a quotation mark) or can\n  // continue an expression (like the body of a string).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywords = {};\n\n  // Succinct definitions of keyword token types\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords[name] = new TokenType(name, options)\n  }\n\n  var types$1 = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    privateId: new TokenType(\"privateId\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    // Punctuation token types.\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    questionDot: new TokenType(\"?.\"),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n    // Operators. These carry several kinds of properties to help the\n    // parser use them properly (the presence of these properties is\n    // what categorizes them as operators).\n    //\n    // `binop`, when present, specifies that this operator is a binary\n    // operator, and will refer to its precedence.\n    //\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\n    // unary operator.\n    //\n    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n    // binary operators with a very low precedence, that should result\n    // in AssignmentExpression nodes.\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n    coalesce: binop(\"??\", 1),\n\n    // Keyword token types.\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code) {\n    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n  }\n\n  function nextLineBreak(code, from, end) {\n    if ( end === void 0 ) end = code.length;\n\n    for (var i = from; i < end; i++) {\n      var next = code.charCodeAt(i);\n      if (isNewLine(next))\n        { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n    }\n    return -1\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n  var hasOwn = Object.hasOwn || (function (obj, propName) { return (\n    hasOwnProperty.call(obj, propName)\n  ); });\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  var regexpCache = Object.create(null);\n\n  function wordsRegexp(words) {\n    return regexpCache[words] || (regexpCache[words] = new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\"))\n  }\n\n  function codePointToString(code) {\n    // UTF-16 Decoding\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  var loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n  // These are used when `options.locations` is on, for the\n  // `startLoc` and `endLoc` properties.\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n  // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      var nextBreak = nextLineBreak(input, cur, offset);\n      if (nextBreak < 0) { return new Position(line, offset - cur) }\n      ++line;\n      cur = nextBreak;\n    }\n  }\n\n  // A second argument must be given to configure the parser process.\n  // These options are recognized (only `ecmaVersion` is required):\n\n  var defaultOptions = {\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n    // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n    // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n    // (the latest version the library supports). This influences\n    // support for strict mode, the set of reserved words, and support\n    // for new syntax features.\n    ecmaVersion: null,\n    // `sourceType` indicates the mode the code should be parsed in.\n    // Can be either `\"script\"` or `\"module\"`. This influences global\n    // strict mode and parsing of `import` and `export` declarations.\n    sourceType: \"script\",\n    // `onInsertedSemicolon` can be a callback that will be called when\n    // a semicolon is automatically inserted. It will be passed the\n    // position of the inserted semicolon as an offset, and if\n    // `locations` is enabled, it is given the location as a `{line,\n    // column}` object as second argument.\n    onInsertedSemicolon: null,\n    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n    // trailing commas.\n    onTrailingComma: null,\n    // By default, reserved words are only enforced if ecmaVersion >= 5.\n    // Set `allowReserved` to a boolean value to explicitly turn this on\n    // an off. When this option has the value \"never\", reserved words\n    // and keywords can also not be used as property names.\n    allowReserved: null,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program, and an import.meta expression\n    // in a script isn't considered an error.\n    allowImportExportEverywhere: false,\n    // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n    // When enabled, await identifiers are allowed to appear at the top-level scope,\n    // but they are still not allowed in non-async functions.\n    allowAwaitOutsideFunction: null,\n    // When enabled, super identifiers are not constrained to\n    // appearing in methods and do not raise an error when they appear elsewhere.\n    allowSuperOutsideMethod: null,\n    // When enabled, hashbang directive in the beginning of file is\n    // allowed and treated as a line comment. Enabled by default when\n    // `ecmaVersion` >= 2023.\n    allowHashBang: false,\n    // By default, the parser will verify that private properties are\n    // only used in places where they are valid and have been declared.\n    // Set this to false to turn such checks off.\n    checkPrivateFields: true,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokens returned from `tokenizer().getToken()`. Note\n    // that you are not allowed to call the parser from the\n    // callback—that will corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    // When this option has an array as value, objects representing the\n    // comments are pushed to it.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n  };\n\n  // Interpret and default an options object\n\n  var warnedAboutEcmaVersion = false;\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion === \"latest\") {\n      options.ecmaVersion = 1e8;\n    } else if (options.ecmaVersion == null) {\n      if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n        warnedAboutEcmaVersion = true;\n        console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n      }\n      options.ecmaVersion = 11;\n    } else if (options.ecmaVersion >= 2015) {\n      options.ecmaVersion -= 2009;\n    }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (!opts || opts.allowHashBang == null)\n      { options.allowHashBang = options.ecmaVersion >= 14; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  // Each scope gets a bitset that may contain these flags\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128,\n      SCOPE_CLASS_STATIC_BLOCK = 256,\n      SCOPE_CLASS_FIELD_INIT = 512,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  // Used in checkLVal* and declareName to determine the type of a binding\n  var\n      BIND_NONE = 0, // Not a binding\n      BIND_VAR = 1, // Var-style binding\n      BIND_LEXICAL = 2, // Let- or const-style binding\n      BIND_FUNCTION = 3, // Function declaration\n      BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = types$1.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    // Figure out if it's a module code.\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n    this.potentialArrowInForAwait = false;\n\n    // Positions to delayed-check that yield/await does not exist in default parameters.\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    // Labels in scope.\n    this.labels = [];\n    // Thus-far undefined exports.\n    this.undefinedExports = Object.create(null);\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    // Scope tracking for duplicate variable names (see scope.js)\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    // For RegExp validation\n    this.regexpState = null;\n\n    // The stack of private names.\n    // Each element has two properties: 'declared' and 'used'.\n    // When it exited from the outermost class definition, all used private names must be declared.\n    this.privateNameStack = [];\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n\n  prototypeAccessors.canAwait.get = function () {\n    for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n      var ref = this.scopeStack[i];\n        var flags = ref.flags;\n      if (flags & (SCOPE_CLASS_STATIC_BLOCK | SCOPE_CLASS_FIELD_INIT)) { return false }\n      if (flags & SCOPE_FUNCTION) { return (flags & SCOPE_ASYNC) > 0 }\n    }\n    return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n  };\n\n  prototypeAccessors.allowSuper.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n    return (flags & SCOPE_SUPER) > 0 || this.options.allowSuperOutsideMethod\n  };\n\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  prototypeAccessors.allowNewDotTarget.get = function () {\n    for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n      var ref = this.scopeStack[i];\n        var flags = ref.flags;\n      if (flags & (SCOPE_CLASS_STATIC_BLOCK | SCOPE_CLASS_FIELD_INIT) ||\n          ((flags & SCOPE_FUNCTION) && !(flags & SCOPE_ARROW))) { return true }\n    }\n    return false\n  };\n\n  prototypeAccessors.inClassStaticBlock.get = function () {\n    return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n  };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp$9 = Parser.prototype;\n\n  // ## Parser utilities\n\n  var literal = /^(?:'((?:\\\\[^]|[^'\\\\])*?)'|\"((?:\\\\[^]|[^\"\\\\])*?)\")/;\n  pp$9.strictDirective = function(start) {\n    if (this.options.ecmaVersion < 5) { return false }\n    for (;;) {\n      // Try to find string literal.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") {\n        skipWhiteSpace.lastIndex = start + match[0].length;\n        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n        var next = this.input.charAt(end);\n        return next === \";\" || next === \"}\" ||\n          (lineBreak.test(spaceAfter[0]) &&\n           !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n      }\n      start += match[0].length;\n\n      // Skip semicolon, if any.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n  // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n  pp$9.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n  // Tests whether parsed token is a contextual keyword.\n\n  pp$9.isContextual = function(name) {\n    return this.type === types$1.name && this.value === name && !this.containsEsc\n  };\n\n  // Consumes contextual keyword if possible.\n\n  pp$9.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n  // Asserts that following token is given contextual keyword.\n\n  pp$9.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  pp$9.canInsertSemicolon = function() {\n    return this.type === types$1.eof ||\n      this.type === types$1.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp$9.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  pp$9.semicolon = function() {\n    if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp$9.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n  pp$9.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n  // Raise an unexpected token error.\n\n  pp$9.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  var DestructuringErrors = function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  };\n\n  pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n  };\n\n  pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp$9.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp$9.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$8 = Parser.prototype;\n\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  pp$8.parseTopLevel = function(node) {\n    var exports = Object.create(null);\n    if (!node.body) { node.body = []; }\n    while (this.type !== types$1.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$8.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === 91 || nextCh === 92) { return true } // '[', '\\'\n    if (context) { return false }\n\n    if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral\n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n      if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  // check 'async [no LineTerminator here] function'\n  // - 'async /*foo*/ function' is OK.\n  // - 'async /*\\n*/ function' is invalid.\n  pp$8.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, after;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length ||\n       !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n  };\n\n  pp$8.isUsingKeyword = function(isAwaitUsing, isFor) {\n    if (this.options.ecmaVersion < 17 || !this.isContextual(isAwaitUsing ? \"await\" : \"using\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n\n    if (lineBreak.test(this.input.slice(this.pos, next))) { return false }\n\n    if (isAwaitUsing) {\n      var awaitEndPos = next + 5 /* await */, after;\n      if (this.input.slice(next, awaitEndPos) !== \"using\" ||\n        awaitEndPos === this.input.length ||\n        isIdentifierChar(after = this.input.charCodeAt(awaitEndPos)) ||\n        (after > 0xd7ff && after < 0xdc00)\n      ) { return false }\n\n      skipWhiteSpace.lastIndex = awaitEndPos;\n      var skipAfterUsing = skipWhiteSpace.exec(this.input);\n      if (skipAfterUsing && lineBreak.test(this.input.slice(awaitEndPos, awaitEndPos + skipAfterUsing[0].length))) { return false }\n    }\n\n    if (isFor) {\n      var ofEndPos = next + 2 /* of */, after$1;\n      if (this.input.slice(next, ofEndPos) === \"of\") {\n        if (ofEndPos === this.input.length ||\n          (!isIdentifierChar(after$1 = this.input.charCodeAt(ofEndPos)) && !(after$1 > 0xd7ff && after$1 < 0xdc00))) { return false }\n      }\n    }\n\n    var ch = this.input.charCodeAt(next);\n    return isIdentifierStart(ch, true) || ch === 92 // '\\'\n  };\n\n  pp$8.isAwaitUsing = function(isFor) {\n    return this.isUsingKeyword(true, isFor)\n  };\n\n  pp$8.isUsing = function(isFor) {\n    return this.isUsingKeyword(false, isFor)\n  };\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  pp$8.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n    case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types$1._debugger: return this.parseDebuggerStatement(node)\n    case types$1._do: return this.parseDoStatement(node)\n    case types$1._for: return this.parseForStatement(node)\n    case types$1._function:\n      // Function as sole body of either an if statement or a labeled statement\n      // works, but not when it is part of a labeled statement that is the sole\n      // body of an if statement.\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types$1._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types$1._if: return this.parseIfStatement(node)\n    case types$1._return: return this.parseReturnStatement(node)\n    case types$1._switch: return this.parseSwitchStatement(node)\n    case types$1._throw: return this.parseThrowStatement(node)\n    case types$1._try: return this.parseTryStatement(node)\n    case types$1._const: case types$1._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types$1._while: return this.parseWhileStatement(node)\n    case types$1._with: return this.parseWithStatement(node)\n    case types$1.braceL: return this.parseBlock(true, node)\n    case types$1.semi: return this.parseEmptyStatement(node)\n    case types$1._export:\n    case types$1._import:\n      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46) // '(' or '.'\n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var usingKind = this.isAwaitUsing(false) ? \"await using\" : this.isUsing(false) ? \"using\" : null;\n      if (usingKind) {\n        if (topLevel && this.options.sourceType === \"script\") {\n          this.raise(this.start, \"Using declaration cannot appear in the top level when source type is `script`\");\n        }\n        if (usingKind === \"await using\") {\n          if (!this.canAwait) {\n            this.raise(this.start, \"Await using cannot appear outside of async function\");\n          }\n          this.next();\n        }\n        this.next();\n        this.parseVar(node, false, usingKind);\n        this.semicolon();\n        return this.finishNode(node, \"VariableDeclaration\")\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$8.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types$1.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    // Verify that there is an actual destination to break or\n    // continue to.\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$8.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$8.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types$1.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  pp$8.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types$1.parenL);\n    if (this.type === types$1.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types$1._var || this.type === types$1._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      return this.parseForAfterInit(node, init$1, awaitAt)\n    }\n    var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n\n    var usingKind = this.isUsing(true) ? \"using\" : this.isAwaitUsing(true) ? \"await using\" : null;\n    if (usingKind) {\n      var init$2 = this.startNode();\n      this.next();\n      if (usingKind === \"await using\") { this.next(); }\n      this.parseVar(init$2, true, usingKind);\n      this.finishNode(init$2, \"VariableDeclaration\");\n      return this.parseForAfterInit(node, init$2, awaitAt)\n    }\n    var containsEsc = this.containsEsc;\n    var refDestructuringErrors = new DestructuringErrors;\n    var initPos = this.start;\n    var init = awaitAt > -1\n      ? this.parseExprSubscripts(refDestructuringErrors, \"await\")\n      : this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (awaitAt > -1) { // implies `ecmaVersion >= 9` (see declaration of awaitAt)\n        if (this.type === types$1._in) { this.unexpected(awaitAt); }\n        node.await = true;\n      } else if (isForOf && this.options.ecmaVersion >= 8) {\n        if (init.start === initPos && !containsEsc && init.type === \"Identifier\" && init.name === \"async\") { this.unexpected(); }\n        else if (this.options.ecmaVersion >= 9) { node.await = false; }\n      }\n      if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLValPattern(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  // Helper method to parse for loop after variable initialization\n  pp$8.parseForAfterInit = function(node, init, awaitAt) {\n    if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$8.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    // allow function declarations in branches, but only in non-strict mode\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$8.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$8.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types$1.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    var cur;\n    for (var sawDefault = false; this.type !== types$1.braceR;) {\n      if (this.type === types$1._case || this.type === types$1._default) {\n        var isCase = this.type === types$1._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types$1.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); // Closing brace\n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$8.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty$1 = [];\n\n  pp$8.parseCatchClauseParam = function() {\n    var param = this.parseBindingAtom();\n    var simple = param.type === \"Identifier\";\n    this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n    this.expect(types$1.parenR);\n\n    return param\n  };\n\n  pp$8.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types$1._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types$1.parenL)) {\n        clause.param = this.parseCatchClauseParam();\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$8.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$8.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$8.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        // Update information about previous labels on this node\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$8.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types$1.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (exitStrict) { this.strict = false; }\n    this.next();\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  pp$8.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types$1.semi);\n    node.test = this.type === types$1.semi ? null : this.parseExpression();\n    this.expect(types$1.semi);\n    node.update = this.type === types$1.parenR ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  pp$8.parseForIn = function(node, init) {\n    var isForIn = this.type === types$1._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n  // Parse a list of variable declarations.\n\n  pp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types$1.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (!allowMissingInitializer && kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (!allowMissingInitializer && (kind === \"using\" || kind === \"await using\") && this.options.ecmaVersion >= 17 && this.type !== types$1._in && !this.isContextual(\"of\")) {\n        this.raise(this.lastTokEnd, (\"Missing initializer in \" + kind + \" declaration\"));\n      } else if (!allowMissingInitializer && decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) { break }\n    }\n    return node\n  };\n\n  pp$8.parseVarId = function(decl, kind) {\n    decl.id = kind === \"using\" || kind === \"await using\"\n      ? this.parseIdent()\n      : this.parseBindingAtom();\n\n    this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n  // Parse a function declaration or literal (depending on the\n  // `statement & FUNC_STATEMENT`).\n\n  // Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n  pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types$1.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        // If it is a regular function declaration in sloppy mode, then it is\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n        // mode depends on properties of the current scope (see\n        // treatFunctionsAsVar).\n        { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$8.parseFunctionParams = function(node) {\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  pp$8.parseClass = function(node, isStatement) {\n    this.next();\n\n    // ecma-262 14.6 Class Definitions\n    // A class definition is always strict mode code.\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var privateNameMap = this.enterClassBody();\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    while (this.type !== types$1.braceR) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raiseRecoverable(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n          this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n        }\n      }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.exitClassBody();\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$8.parseClassElement = function(constructorAllowsSuper) {\n    if (this.eat(types$1.semi)) { return null }\n\n    var ecmaVersion = this.options.ecmaVersion;\n    var node = this.startNode();\n    var keyName = \"\";\n    var isGenerator = false;\n    var isAsync = false;\n    var kind = \"method\";\n    var isStatic = false;\n\n    if (this.eatContextual(\"static\")) {\n      // Parse static init block\n      if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(node);\n        return node\n      }\n      if (this.isClassElementNameStart() || this.type === types$1.star) {\n        isStatic = true;\n      } else {\n        keyName = \"static\";\n      }\n    }\n    node.static = isStatic;\n    if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n      if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n        isAsync = true;\n      } else {\n        keyName = \"async\";\n      }\n    }\n    if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n      isGenerator = true;\n    }\n    if (!keyName && !isAsync && !isGenerator) {\n      var lastValue = this.value;\n      if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n        if (this.isClassElementNameStart()) {\n          kind = lastValue;\n        } else {\n          keyName = lastValue;\n        }\n      }\n    }\n\n    // Parse element name\n    if (keyName) {\n      // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n      // The last token is any of those. Make it the element name.\n      node.computed = false;\n      node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n      node.key.name = keyName;\n      this.finishNode(node.key, \"Identifier\");\n    } else {\n      this.parseClassElementName(node);\n    }\n\n    // Parse element value\n    if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n      var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n      var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n      // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n      if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n      node.kind = isConstructor ? \"constructor\" : kind;\n      this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n    } else {\n      this.parseClassField(node);\n    }\n\n    return node\n  };\n\n  pp$8.isClassElementNameStart = function() {\n    return (\n      this.type === types$1.name ||\n      this.type === types$1.privateId ||\n      this.type === types$1.num ||\n      this.type === types$1.string ||\n      this.type === types$1.bracketL ||\n      this.type.keyword\n    )\n  };\n\n  pp$8.parseClassElementName = function(element) {\n    if (this.type === types$1.privateId) {\n      if (this.value === \"constructor\") {\n        this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n      }\n      element.computed = false;\n      element.key = this.parsePrivateIdent();\n    } else {\n      this.parsePropertyName(element);\n    }\n  };\n\n  pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    // Check key and flags\n    var key = method.key;\n    if (method.kind === \"constructor\") {\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    } else if (method.static && checkKeyName(method, \"prototype\")) {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n\n    // Parse value\n    var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n    // Check value\n    if (method.kind === \"get\" && value.params.length !== 0)\n      { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && value.params.length !== 1)\n      { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$8.parseClassField = function(field) {\n    if (checkKeyName(field, \"constructor\")) {\n      this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n    } else if (field.static && checkKeyName(field, \"prototype\")) {\n      this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n    }\n\n    if (this.eat(types$1.eq)) {\n      // To raise SyntaxError if 'arguments' exists in the initializer.\n      this.enterScope(SCOPE_CLASS_FIELD_INIT | SCOPE_SUPER);\n      field.value = this.parseMaybeAssign();\n      this.exitScope();\n    } else {\n      field.value = null;\n    }\n    this.semicolon();\n\n    return this.finishNode(field, \"PropertyDefinition\")\n  };\n\n  pp$8.parseClassStaticBlock = function(node) {\n    node.body = [];\n\n    var oldLabels = this.labels;\n    this.labels = [];\n    this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    this.next();\n    this.exitScope();\n    this.labels = oldLabels;\n\n    return this.finishNode(node, \"StaticBlock\")\n  };\n\n  pp$8.parseClassId = function(node, isStatement) {\n    if (this.type === types$1.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$8.parseClassSuper = function(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;\n  };\n\n  pp$8.enterClassBody = function() {\n    var element = {declared: Object.create(null), used: []};\n    this.privateNameStack.push(element);\n    return element.declared\n  };\n\n  pp$8.exitClassBody = function() {\n    var ref = this.privateNameStack.pop();\n    var declared = ref.declared;\n    var used = ref.used;\n    if (!this.options.checkPrivateFields) { return }\n    var len = this.privateNameStack.length;\n    var parent = len === 0 ? null : this.privateNameStack[len - 1];\n    for (var i = 0; i < used.length; ++i) {\n      var id = used[i];\n      if (!hasOwn(declared, id.name)) {\n        if (parent) {\n          parent.used.push(id);\n        } else {\n          this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n        }\n      }\n    }\n  };\n\n  function isPrivateNameConflicted(privateNameMap, element) {\n    var name = element.key.name;\n    var curr = privateNameMap[name];\n\n    var next = \"true\";\n    if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n      next = (element.static ? \"s\" : \"i\") + element.kind;\n    }\n\n    // `class { get #a(){}; static set #a(_){} }` is also conflict.\n    if (\n      curr === \"iget\" && next === \"iset\" ||\n      curr === \"iset\" && next === \"iget\" ||\n      curr === \"sget\" && next === \"sset\" ||\n      curr === \"sset\" && next === \"sget\"\n    ) {\n      privateNameMap[name] = \"true\";\n      return false\n    } else if (!curr) {\n      privateNameMap[name] = next;\n      return false\n    } else {\n      return true\n    }\n  }\n\n  function checkKeyName(node, name) {\n    var computed = node.computed;\n    var key = node.key;\n    return !computed && (\n      key.type === \"Identifier\" && key.name === name ||\n      key.type === \"Literal\" && key.value === name\n    )\n  }\n\n  // Parses module export declaration.\n\n  pp$8.parseExportAllDeclaration = function(node, exports) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n        this.checkExport(exports, node.exported, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types$1.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    if (this.options.ecmaVersion >= 16)\n      { node.attributes = this.parseWithClause(); }\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  };\n\n  pp$8.parseExport = function(node, exports) {\n    this.next();\n    // export * from '...'\n    if (this.eat(types$1.star)) {\n      return this.parseExportAllDeclaration(node, exports)\n    }\n    if (this.eat(types$1._default)) { // export default ...\n      this.checkExport(exports, \"default\", this.lastTokStart);\n      node.declaration = this.parseExportDefaultDeclaration();\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    // export var|const|let|function|class ...\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseExportDeclaration(node);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n      if (this.options.ecmaVersion >= 16)\n        { node.attributes = []; }\n    } else { // export { x, y as z } [from '...']\n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types$1.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n        if (this.options.ecmaVersion >= 16)\n          { node.attributes = this.parseWithClause(); }\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          // check for keywords used as local names\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          // check if export is defined\n          this.checkLocalExport(spec.local);\n\n          if (spec.local.type === \"Literal\") {\n            this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n          }\n        }\n\n        node.source = null;\n        if (this.options.ecmaVersion >= 16)\n          { node.attributes = []; }\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$8.parseExportDeclaration = function(node) {\n    return this.parseStatement(null)\n  };\n\n  pp$8.parseExportDefaultDeclaration = function() {\n    var isAsync;\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)\n    } else if (this.type === types$1._class) {\n      var cNode = this.startNode();\n      return this.parseClass(cNode, \"nullableID\")\n    } else {\n      var declaration = this.parseMaybeAssign();\n      this.semicolon();\n      return declaration\n    }\n  };\n\n  pp$8.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (typeof name !== \"string\")\n      { name = name.type === \"Identifier\" ? name.name : name.value; }\n    if (hasOwn(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$8.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n  };\n\n  pp$8.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$8.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n  // Parses a comma-separated list of module exports.\n\n  pp$8.parseExportSpecifier = function(exports) {\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(\n      exports,\n      node.exported,\n      node.exported.start\n    );\n\n    return this.finishNode(node, \"ExportSpecifier\")\n  };\n\n  pp$8.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    // export { x, y as z } [from '...']\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      nodes.push(this.parseExportSpecifier(exports));\n    }\n    return nodes\n  };\n\n  // Parses import declaration.\n\n  pp$8.parseImport = function(node) {\n    this.next();\n\n    // import '...'\n    if (this.type === types$1.string) {\n      node.specifiers = empty$1;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n    }\n    if (this.options.ecmaVersion >= 16)\n      { node.attributes = this.parseWithClause(); }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n  // Parses a comma-separated list of module imports.\n\n  pp$8.parseImportSpecifier = function() {\n    var node = this.startNode();\n    node.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      node.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node.imported);\n      node.local = node.imported;\n    }\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n\n    return this.finishNode(node, \"ImportSpecifier\")\n  };\n\n  pp$8.parseImportDefaultSpecifier = function() {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    return this.finishNode(node, \"ImportDefaultSpecifier\")\n  };\n\n  pp$8.parseImportNamespaceSpecifier = function() {\n    var node = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    return this.finishNode(node, \"ImportNamespaceSpecifier\")\n  };\n\n  pp$8.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types$1.name) {\n      nodes.push(this.parseImportDefaultSpecifier());\n      if (!this.eat(types$1.comma)) { return nodes }\n    }\n    if (this.type === types$1.star) {\n      nodes.push(this.parseImportNamespaceSpecifier());\n      return nodes\n    }\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      nodes.push(this.parseImportSpecifier());\n    }\n    return nodes\n  };\n\n  pp$8.parseWithClause = function() {\n    var nodes = [];\n    if (!this.eat(types$1._with)) {\n      return nodes\n    }\n    this.expect(types$1.braceL);\n    var attributeKeys = {};\n    var first = true;\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var attr = this.parseImportAttribute();\n      var keyName = attr.key.type === \"Identifier\" ? attr.key.name : attr.key.value;\n      if (hasOwn(attributeKeys, keyName))\n        { this.raiseRecoverable(attr.key.start, \"Duplicate attribute key '\" + keyName + \"'\"); }\n      attributeKeys[keyName] = true;\n      nodes.push(attr);\n    }\n    return nodes\n  };\n\n  pp$8.parseImportAttribute = function() {\n    var node = this.startNode();\n    node.key = this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\");\n    this.expect(types$1.colon);\n    if (this.type !== types$1.string) {\n      this.unexpected();\n    }\n    node.value = this.parseExprAtom();\n    return this.finishNode(node, \"ImportAttribute\")\n  };\n\n  pp$8.parseModuleExportName = function() {\n    if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n      var stringLiteral = this.parseLiteral(this.value);\n      if (loneSurrogate.test(stringLiteral.value)) {\n        this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n      }\n      return stringLiteral\n    }\n    return this.parseIdent(true)\n  };\n\n  // Set `ExpressionStatement#directive` property for directive prologues.\n  pp$8.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$8.isDirectiveCandidate = function(statement) {\n    return (\n      this.options.ecmaVersion >= 5 &&\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      // Reject parenthesized strings.\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$7 = Parser.prototype;\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n\n  pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n  // Convert list of expression atoms to binding list.\n\n  pp$7.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n  // Parses spread element.\n\n  pp$7.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$7.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    // RestElement inside of a function parameter must be an identifier\n    if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n  // Parses lvalue (assignable) atom.\n\n  pp$7.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types$1.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types$1.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types$1.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types$1.comma); }\n      if (allowEmpty && this.type === types$1.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types$1.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types$1.comma) { this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        elts.push(this.parseAssignableListItem(allowModifiers));\n      }\n    }\n    return elts\n  };\n\n  pp$7.parseAssignableListItem = function(allowModifiers) {\n    var elem = this.parseMaybeDefault(this.start, this.startLoc);\n    this.parseBindingListItem(elem);\n    return elem\n  };\n\n  pp$7.parseBindingListItem = function(param) {\n    return param\n  };\n\n  // Parses assignment pattern around given atom if possible.\n\n  pp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n  // The following three functions all verify that a node is an lvalue —\n  // something that can be bound, or assigned to. In order to do so, they perform\n  // a variety of checks:\n  //\n  // - Check that none of the bound/assigned-to identifiers are reserved words.\n  // - Record name declarations for bindings in the appropriate scope.\n  // - Check duplicate argument names, if checkClashes is set.\n  //\n  // If a complex binding pattern is encountered (e.g., object and array\n  // destructuring), the entire pattern is recursively checked.\n  //\n  // There are three versions of checkLVal*() appropriate for different\n  // circumstances:\n  //\n  // - checkLValSimple() shall be used if the syntactic construct supports\n  //   nothing other than identifiers and member expressions. Parenthesized\n  //   expressions are also correctly handled. This is generally appropriate for\n  //   constructs for which the spec says\n  //\n  //   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   It is also appropriate for checking if an identifier is valid and not\n  //   defined elsewhere, like import declarations or function/class identifiers.\n  //\n  //   Examples where this is used include:\n  //     a += …;\n  //     import a from '…';\n  //   where a is the node to be checked.\n  //\n  // - checkLValPattern() shall be used if the syntactic construct supports\n  //   anything checkLValSimple() supports, as well as object and array\n  //   destructuring patterns. This is generally appropriate for constructs for\n  //   which the spec says\n  //\n  //   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n  //   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   Examples where this is used include:\n  //     (a = …);\n  //     const a = …;\n  //     try { … } catch (a) { … }\n  //   where a is the node to be checked.\n  //\n  // - checkLValInnerPattern() shall be used if the syntactic construct supports\n  //   anything checkLValPattern() supports, as well as default assignment\n  //   patterns, rest elements, and other constructs that may appear within an\n  //   object or array destructuring pattern.\n  //\n  //   As a special case, function parameters also use checkLValInnerPattern(),\n  //   as they also support defaults and rest constructs.\n  //\n  // These functions deliberately support both assignment and binding constructs,\n  // as the logic for both is exceedingly similar. If the node is the target of\n  // an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n  // should be set to the appropriate BIND_* constant, like BIND_VAR or\n  // BIND_LEXICAL.\n  //\n  // If the function is called with a non-BIND_NONE bindingType, then\n  // additionally a checkClashes object may be specified to allow checking for\n  // duplicate argument names. checkClashes is ignored if the provided construct\n  // is an assignment (i.e., bindingType is BIND_NONE).\n\n  pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    var isBind = bindingType !== BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (isBind) {\n        if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n          { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n        if (checkClashes) {\n          if (hasOwn(checkClashes, expr.name))\n            { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n          checkClashes[expr.name] = true;\n        }\n        if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      }\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ParenthesizedExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n      return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n    default:\n      this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n  pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.checkLValInnerPattern(prop, bindingType, checkClashes);\n      }\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n      }\n      break\n\n    default:\n      this.checkLValSimple(expr, bindingType, checkClashes);\n    }\n  };\n\n  pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLValPattern(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLValPattern(expr.argument, bindingType, checkClashes);\n      break\n\n    default:\n      this.checkLValPattern(expr, bindingType, checkClashes);\n    }\n  };\n\n  // The algorithm used to determine whether a regexp can appear at a\n  // given point in the program is loosely based on sweet.js' approach.\n  // See https://github.com/mozilla/sweet.js/wiki/design\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.initialContext = function() {\n    return [types.b_stat]\n  };\n\n  pp$6.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n  pp$6.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types.f_expr || parent === types.f_stat)\n      { return true }\n    if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n      { return !parent.isExpr }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n      { return true }\n    if (prevType === types$1.braceL)\n      { return parent === types.b_stat }\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$6.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$6.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types$1.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n  // Used to handle edge cases when token context could not be inferred correctly during tokenization phase\n\n  pp$6.overrideContext = function(tokenCtx) {\n    if (this.curContext() !== tokenCtx) {\n      this.context[this.context.length - 1] = tokenCtx;\n    }\n  };\n\n  // Token-specific context update code\n\n  types$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types$1.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.dollarBraceL.updateContext = function() {\n    this.context.push(types.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types$1.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n    this.context.push(statementParens ? types.p_stat : types.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.incDec.updateContext = function() {\n    // tokExprAllowed stays unchanged\n  };\n\n  types$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types$1._else &&\n        !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n        !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n      { this.context.push(types.f_expr); }\n    else\n      { this.context.push(types.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types$1.colon.updateContext = function() {\n    if (this.curContext().token === \"function\") { this.context.pop(); }\n    this.exprAllowed = true;\n  };\n\n  types$1.backQuote.updateContext = function() {\n    if (this.curContext() === types.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types$1.star.updateContext = function(prevType) {\n    if (prevType === types$1._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types.f_expr)\n        { this.context[index] = types.f_expr_gen; }\n      else\n        { this.context[index] = types.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types$1.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n  // A recursive descent parser operates by defining functions for all\n  // syntactic elements, and recursively calling those, each function\n  // advancing the input stream and returning an AST node. Precedence\n  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n  // instead of `(!x)[1]` is handled by the fact that the parser\n  // function that parses unary prefix operators is called first, and\n  // in turn calls the function that parses `[]` subscripts — that\n  // way, it'll receive the node for `x[1]` already parsed, and wraps\n  // *that* in the unary operator node.\n  //\n  // Acorn uses an [operator precedence parser][opp] to handle binary\n  // operator precedence, because it is much more compact than using\n  // the technique outlined above, which uses different, nesting\n  // functions to specify precedence, for all of the ten binary\n  // precedence levels that JavaScript defines.\n  //\n  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\n  var pp$5 = Parser.prototype;\n\n  // Check if property name clashes with already added.\n  // Object/class getters and setters are not allowed to clash —\n  // either with each other or with an init property — and in\n  // strict mode, init properties are also not allowed to be repeated.\n\n  pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0) {\n              refDestructuringErrors.doubleProto = key.start;\n            }\n          } else {\n            this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n          }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression. The optional arguments are used to\n  // forbid the `in` operator (in for loops initalization expressions)\n  // and provide reference for storing '=' operator inside shorthand\n  // property assignment in contexts where both object expression\n  // and object pattern might appear (so it's possible to raise\n  // delayed syntax error at correct position).\n\n  pp$5.parseExpression = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n    if (this.type === types$1.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(forInit) }\n      // The tokenizer will assume an expression is allowed after\n      // `yield`, but this isn't that kind of yield\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      oldDoubleProto = refDestructuringErrors.doubleProto;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types$1.parenL || this.type === types$1.name) {\n      this.potentialArrowAt = this.start;\n      this.potentialArrowInForAwait = forInit === \"await\";\n    }\n    var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      if (this.type === types$1.eq)\n        { left = this.toAssignable(left, false, refDestructuringErrors); }\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n      if (this.type === types$1.eq)\n        { this.checkLValPattern(left); }\n      else\n        { this.checkLValSimple(left); }\n      node.left = left;\n      this.next();\n      node.right = this.parseMaybeAssign(forInit);\n      if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(forInit, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types$1.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign(forInit);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n  // Start the precedence parser.\n\n  pp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n  };\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n    var prec = this.type.binop;\n    if (prec != null && (!forInit || this.type !== types$1._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n        var coalesce = this.type === types$1.coalesce;\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = types$1.logicalAND.binop;\n        }\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n        if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n          this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n        }\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n      }\n    }\n    return left\n  };\n\n  pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n  // Parse unary operators, both prefix and postfix.\n\n  pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && this.canAwait) {\n      expr = this.parseAwait(forInit);\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types$1.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true, update, forInit);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLValSimple(node.argument); }\n      else if (this.strict && node.operator === \"delete\" && isLocalVariableAccess(node.argument))\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n        { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else if (!sawUnary && this.type === types$1.privateId) {\n      if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }\n      expr = this.parsePrivateIdent();\n      // only could be private fields in 'in', such as #x in obj\n      if (this.type !== types$1._in) { this.unexpected(); }\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLValSimple(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!incDec && this.eat(types$1.starstar)) {\n      if (sawUnary)\n        { this.unexpected(this.lastTokStart); }\n      else\n        { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n    } else {\n      return expr\n    }\n  };\n\n  function isLocalVariableAccess(node) {\n    return (\n      node.type === \"Identifier\" ||\n      node.type === \"ParenthesizedExpression\" && isLocalVariableAccess(node.expression)\n    )\n  }\n\n  function isPrivateFieldAccess(node) {\n    return (\n      node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n      node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression) ||\n      node.type === \"ParenthesizedExpression\" && isPrivateFieldAccess(node.expression)\n    )\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n      if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n    }\n    return result\n  };\n\n  pp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n        this.potentialArrowAt === base.start;\n    var optionalChained = false;\n\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n      if (element.optional) { optionalChained = true; }\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        if (optionalChained) {\n          var chainNode = this.startNodeAt(startPos, startLoc);\n          chainNode.expression = element;\n          element = this.finishNode(chainNode, \"ChainExpression\");\n        }\n        return element\n      }\n\n      base = element;\n    }\n  };\n\n  pp$5.shouldParseAsyncArrow = function() {\n    return !this.canInsertSemicolon() && this.eat(types$1.arrow)\n  };\n\n  pp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n  };\n\n  pp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat(types$1.questionDot);\n    if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n    var computed = this.eat(types$1.bracketL);\n    if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      if (computed) {\n        node.property = this.parseExpression();\n        this.expect(types$1.bracketR);\n      } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n        node.property = this.parsePrivateIdent();\n      } else {\n        node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n      }\n      node.computed = !!computed;\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types$1.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types$1.backQuote) {\n      if (optional || optionalChained) {\n        this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n      }\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  pp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.type === types$1.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types$1._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types$1.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super ( Arguments )\n      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types$1._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types$1.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n        this.overrideContext(types.f_expr);\n        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n      }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types$1.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n            (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n        }\n      }\n      return id\n\n    case types$1.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types$1.num: case types$1.string:\n      return this.parseLiteral(this.value)\n\n    case types$1._null: case types$1._true: case types$1._false:\n      node = this.startNode();\n      node.value = this.type === types$1._null ? null : this.type === types$1._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types$1.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types$1.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types$1.braceL:\n      this.overrideContext(types.b_expr);\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types$1._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types$1._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types$1._new:\n      return this.parseNew()\n\n    case types$1.backQuote:\n      return this.parseTemplate()\n\n    case types$1._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport(forNew)\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      return this.parseExprAtomDefault()\n    }\n  };\n\n  pp$5.parseExprAtomDefault = function() {\n    this.unexpected();\n  };\n\n  pp$5.parseExprImport = function(forNew) {\n    var node = this.startNode();\n\n    // Consume `import` as an identifier for `import.meta`.\n    // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n    this.next();\n\n    if (this.type === types$1.parenL && !forNew) {\n      return this.parseDynamicImport(node)\n    } else if (this.type === types$1.dot) {\n      var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n      meta.name = \"import\";\n      node.meta = this.finishNode(meta, \"Identifier\");\n      return this.parseImportMeta(node)\n    } else {\n      this.unexpected();\n    }\n  };\n\n  pp$5.parseDynamicImport = function(node) {\n    this.next(); // skip `(`\n\n    // Parse node.source.\n    node.source = this.parseMaybeAssign();\n\n    if (this.options.ecmaVersion >= 16) {\n      if (!this.eat(types$1.parenR)) {\n        this.expect(types$1.comma);\n        if (!this.afterTrailingComma(types$1.parenR)) {\n          node.options = this.parseMaybeAssign();\n          if (!this.eat(types$1.parenR)) {\n            this.expect(types$1.comma);\n            if (!this.afterTrailingComma(types$1.parenR)) {\n              this.unexpected();\n            }\n          }\n        } else {\n          node.options = null;\n        }\n      } else {\n        node.options = null;\n      }\n    } else {\n      // Verify ending.\n      if (!this.eat(types$1.parenR)) {\n        var errorPos = this.start;\n        if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n          this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n        } else {\n          this.unexpected(errorPos);\n        }\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$5.parseImportMeta = function(node) {\n    this.next(); // skip `.`\n\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"meta\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n    if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n      { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n    return this.finishNode(node, \"MetaProperty\")\n  };\n\n  pp$5.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110)\n      { node.bigint = node.value != null ? node.value.toString() : node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$5.parseParenExpression = function() {\n    this.expect(types$1.parenL);\n    var val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val\n  };\n\n  pp$5.shouldParseArrow = function(exprList) {\n    return !this.canInsertSemicolon()\n  };\n\n  pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      // Do not save awaitIdentPos to allow checking awaits nested in parameters\n      while (this.type !== types$1.parenR) {\n        first ? first = false : this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types$1.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types$1.comma) {\n            this.raiseRecoverable(\n              this.start,\n              \"Comma is not permitted after the rest element\"\n            );\n          }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n      this.expect(types$1.parenR);\n\n      if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$5.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n  };\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  var empty = [];\n\n  pp$5.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    this.next();\n    if (this.options.ecmaVersion >= 6 && this.type === types$1.dot) {\n      var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n      meta.name = \"new\";\n      node.meta = this.finishNode(meta, \"Identifier\");\n      this.next();\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\")\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n      if (containsEsc)\n        { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n      if (!this.allowNewDotTarget)\n        { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc;\n    node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);\n    if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n  // Parse template expression.\n\n  pp$5.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types$1.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value.replace(/\\r\\n?/g, \"\\n\"),\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types$1.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$5.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$5.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  // Parse an object literal or binding pattern.\n\n  pp$5.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types$1.comma) {\n          this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      // Parse argument.\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      // To disallow trailing comma via `this.toAssignable()`.\n      if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      // Finish\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types$1.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n      this.parsePropertyName(prop);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$5.parseGetterSetter = function(prop) {\n    var kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    prop.kind = kind;\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  };\n\n  pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types$1.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n      prop.kind = \"init\";\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.parseGetterSetter(prop);\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else if (this.type === types$1.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else {\n        prop.value = this.copyNode(prop.key);\n      }\n      prop.kind = \"init\";\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$5.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types$1.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types$1.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n  // Initialize empty function node.\n\n  pp$5.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n  // Parse object or class method.\n\n  pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n  // Parse arrow function expression with given parameters.\n\n  pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n  // Parse function body and check parameters.\n\n  pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n    var isExpression = isArrowFunction && this.type !== types$1.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign(forInit);\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        // If this is a strict mode function, verify that argument names\n        // are not repeated, and it does not try to bind the words `eval`\n        // or `arguments`.\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      // Start a new scope with regard to labels and the `inFunction`\n      // flag (restore them to their old value afterwards).\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      // Add the params to varDeclaredNames to ensure that an error is thrown\n      // if a let/const declaration in the function clashes with one of the params.\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n      if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n  };\n\n  pp$5.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n  // Checks function params for various disallowed patterns such as using \"eval\"\n  // or \"arguments\" and duplicate parameters.\n\n  pp$5.checkParams = function(node, allowDuplicates) {\n    var nameHash = Object.create(null);\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types$1.comma)\n        { elt = null; }\n      else if (this.type === types$1.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$5.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (!(this.currentThisScope().flags & SCOPE_VAR) && name === \"arguments\")\n      { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n    if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n      { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n  pp$5.parseIdent = function(liberal) {\n    var node = this.parseIdentNode();\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n  pp$5.parseIdentNode = function() {\n    var node = this.startNode();\n    if (this.type === types$1.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      // To fix https://github.com/acornjs/acorn/issues/575\n      // `class` and `function` keywords push new context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n      // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n      if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n      this.type = types$1.name;\n    } else {\n      this.unexpected();\n    }\n    return node\n  };\n\n  pp$5.parsePrivateIdent = function() {\n    var node = this.startNode();\n    if (this.type === types$1.privateId) {\n      node.name = this.value;\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    this.finishNode(node, \"PrivateIdentifier\");\n\n    // For validating existence\n    if (this.options.checkPrivateFields) {\n      if (this.privateNameStack.length === 0) {\n        this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n      } else {\n        this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n      }\n    }\n\n    return node\n  };\n\n  // Parses yield expression inside generator.\n\n  pp$5.parseYield = function(forInit) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign(forInit);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$5.parseAwait = function(forInit) {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, false, forInit);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n  // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    if (this.sourceFile) {\n      message += \" in \" + this.sourceFile;\n    }\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$3 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    // A list of var-declared names in the current lexical scope\n    this.var = [];\n    // A list of lexically-declared names in the current lexical scope\n    this.lexical = [];\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n    this.functions = [];\n  };\n\n  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n  pp$3.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$3.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  pp$3.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$3.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$3.checkLocalExport = function(id) {\n    // scope.functions must be empty as Module code is always strict.\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$3.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$3.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & (SCOPE_VAR | SCOPE_CLASS_FIELD_INIT | SCOPE_CLASS_STATIC_BLOCK)) { return scope }\n    }\n  };\n\n  // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  pp$3.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & (SCOPE_VAR | SCOPE_CLASS_FIELD_INIT | SCOPE_CLASS_STATIC_BLOCK) &&\n          !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n  // Start an AST node, attaching a start offset.\n\n  var pp$2 = Parser.prototype;\n\n  pp$2.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$2.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$2.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n  // Finish node at given position\n\n  pp$2.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n  pp$2.copyNode = function(node) {\n    var newNode = new Node(this, node.start, this.startLoc);\n    for (var prop in node) { newNode[prop] = node[prop]; }\n    return newNode\n  };\n\n  // This file was generated by \"bin/generate-unicode-script-values.js\". Do not modify manually!\n  var scriptValuesAddedInUnicode = \"Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz\";\n\n  // This file contains Unicode properties extracted from the ECMAScript specification.\n  // The lists are extracted like so:\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n  // #table-binary-unicode-properties\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\n  var ecma13BinaryProperties = ecma12BinaryProperties;\n  var ecma14BinaryProperties = ecma13BinaryProperties;\n\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties,\n    12: ecma12BinaryProperties,\n    13: ecma13BinaryProperties,\n    14: ecma14BinaryProperties\n  };\n\n  // #table-binary-unicode-properties-of-strings\n  var ecma14BinaryPropertiesOfStrings = \"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji\";\n\n  var unicodeBinaryPropertiesOfStrings = {\n    9: \"\",\n    10: \"\",\n    11: \"\",\n    12: \"\",\n    13: \"\",\n    14: ecma14BinaryPropertiesOfStrings\n  };\n\n  // #table-unicode-general-category-values\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  // #table-unicode-script-values\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\n  var ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\n  var ecma14ScriptValues = ecma13ScriptValues + \" \" + scriptValuesAddedInUnicode;\n\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues,\n    12: ecma12ScriptValues,\n    13: ecma13ScriptValues,\n    14: ecma14ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n\n  for (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {\n    var ecmaVersion = list[i];\n\n    buildUnicodeData(ecmaVersion);\n  }\n\n  var pp$1 = Parser.prototype;\n\n  // Track disjunction structure to determine whether a duplicate\n  // capture group name is allowed because it is in a separate branch.\n  var BranchID = function BranchID(parent, base) {\n    // Parent disjunction branch\n    this.parent = parent;\n    // Identifies this set of sibling branches\n    this.base = base || this;\n  };\n\n  BranchID.prototype.separatedFrom = function separatedFrom (alt) {\n    // A branch is separate from another branch if they or any of\n    // their parents are siblings in a given disjunction\n    for (var self = this; self; self = self.parent) {\n      for (var other = alt; other; other = other.parent) {\n        if (self.base === other.base && self !== other) { return true }\n      }\n    }\n    return false\n  };\n\n  BranchID.prototype.sibling = function sibling () {\n    return new BranchID(this.parent, this.base)\n  };\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\") + (parser.options.ecmaVersion >= 15 ? \"v\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchV = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = Object.create(null);\n    this.backReferenceNames = [];\n    this.branchID = null;\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicodeSets = flags.indexOf(\"v\") !== -1;\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    if (unicodeSets && this.parser.options.ecmaVersion >= 15) {\n      this.switchU = true;\n      this.switchV = true;\n      this.switchN = true;\n    } else {\n      this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n      this.switchV = false;\n      this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n    }\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n  // Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n  RegExpValidationState.prototype.at = function at (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.pos, forceU)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.nextIndex(this.pos, forceU), forceU)\n  };\n\n  RegExpValidationState.prototype.advance = function advance (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    this.pos = this.nextIndex(this.pos, forceU);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    if (this.current(forceU) === ch) {\n      this.advance(forceU);\n      return true\n    }\n    return false\n  };\n\n  RegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var pos = this.pos;\n    for (var i = 0, list = chs; i < list.length; i += 1) {\n      var ch = list[i];\n\n        var current = this.at(pos, forceU);\n      if (current === -1 || current !== ch) {\n        return false\n      }\n      pos = this.nextIndex(pos, forceU);\n    }\n    this.pos = pos;\n    return true\n  };\n\n  /**\n   * Validate the flags part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    var u = false;\n    var v = false;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n      if (flag === \"u\") { u = true; }\n      if (flag === \"v\") { v = true; }\n    }\n    if (this.options.ecmaVersion >= 15 && u && v) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n  };\n\n  function hasProp(obj) {\n    for (var _ in obj) { return true }\n    return false\n  }\n\n  /**\n   * Validate the pattern part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n    // parsing contains a |GroupName|, reparse with the goal symbol\n    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n    // exception if _P_ did not conform to the grammar, if any elements of _P_\n    // were not matched by the parse, or if any Early Error conditions exist.\n    if (!state.switchN && this.options.ecmaVersion >= 9 && hasProp(state.groupNames)) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n  pp$1.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames = Object.create(null);\n    state.backReferenceNames.length = 0;\n    state.branchID = null;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      // Make the same messages as V8.\n      if (state.eat(0x29 /* ) */)) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (!state.groupNames[name]) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n  pp$1.regexp_disjunction = function(state) {\n    var trackDisjunction = this.options.ecmaVersion >= 16;\n    if (trackDisjunction) { state.branchID = new BranchID(state.branchID, null); }\n    this.regexp_alternative(state);\n    while (state.eat(0x7C /* | */)) {\n      if (trackDisjunction) { state.branchID = state.branchID.sibling(); }\n      this.regexp_alternative(state);\n    }\n    if (trackDisjunction) { state.branchID = state.branchID.parent; }\n\n    // Make the same message as V8.\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B /* { */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n  pp$1.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n  pp$1.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      // Handle `QuantifiableAssertion Quantifier` alternative.\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n      // is a QuantifiableAssertion.\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        // Make the same message as V8.\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n  pp$1.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    // ^, $\n    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n      return true\n    }\n\n    // \\b \\B\n    if (state.eat(0x5C /* \\ */)) {\n      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    // Lookahead / Lookbehind\n    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C /* < */);\n      }\n      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 /* ) */)) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n  pp$1.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F /* ? */);\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n  pp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A /* * */) ||\n      state.eat(0x2B /* + */) ||\n      state.eat(0x3F /* ? */) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$1.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B /* { */)) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D /* } */)) {\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n  pp$1.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 /* ( */)) {\n      if (state.eat(0x3F /* ? */)) {\n        if (this.options.ecmaVersion >= 16) {\n          var addModifiers = this.regexp_eatModifiers(state);\n          var hasHyphen = state.eat(0x2D /* - */);\n          if (addModifiers || hasHyphen) {\n            for (var i = 0; i < addModifiers.length; i++) {\n              var modifier = addModifiers.charAt(i);\n              if (addModifiers.indexOf(modifier, i + 1) > -1) {\n                state.raise(\"Duplicate regular expression modifiers\");\n              }\n            }\n            if (hasHyphen) {\n              var removeModifiers = this.regexp_eatModifiers(state);\n              if (!addModifiers && !removeModifiers && state.current() === 0x3A /* : */) {\n                state.raise(\"Invalid regular expression modifiers\");\n              }\n              for (var i$1 = 0; i$1 < removeModifiers.length; i$1++) {\n                var modifier$1 = removeModifiers.charAt(i$1);\n                if (\n                  removeModifiers.indexOf(modifier$1, i$1 + 1) > -1 ||\n                  addModifiers.indexOf(modifier$1) > -1\n                ) {\n                  state.raise(\"Duplicate regular expression modifiers\");\n                }\n              }\n            }\n          }\n        }\n        if (state.eat(0x3A /* : */)) {\n          this.regexp_disjunction(state);\n          if (state.eat(0x29 /* ) */)) {\n            return true\n          }\n          state.raise(\"Unterminated group\");\n        }\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 /* ( */)) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F /* ? */) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n  // RegularExpressionModifiers ::\n  //   [empty]\n  //   RegularExpressionModifiers RegularExpressionModifier\n  pp$1.regexp_eatModifiers = function(state) {\n    var modifiers = \"\";\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && isRegularExpressionModifier(ch)) {\n      modifiers += codePointToString(ch);\n      state.advance();\n    }\n    return modifiers\n  };\n  // RegularExpressionModifier :: one of\n  //   `i` `m` `s`\n  function isRegularExpressionModifier(ch) {\n    return ch === 0x69 /* i */ || ch === 0x6d /* m */ || ch === 0x73 /* s */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n  pp$1.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n  pp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n  pp$1.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24 /* $ */ ||\n      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n      ch === 0x2E /* . */ ||\n      ch === 0x3F /* ? */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n  // But eat eager.\n  pp$1.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n  pp$1.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24 /* $ */ &&\n      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n      ch !== 0x2E /* . */ &&\n      ch !== 0x3F /* ? */ &&\n      ch !== 0x5B /* [ */ &&\n      ch !== 0x5E /* ^ */ &&\n      ch !== 0x7C /* | */\n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // GroupSpecifier ::\n  //   [empty]\n  //   `?` GroupName\n  pp$1.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F /* ? */)) {\n      if (!this.regexp_eatGroupName(state)) { state.raise(\"Invalid group\"); }\n      var trackDisjunction = this.options.ecmaVersion >= 16;\n      var known = state.groupNames[state.lastStringValue];\n      if (known) {\n        if (trackDisjunction) {\n          for (var i = 0, list = known; i < list.length; i += 1) {\n            var altID = list[i];\n\n            if (!altID.separatedFrom(state.branchID))\n              { state.raise(\"Duplicate capture group name\"); }\n          }\n        } else {\n          state.raise(\"Duplicate capture group name\");\n        }\n      }\n      if (trackDisjunction) {\n        (known || (state.groupNames[state.lastStringValue] = [])).push(state.branchID);\n      } else {\n        state.groupNames[state.lastStringValue] = true;\n      }\n    }\n  };\n\n  // GroupName ::\n  //   `<` RegExpIdentifierName `>`\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C /* < */)) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  // RegExpIdentifierName ::\n  //   RegExpIdentifierStart\n  //   RegExpIdentifierName RegExpIdentifierPart\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  // RegExpIdentifierStart ::\n  //   UnicodeIDStart\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  pp$1.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n  }\n\n  // RegExpIdentifierPart ::\n  //   UnicodeIDContinue\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  //   <ZWNJ>\n  //   <ZWJ>\n  pp$1.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n  pp$1.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      if (state.current() === 0x63 /* c */) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$1.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B /* k */)) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n  pp$1.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$1.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 /* c */)) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatZero = function(state) {\n    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n  pp$1.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 /* t */) {\n      state.lastIntValue = 0x09; /* \\t */\n      state.advance();\n      return true\n    }\n    if (ch === 0x6E /* n */) {\n      state.lastIntValue = 0x0A; /* \\n */\n      state.advance();\n      return true\n    }\n    if (ch === 0x76 /* v */) {\n      state.lastIntValue = 0x0B; /* \\v */\n      state.advance();\n      return true\n    }\n    if (ch === 0x66 /* f */) {\n      state.lastIntValue = 0x0C; /* \\f */\n      state.advance();\n      return true\n    }\n    if (ch === 0x72 /* r */) {\n      state.lastIntValue = 0x0D; /* \\r */\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n  pp$1.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n  pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n\n    if (state.eat(0x75 /* u */)) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        switchU &&\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D /* } */) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n  pp$1.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F /* / */)) {\n        state.lastIntValue = 0x2F; /* / */\n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n  pp$1.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n        state.advance();\n      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n      return true\n    }\n    return false\n  };\n\n  // Return values used by character set parsing methods, needed to\n  // forbid negation of sets that can match strings.\n  var CharSetNone = 0; // Nothing parsed\n  var CharSetOk = 1; // Construct parsed, cannot contain strings\n  var CharSetString = 2; // Construct parsed, can contain strings\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n  pp$1.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return CharSetOk\n    }\n\n    var negate = false;\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      var result;\n      if (\n        state.eat(0x7B /* { */) &&\n        (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&\n        state.eat(0x7D /* } */)\n      ) {\n        if (negate && result === CharSetString) { state.raise(\"Invalid property name\"); }\n        return result\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return CharSetNone\n  };\n\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64 /* d */ ||\n      ch === 0x44 /* D */ ||\n      ch === 0x73 /* s */ ||\n      ch === 0x53 /* S */ ||\n      ch === 0x77 /* w */ ||\n      ch === 0x57 /* W */\n    )\n  }\n\n  // UnicodePropertyValueExpression ::\n  //   UnicodePropertyName `=` UnicodePropertyValue\n  //   LoneUnicodePropertyNameOrValue\n  pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    // UnicodePropertyName `=` UnicodePropertyValue\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return CharSetOk\n      }\n    }\n    state.pos = start;\n\n    // LoneUnicodePropertyNameOrValue\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)\n    }\n    return CharSetNone\n  };\n\n  pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!hasOwn(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n\n  pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }\n    if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }\n    state.raise(\"Invalid property name\");\n  };\n\n  // UnicodePropertyName ::\n  //   UnicodePropertyNameCharacters\n  pp$1.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F /* _ */\n  }\n\n  // UnicodePropertyValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  // LoneUnicodePropertyNameOrValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n  pp$1.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B /* [ */)) {\n      var negate = state.eat(0x5E /* ^ */);\n      var result = this.regexp_classContents(state);\n      if (!state.eat(0x5D /* ] */))\n        { state.raise(\"Unterminated character class\"); }\n      if (negate && result === CharSetString)\n        { state.raise(\"Negated character class may contain strings\"); }\n      return true\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassContents\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n  pp$1.regexp_classContents = function(state) {\n    if (state.current() === 0x5D /* ] */) { return CharSetOk }\n    if (state.switchV) { return this.regexp_classSetExpression(state) }\n    this.regexp_nonEmptyClassRanges(state);\n    return CharSetOk\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n  pp$1.regexp_nonEmptyClassRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n  pp$1.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        // Make the same message as V8.\n        var ch$1 = state.current();\n        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D /* ] */) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n  pp$1.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D /* - */)) {\n      state.lastIntValue = 0x2D; /* - */\n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 /* c */)) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetExpression\n  // https://tc39.es/ecma262/#prod-ClassUnion\n  // https://tc39.es/ecma262/#prod-ClassIntersection\n  // https://tc39.es/ecma262/#prod-ClassSubtraction\n  pp$1.regexp_classSetExpression = function(state) {\n    var result = CharSetOk, subResult;\n    if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {\n      if (subResult === CharSetString) { result = CharSetString; }\n      // https://tc39.es/ecma262/#prod-ClassIntersection\n      var start = state.pos;\n      while (state.eatChars([0x26, 0x26] /* && */)) {\n        if (\n          state.current() !== 0x26 /* & */ &&\n          (subResult = this.regexp_eatClassSetOperand(state))\n        ) {\n          if (subResult !== CharSetString) { result = CharSetOk; }\n          continue\n        }\n        state.raise(\"Invalid character in character class\");\n      }\n      if (start !== state.pos) { return result }\n      // https://tc39.es/ecma262/#prod-ClassSubtraction\n      while (state.eatChars([0x2D, 0x2D] /* -- */)) {\n        if (this.regexp_eatClassSetOperand(state)) { continue }\n        state.raise(\"Invalid character in character class\");\n      }\n      if (start !== state.pos) { return result }\n    } else {\n      state.raise(\"Invalid character in character class\");\n    }\n    // https://tc39.es/ecma262/#prod-ClassUnion\n    for (;;) {\n      if (this.regexp_eatClassSetRange(state)) { continue }\n      subResult = this.regexp_eatClassSetOperand(state);\n      if (!subResult) { return result }\n      if (subResult === CharSetString) { result = CharSetString; }\n    }\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetRange\n  pp$1.regexp_eatClassSetRange = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatClassSetCharacter(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {\n        var right = state.lastIntValue;\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetOperand\n  pp$1.regexp_eatClassSetOperand = function(state) {\n    if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }\n    return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)\n  };\n\n  // https://tc39.es/ecma262/#prod-NestedClass\n  pp$1.regexp_eatNestedClass = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5B /* [ */)) {\n      var negate = state.eat(0x5E /* ^ */);\n      var result = this.regexp_classContents(state);\n      if (state.eat(0x5D /* ] */)) {\n        if (negate && result === CharSetString) {\n          state.raise(\"Negated character class may contain strings\");\n        }\n        return result\n      }\n      state.pos = start;\n    }\n    if (state.eat(0x5C /* \\ */)) {\n      var result$1 = this.regexp_eatCharacterClassEscape(state);\n      if (result$1) {\n        return result$1\n      }\n      state.pos = start;\n    }\n    return null\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassStringDisjunction\n  pp$1.regexp_eatClassStringDisjunction = function(state) {\n    var start = state.pos;\n    if (state.eatChars([0x5C, 0x71] /* \\q */)) {\n      if (state.eat(0x7B /* { */)) {\n        var result = this.regexp_classStringDisjunctionContents(state);\n        if (state.eat(0x7D /* } */)) {\n          return result\n        }\n      } else {\n        // Make the same message as V8.\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return null\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents\n  pp$1.regexp_classStringDisjunctionContents = function(state) {\n    var result = this.regexp_classString(state);\n    while (state.eat(0x7C /* | */)) {\n      if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }\n    }\n    return result\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassString\n  // https://tc39.es/ecma262/#prod-NonEmptyClassString\n  pp$1.regexp_classString = function(state) {\n    var count = 0;\n    while (this.regexp_eatClassSetCharacter(state)) { count++; }\n    return count === 1 ? CharSetOk : CharSetString\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetCharacter\n  pp$1.regexp_eatClassSetCharacter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (\n        this.regexp_eatCharacterEscape(state) ||\n        this.regexp_eatClassSetReservedPunctuator(state)\n      ) {\n        return true\n      }\n      if (state.eat(0x62 /* b */)) {\n        state.lastIntValue = 0x08; /* <BS> */\n        return true\n      }\n      state.pos = start;\n      return false\n    }\n    var ch = state.current();\n    if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }\n    if (isClassSetSyntaxCharacter(ch)) { return false }\n    state.advance();\n    state.lastIntValue = ch;\n    return true\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator\n  function isClassSetReservedDoublePunctuatorCharacter(ch) {\n    return (\n      ch === 0x21 /* ! */ ||\n      ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||\n      ch >= 0x2A /* * */ && ch <= 0x2C /* , */ ||\n      ch === 0x2E /* . */ ||\n      ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||\n      ch === 0x5E /* ^ */ ||\n      ch === 0x60 /* ` */ ||\n      ch === 0x7E /* ~ */\n    )\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter\n  function isClassSetSyntaxCharacter(ch) {\n    return (\n      ch === 0x28 /* ( */ ||\n      ch === 0x29 /* ) */ ||\n      ch === 0x2D /* - */ ||\n      ch === 0x2F /* / */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\n  pp$1.regexp_eatClassSetReservedPunctuator = function(state) {\n    var ch = state.current();\n    if (isClassSetReservedPunctuator(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\n  function isClassSetReservedPunctuator(ch) {\n    return (\n      ch === 0x21 /* ! */ ||\n      ch === 0x23 /* # */ ||\n      ch === 0x25 /* % */ ||\n      ch === 0x26 /* & */ ||\n      ch === 0x2C /* , */ ||\n      ch === 0x2D /* - */ ||\n      ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||\n      ch === 0x40 /* @ */ ||\n      ch === 0x60 /* ` */ ||\n      ch === 0x7E /* ~ */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n  pp$1.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 /* x */)) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n  pp$1.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n  pp$1.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n      return 10 + (ch - 0x41 /* A */)\n    }\n    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n      return 10 + (ch - 0x61 /* a */)\n    }\n    return ch - 0x30 /* 0 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\n  pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n  pp$1.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; /* 0 */\n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n  // Object type used to represent tokens. Note that normally, tokens\n  // simply exist as properties on the parser object. This is only\n  // used for the onToken callback and the external tokenizer.\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n  // ## Tokenizer\n\n  var pp = Parser.prototype;\n\n  // Move to the next token\n\n  pp.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  // If we're in an ES6 environment, make parsers iterable\n  if (typeof Symbol !== \"undefined\")\n    { pp[Symbol.iterator] = function() {\n      var this$1$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1$1.getToken();\n          return {\n            done: token.type === types$1.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  pp.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp.readToken = function(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xdc00) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n  };\n\n  pp.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n        ++this.curLine;\n        pos = this.lineStart = nextBreak;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  pp.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: // ' '\n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: // '*'\n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  pp.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  pp.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n      this.pos += 3;\n      return this.finishToken(types$1.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types$1.dot)\n    }\n  };\n\n  pp.readToken_slash = function() { // '/'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.slash, 1)\n  };\n\n  pp.readToken_mult_modulo_exp = function(code) { // '%*'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n    // exponentiation operator ** and **=\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types$1.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp.readToken_pipe_amp = function(code) { // '|&'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (this.options.ecmaVersion >= 12) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n  };\n\n  pp.readToken_caret = function() { // '^'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.bitwiseXOR, 1)\n  };\n\n  pp.readToken_plus_min = function(code) { // '+-'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types$1.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.plusMin, 1)\n  };\n\n  pp.readToken_lt_gt = function(code) { // '<>'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n      return this.finishOp(types$1.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types$1.relational, size)\n  };\n\n  pp.readToken_eq_excl = function(code) { // '=!'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n      this.pos += 2;\n      return this.finishToken(types$1.arrow)\n    }\n    return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n  };\n\n  pp.readToken_question = function() { // '?'\n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 46) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n      }\n      if (next === 63) {\n        if (ecmaVersion >= 12) {\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\n          if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n        }\n        return this.finishOp(types$1.coalesce, 2)\n      }\n    }\n    return this.finishOp(types$1.question, 1)\n  };\n\n  pp.readToken_numberSign = function() { // '#'\n    var ecmaVersion = this.options.ecmaVersion;\n    var code = 35; // '#'\n    if (ecmaVersion >= 13) {\n      ++this.pos;\n      code = this.fullCharCodeAtPos();\n      if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n        return this.finishToken(types$1.privateId, this.readWord1())\n      }\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.getTokenFromCode = function(code) {\n    switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46: // '.'\n      return this.readToken_dot()\n\n    // Punctuation tokens.\n    case 40: ++this.pos; return this.finishToken(types$1.parenL)\n    case 41: ++this.pos; return this.finishToken(types$1.parenR)\n    case 59: ++this.pos; return this.finishToken(types$1.semi)\n    case 44: ++this.pos; return this.finishToken(types$1.comma)\n    case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n    case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n    case 123: ++this.pos; return this.finishToken(types$1.braceL)\n    case 125: ++this.pos; return this.finishToken(types$1.braceR)\n    case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n    case 96: // '`'\n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types$1.backQuote)\n\n    case 48: // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n      return this.readNumber(false)\n\n    // Quotes produce strings.\n    case 34: case 39: // '\"', \"'\"\n      return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n    case 47: // '/'\n      return this.readToken_slash()\n\n    case 37: case 42: // '%*'\n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: // '|&'\n      return this.readToken_pipe_amp(code)\n\n    case 94: // '^'\n      return this.readToken_caret()\n\n    case 43: case 45: // '+-'\n      return this.readToken_plus_min(code)\n\n    case 60: case 62: // '<>'\n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: // '=!'\n      return this.readToken_eq_excl(code)\n\n    case 63: // '?'\n      return this.readToken_question()\n\n    case 126: // '~'\n      return this.finishOp(types$1.prefix, 1)\n\n    case 35: // '#'\n      return this.readToken_numberSign()\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    // Validate pattern\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    // Create Literal#value property value.\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n      // ESTree requires null if it failed to instantiate RegExp object.\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n    }\n\n    return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    // `len` is used for character escape sequences. In that case, disallow separators.\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n    // and isn't fraction part nor exponent part. In that case, if the first digit\n    // is zero then disallow separators.\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n    var start = this.pos, total = 0, lastCode = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n      if (allowSeparators && code === 95) {\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n        if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n        if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n        lastCode = code;\n        continue\n      }\n\n      if (code >= 97) { val = code - 97 + 10; } // a\n      else if (code >= 65) { val = code - 65 + 10; } // A\n      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n      else { val = Infinity; }\n      if (val >= radix) { break }\n      lastCode = code;\n      total = total * radix + val;\n    }\n\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  function stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) {\n      return parseInt(str, 8)\n    }\n\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n    return parseFloat(str.replace(/_/g, \"\"))\n  }\n\n  function stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") {\n      return null\n    }\n\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\n    return BigInt(str.replace(/_/g, \"\"))\n  }\n\n  pp.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  pp.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types$1.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { // '.'\n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { // 'eE'\n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } // '+-'\n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var val = stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  pp.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { // '{'\n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  pp.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else if (ch === 0x2028 || ch === 0x2029) {\n        if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n        if (this.options.locations) {\n          this.curLine++;\n          this.lineStart = this.pos;\n        }\n      } else {\n        if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types$1.string, out)\n  };\n\n  // Reads template string tokens.\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n        if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types$1.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types$1.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types$1.template, out)\n      }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  // Reads a template token to search for the end, without validating any escape sequences\n  pp.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") { break }\n        // fall through\n      case \"`\":\n        return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      case \"\\r\":\n        if (this.input[this.pos + 1] === \"\\n\") { ++this.pos; }\n        // fall through\n      case \"\\n\": case \"\\u2028\": case \"\\u2029\":\n        ++this.curLine;\n        this.lineStart = this.pos + 1;\n        break\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n  // Used to read escaped characters\n\n  pp.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" // 'n' -> '\\n'\n    case 114: return \"\\r\" // 'r' -> '\\r'\n    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n    case 117: return codePointToString(this.readCodePoint()) // 'u'\n    case 116: return \"\\t\" // 't' -> '\\t'\n    case 98: return \"\\b\" // 'b' -> '\\b'\n    case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n    case 102: return \"\\f\" // 'f' -> '\\f'\n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n    case 10: // ' \\n'\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (this.strict) {\n        this.invalidStringToken(\n          this.pos - 1,\n          \"Invalid escape sequence\"\n        );\n      }\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        // Unicode new line characters after \\ get removed from output in both\n        // template literals and strings\n        if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  pp.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  pp.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { // \"\\\"\n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  pp.readWord = function() {\n    var word = this.readWord1();\n    var type = types$1.name;\n    if (this.keywords.test(word)) {\n      type = keywords[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n  // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n  //\n  // Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n  // various contributors and released under an MIT license.\n  //\n  // Git repositories for Acorn are available at\n  //\n  //     http://marijnhaverbeke.nl/git/acorn\n  //     https://github.com/acornjs/acorn.git\n  //\n  // Please use the [github bug tracker][ghbt] to report issues.\n  //\n  // [ghbt]: https://github.com/acornjs/acorn/issues\n\n\n  var version = \"8.15.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types$1,\n    keywordTypes: keywords,\n    TokContext: TokContext,\n    tokContexts: types,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and returns\n  // an abstract syntax tree as specified by the [ESTree spec][estree].\n  //\n  // [estree]: https://github.com/estree/estree\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n  // This function tries to parse a single expression at a given\n  // offset in a string. Useful for parsing mixed-language formats\n  // that embed JavaScript expressions.\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenizer` export provides an interface to the tokenizer.\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types;\n  exports.tokTypes = types$1;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n}));\n","'use strict';\n\nconst XHTMLEntities = require('./xhtml');\n\nconst hexNumber = /^[\\da-fA-F]+$/;\nconst decimalNumber = /^\\d+$/;\n\n// The map to `acorn-jsx` tokens from `acorn` namespace objects.\nconst acornJsxMap = new WeakMap();\n\n// Get the original tokens for the given `acorn` namespace object.\nfunction getJsxTokens(acorn) {\n  acorn = acorn.Parser.acorn || acorn;\n  let acornJsx = acornJsxMap.get(acorn);\n  if (!acornJsx) {\n    const tt = acorn.tokTypes;\n    const TokContext = acorn.TokContext;\n    const TokenType = acorn.TokenType;\n    const tc_oTag = new TokContext('<tag', false);\n    const tc_cTag = new TokContext('</tag', false);\n    const tc_expr = new TokContext('<tag>...</tag>', true, true);\n    const tokContexts = {\n      tc_oTag: tc_oTag,\n      tc_cTag: tc_cTag,\n      tc_expr: tc_expr\n    };\n    const tokTypes = {\n      jsxName: new TokenType('jsxName'),\n      jsxText: new TokenType('jsxText', {beforeExpr: true}),\n      jsxTagStart: new TokenType('jsxTagStart', {startsExpr: true}),\n      jsxTagEnd: new TokenType('jsxTagEnd')\n    };\n\n    tokTypes.jsxTagStart.updateContext = function() {\n      this.context.push(tc_expr); // treat as beginning of JSX expression\n      this.context.push(tc_oTag); // start opening tag context\n      this.exprAllowed = false;\n    };\n    tokTypes.jsxTagEnd.updateContext = function(prevType) {\n      let out = this.context.pop();\n      if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {\n        this.context.pop();\n        this.exprAllowed = this.curContext() === tc_expr;\n      } else {\n        this.exprAllowed = true;\n      }\n    };\n\n    acornJsx = { tokContexts: tokContexts, tokTypes: tokTypes };\n    acornJsxMap.set(acorn, acornJsx);\n  }\n\n  return acornJsx;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (!object)\n    return object;\n\n  if (object.type === 'JSXIdentifier')\n    return object.name;\n\n  if (object.type === 'JSXNamespacedName')\n    return object.namespace.name + ':' + object.name.name;\n\n  if (object.type === 'JSXMemberExpression')\n    return getQualifiedJSXName(object.object) + '.' +\n    getQualifiedJSXName(object.property);\n}\n\nmodule.exports = function(options) {\n  options = options || {};\n  return function(Parser) {\n    return plugin({\n      allowNamespaces: options.allowNamespaces !== false,\n      allowNamespacedObjects: !!options.allowNamespacedObjects\n    }, Parser);\n  };\n};\n\n// This is `tokTypes` of the peer dep.\n// This can be different instances from the actual `tokTypes` this plugin uses.\nObject.defineProperty(module.exports, \"tokTypes\", {\n  get: function get_tokTypes() {\n    return getJsxTokens(require(\"acorn\")).tokTypes;\n  },\n  configurable: true,\n  enumerable: true\n});\n\nfunction plugin(options, Parser) {\n  const acorn = Parser.acorn || require(\"acorn\");\n  const acornJsx = getJsxTokens(acorn);\n  const tt = acorn.tokTypes;\n  const tok = acornJsx.tokTypes;\n  const tokContexts = acorn.tokContexts;\n  const tc_oTag = acornJsx.tokContexts.tc_oTag;\n  const tc_cTag = acornJsx.tokContexts.tc_cTag;\n  const tc_expr = acornJsx.tokContexts.tc_expr;\n  const isNewLine = acorn.isNewLine;\n  const isIdentifierStart = acorn.isIdentifierStart;\n  const isIdentifierChar = acorn.isIdentifierChar;\n\n  return class extends Parser {\n    // Expose actual `tokTypes` and `tokContexts` to other plugins.\n    static get acornJsx() {\n      return acornJsx;\n    }\n\n    // Reads inline JSX contents token.\n    jsx_readToken() {\n      let out = '', chunkStart = this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated JSX contents');\n        let ch = this.input.charCodeAt(this.pos);\n\n        switch (ch) {\n        case 60: // '<'\n        case 123: // '{'\n          if (this.pos === this.start) {\n            if (ch === 60 && this.exprAllowed) {\n              ++this.pos;\n              return this.finishToken(tok.jsxTagStart);\n            }\n            return this.getTokenFromCode(ch);\n          }\n          out += this.input.slice(chunkStart, this.pos);\n          return this.finishToken(tok.jsxText, out);\n\n        case 38: // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n          break;\n\n        case 62: // '>'\n        case 125: // '}'\n          this.raise(\n            this.pos,\n            \"Unexpected token `\" + this.input[this.pos] + \"`. Did you mean `\" +\n              (ch === 62 ? \"&gt;\" : \"&rbrace;\") + \"` or \" + \"`{\\\"\" + this.input[this.pos] + \"\\\"}\" + \"`?\"\n          );\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.pos);\n            out += this.jsx_readNewLine(true);\n            chunkStart = this.pos;\n          } else {\n            ++this.pos;\n          }\n        }\n      }\n    }\n\n    jsx_readNewLine(normalizeCRLF) {\n      let ch = this.input.charCodeAt(this.pos);\n      let out;\n      ++this.pos;\n      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n        out = normalizeCRLF ? '\\n' : '\\r\\n';\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n\n      return out;\n    }\n\n    jsx_readString(quote) {\n      let out = '', chunkStart = ++this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated string constant');\n        let ch = this.input.charCodeAt(this.pos);\n        if (ch === quote) break;\n        if (ch === 38) { // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readNewLine(false);\n          chunkStart = this.pos;\n        } else {\n          ++this.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsx_readEntity() {\n      let str = '', count = 0, entity;\n      let ch = this.input[this.pos];\n      if (ch !== '&')\n        this.raise(this.pos, 'Entity must start with an ampersand');\n      let startPos = ++this.pos;\n      while (this.pos < this.input.length && count++ < 10) {\n        ch = this.input[this.pos++];\n        if (ch === ';') {\n          if (str[0] === '#') {\n            if (str[1] === 'x') {\n              str = str.substr(2);\n              if (hexNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 16));\n            } else {\n              str = str.substr(1);\n              if (decimalNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 10));\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.pos = startPos;\n        return '&';\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can't contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsx_readWord() {\n      let ch, start = this.pos;\n      do {\n        ch = this.input.charCodeAt(++this.pos);\n      } while (isIdentifierChar(ch) || ch === 45); // '-'\n      return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsx_parseIdentifier() {\n      let node = this.startNode();\n      if (this.type === tok.jsxName)\n        node.name = this.value;\n      else if (this.type.keyword)\n        node.name = this.type.keyword;\n      else\n        this.unexpected();\n      this.next();\n      return this.finishNode(node, 'JSXIdentifier');\n    }\n\n    // Parse namespaced identifier.\n\n    jsx_parseNamespacedName() {\n      let startPos = this.start, startLoc = this.startLoc;\n      let name = this.jsx_parseIdentifier();\n      if (!options.allowNamespaces || !this.eat(tt.colon)) return name;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsx_parseIdentifier();\n      return this.finishNode(node, 'JSXNamespacedName');\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsx_parseElementName() {\n      if (this.type === tok.jsxTagEnd) return '';\n      let startPos = this.start, startLoc = this.startLoc;\n      let node = this.jsx_parseNamespacedName();\n      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {\n        this.unexpected();\n      }\n      while (this.eat(tt.dot)) {\n        let newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsx_parseIdentifier();\n        node = this.finishNode(newNode, 'JSXMemberExpression');\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsx_parseAttributeValue() {\n      switch (this.type) {\n      case tt.braceL:\n        let node = this.jsx_parseExpressionContainer();\n        if (node.expression.type === 'JSXEmptyExpression')\n          this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n        return node;\n\n      case tok.jsxTagStart:\n      case tt.string:\n        return this.parseExprAtom();\n\n      default:\n        this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsx_parseEmptyExpression() {\n      let node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsx_parseExpressionContainer() {\n      let node = this.startNode();\n      this.next();\n      node.expression = this.type === tt.braceR\n        ? this.jsx_parseEmptyExpression()\n        : this.parseExpression();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXExpressionContainer');\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsx_parseAttribute() {\n      let node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, 'JSXSpreadAttribute');\n      }\n      node.name = this.jsx_parseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n      return this.finishNode(node, 'JSXAttribute');\n    }\n\n    // Parses JSX opening tag starting after '<'.\n\n    jsx_parseOpeningElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      node.attributes = [];\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      while (this.type !== tt.slash && this.type !== tok.jsxTagEnd)\n        node.attributes.push(this.jsx_parseAttribute());\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');\n    }\n\n    // Parses JSX closing tag starting after '</'.\n\n    jsx_parseClosingElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');\n    }\n\n    // Parses entire JSX element, including it's opening tag\n    // (starting after '<'), attributes, contents and closing tag.\n\n    jsx_parseElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let children = [];\n      let openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.type) {\n          case tok.jsxTagStart:\n            startPos = this.start; startLoc = this.startLoc;\n            this.next();\n            if (this.eat(tt.slash)) {\n              closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n            children.push(this.jsx_parseElementAt(startPos, startLoc));\n            break;\n\n          case tok.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case tt.braceL:\n            children.push(this.jsx_parseExpressionContainer());\n            break;\n\n          default:\n            this.unexpected();\n          }\n        }\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(\n            closingElement.start,\n            'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n        }\n      }\n      let fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';\n\n      node['opening' + fragmentOrElement] = openingElement;\n      node['closing' + fragmentOrElement] = closingElement;\n      node.children = children;\n      if (this.type === tt.relational && this.value === \"<\") {\n        this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n      }\n      return this.finishNode(node, 'JSX' + fragmentOrElement);\n    }\n\n    // Parse JSX text\n\n    jsx_parseText() {\n      let node = this.parseLiteral(this.value);\n      node.type = \"JSXText\";\n      return node;\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsx_parseElement() {\n      let startPos = this.start, startLoc = this.startLoc;\n      this.next();\n      return this.jsx_parseElementAt(startPos, startLoc);\n    }\n\n    parseExprAtom(refShortHandDefaultPos) {\n      if (this.type === tok.jsxText)\n        return this.jsx_parseText();\n      else if (this.type === tok.jsxTagStart)\n        return this.jsx_parseElement();\n      else\n        return super.parseExprAtom(refShortHandDefaultPos);\n    }\n\n    readToken(code) {\n      let context = this.curContext();\n\n      if (context === tc_expr) return this.jsx_readToken();\n\n      if (context === tc_oTag || context === tc_cTag) {\n        if (isIdentifierStart(code)) return this.jsx_readWord();\n\n        if (code == 62) {\n          ++this.pos;\n          return this.finishToken(tok.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context == tc_oTag)\n          return this.jsx_readString(code);\n      }\n\n      if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {\n        ++this.pos;\n        return this.finishToken(tok.jsxTagStart);\n      }\n      return super.readToken(code);\n    }\n\n    updateContext(prevType) {\n      if (this.type == tt.braceL) {\n        var curContext = this.curContext();\n        if (curContext == tc_oTag) this.context.push(tokContexts.b_expr);\n        else if (curContext == tc_expr) this.context.push(tokContexts.b_tmpl);\n        else super.updateContext(prevType);\n        this.exprAllowed = true;\n      } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {\n        this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.context.push(tc_cTag); // reconsider as closing tag context\n        this.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n}\n","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitBinaryExpression(node: acorn.BinaryExpression, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        [node.operator]: [\r\n            ast2jeon(node.left, options),\r\n            ast2jeon(node.right, options)\r\n        ]\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitUnaryExpression(node: acorn.UnaryExpression, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        [node.operator]: ast2jeon(node.argument, options)\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitProgram(node: acorn.Program, options?: { json?: typeof JSON }): any {\r\n    if (node.body.length === 1) {\r\n        return ast2jeon(node.body[0], options)\r\n    }\r\n    return node.body.map(stmt => ast2jeon(stmt, options))\r\n}\r\n","import * as acorn from 'acorn'\r\n\r\nexport function visitIdentifier(node: acorn.Identifier, options?: { json?: typeof JSON }): any {\r\n    return `@${node.name}`\r\n}","import * as acorn from 'acorn'\r\n\r\nexport function visitLiteral(node: acorn.Literal, options?: { json?: typeof JSON }): any {\r\n    return node.value\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitLogicalExpression(node: acorn.LogicalExpression, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        [node.operator]: [\r\n            ast2jeon(node.left, options),\r\n            ast2jeon(node.right, options)\r\n        ]\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitConditionalExpression(node: acorn.ConditionalExpression, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        '?': [\r\n            ast2jeon(node.test, options),\r\n            ast2jeon(node.consequent, options),\r\n            ast2jeon(node.alternate, options)\r\n        ]\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitCallExpression(node: acorn.CallExpression, options?: { json?: typeof JSON }): any {\r\n    // Check if it's a method call or function call\r\n    if (node.callee.type === 'MemberExpression') {\r\n        // Method call - convert to JEON function execution format\r\n        const callee = node.callee as acorn.MemberExpression\r\n        return {\r\n            '()': [\r\n                {\r\n                    '.': [\r\n                        ast2jeon(callee.object, options),\r\n                        callee.property.type === 'Identifier'\r\n                            ? (callee.property as acorn.Identifier).name\r\n                            : ''\r\n                    ]\r\n                },\r\n                ...node.arguments.map(arg => ast2jeon(arg, options))\r\n            ]\r\n        }\r\n    } else {\r\n        // Function call\r\n        const functionName = (node.callee as acorn.Identifier).name\r\n        return {\r\n            [`${functionName}()`]: node.arguments.map(arg => ast2jeon(arg, options))\r\n        }\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitMemberExpression(node: acorn.MemberExpression, options?: { json?: typeof JSON }): any {\r\n    // Handle property chaining\r\n    const segments = []\r\n    let current = node as acorn.MemberExpression\r\n\r\n    // Collect all segments\r\n    while (current && current.type === 'MemberExpression') {\r\n        if (current.computed) {\r\n            segments.unshift(ast2jeon(current.property, options))\r\n        } else {\r\n            segments.unshift(\r\n                current.property.type === 'Identifier'\r\n                    ? (current.property as acorn.Identifier).name\r\n                    : ''\r\n            )\r\n        }\r\n        current = current.object as acorn.MemberExpression\r\n    }\r\n\r\n    // Add the base object\r\n    segments.unshift(ast2jeon(current, options))\r\n\r\n    return {\r\n        '.': segments\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitArrayExpression(node: acorn.ArrayExpression, options?: { json?: typeof JSON }): any {\r\n    return node.elements\r\n        .filter(element => element !== null)\r\n        .map(element => ast2jeon(element!, options))\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitObjectExpression(node: acorn.ObjectExpression, options?: { json?: typeof JSON }): any {\r\n    const obj: Record<string, any> = {}\r\n    let spreadIndex = 0\r\n    for (const prop of node.properties) {\r\n        if (prop.type === 'Property') {\r\n            const key = prop.key.type === 'Identifier' ? (prop.key as acorn.Identifier).name : (prop.key as acorn.Literal).value as string\r\n            obj[key] = ast2jeon(prop.value, options)\r\n        } else if (prop.type === 'SpreadElement') {\r\n            // Handle spread operator\r\n            // For multiple spread elements, we need to create a unique key\r\n            const spreadKey = spreadIndex === 0 ? '...' : `...${spreadIndex}`\r\n            obj[spreadKey] = ast2jeon((prop as acorn.SpreadElement).argument, options)\r\n            spreadIndex++\r\n        }\r\n    }\r\n    return obj\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitSpreadElement(node: acorn.SpreadElement, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        '...': ast2jeon(node.argument, options)\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitSwitchStatement(node: acorn.SwitchStatement, options?: { json?: typeof JSON }): any {\r\n    const cases = node.cases.map(caseClause => {\r\n        if (caseClause.test) {\r\n            return {\r\n                'case': ast2jeon(caseClause.test, options),\r\n                'body': caseClause.consequent.map(consequent => ast2jeon(consequent, options))\r\n            }\r\n        } else {\r\n            return {\r\n                'default': caseClause.consequent.map(consequent => ast2jeon(consequent, options))\r\n            }\r\n        }\r\n    })\r\n    return {\r\n        'switch': [\r\n            ast2jeon(node.discriminant, options),\r\n            cases\r\n        ]\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitExpressionStatement(node: acorn.ExpressionStatement, options?: { json?: typeof JSON }): any {\r\n    return ast2jeon(node.expression, options)\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitNewExpression(node: acorn.NewExpression, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        'new': [\r\n            (node.callee as acorn.Identifier).name,\r\n            ...node.arguments.map(arg => ast2jeon(arg, options))\r\n        ]\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitFunctionDeclaration(node: acorn.FunctionDeclaration, options?: { json?: typeof JSON }): any {\r\n    const params = node.params.map((param: acorn.Node) => {\r\n        if (param.type === 'Identifier') {\r\n            return (param as acorn.Identifier).name\r\n        }\r\n        return ast2jeon(param, options)\r\n    })\r\n\r\n    // Handle async functions\r\n    const isAsync = node.async ? 'async ' : ''\r\n\r\n    // Handle generator functions\r\n    const isGenerator = node.generator ? '*' : ''\r\n\r\n    const functionName = node.id ? ` ${(node.id as acorn.Identifier).name}` : ''\r\n    const paramStr = params.length > 0 ? `(${params.join(', ')})` : '()'\r\n    const functionType = isAsync ? `${isAsync}function${isGenerator}` : `function${isGenerator}`\r\n    // For function body, we need to check if it's a BlockStatement\r\n    if (node.body.type === 'BlockStatement') {\r\n        const blockBody = node.body as acorn.BlockStatement\r\n        return {\r\n            [`${functionType}${functionName}${paramStr}`]: Array.isArray(blockBody.body) ?\r\n                blockBody.body.map(stmt => ast2jeon(stmt, options)) :\r\n                [ast2jeon(blockBody.body[0], options)]\r\n        }\r\n    } else {\r\n        return {\r\n            [`${functionType}${functionName}${paramStr}`]: [ast2jeon(node.body, options)]\r\n        }\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitFunctionExpression(node: acorn.FunctionExpression, options?: { json?: typeof JSON }): any {\r\n    const params = node.params.map((param: acorn.Node) => {\r\n        if (param.type === 'Identifier') {\r\n            return (param as acorn.Identifier).name\r\n        }\r\n        return ast2jeon(param, options)\r\n    })\r\n\r\n    // Handle async functions\r\n    const isAsync = node.async ? 'async ' : ''\r\n\r\n    // Handle generator functions\r\n    const isGenerator = node.generator ? '*' : ''\r\n\r\n    const functionName = node.id ? ` ${(node.id as acorn.Identifier).name}` : ''\r\n    const paramStr = params.length > 0 ? `(${params.join(', ')})` : '()'\r\n    const functionType = isAsync ? `${isAsync}function${isGenerator}` : `function${isGenerator}`\r\n    // For function body, we need to check if it's a BlockStatement\r\n    if (node.body.type === 'BlockStatement') {\r\n        const blockBody = node.body as acorn.BlockStatement\r\n        return {\r\n            [`${functionType}${functionName}${paramStr}`]: Array.isArray(blockBody.body) ?\r\n                blockBody.body.map((stmt: any) => ast2jeon(stmt, options)) :\r\n                [ast2jeon(blockBody.body[0], options)]\r\n        }\r\n    } else {\r\n        return {\r\n            [`${functionType}${functionName}${paramStr}`]: [ast2jeon(node.body, options)]\r\n        }\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitArrowFunctionExpression(node: acorn.ArrowFunctionExpression, options?: { json?: typeof JSON }): any {\r\n    const params = node.params.map((param: acorn.Node) => {\r\n        if (param.type === 'Identifier') {\r\n            return (param as acorn.Identifier).name\r\n        }\r\n        return ast2jeon(param, options)\r\n    })\r\n\r\n    const paramStr = params.length > 0 ? `(${params.join(', ')})` : '()'\r\n    const prefix = node.async ? 'async ' : ''\r\n    return {\r\n        [`${prefix}${paramStr} =>`]: ast2jeon(node.body, options)\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitBlockStatement(node: acorn.BlockStatement, options?: { json?: typeof JSON }): any {\r\n    if (node.body.length === 1) {\r\n        return ast2jeon(node.body[0], options)\r\n    }\r\n    return node.body.map(stmt => ast2jeon(stmt, options))\r\n}\r\n","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\n// This visitor is no longer used since variable declarations are handled in the Program visitor\r\n// to group consecutive declarations of the same kind.\r\nexport function visitVariableDeclaration(node: acorn.VariableDeclaration, options?: { json?: typeof JSON }): any {\r\n    // Use different keys based on declaration kind\r\n    const key = node.kind === 'const' ? '@@' : '@'\r\n    const declarations: Record<string, any> = {}\r\n    for (const decl of node.declarations) {\r\n        if (decl.id.type === 'Identifier') {\r\n            declarations[(decl.id as acorn.Identifier).name] = decl.init ? ast2jeon(decl.init, options) : null\r\n        }\r\n    }\r\n    return {\r\n        [key]: declarations\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitAssignmentExpression(node: acorn.AssignmentExpression, options?: { json?: typeof JSON }): any {\r\n    if (node.operator === '=') {\r\n        // Check if this is destructuring assignment\r\n        if (node.left.type === 'ArrayPattern' || node.left.type === 'ObjectPattern') {\r\n            return {\r\n                '=': [\r\n                    `[${node.left.type}]`,\r\n                    ast2jeon(node.right, options)\r\n                ]\r\n            }\r\n        }\r\n        return {\r\n            '=': [\r\n                ast2jeon(node.left, options),\r\n                ast2jeon(node.right, options)\r\n            ]\r\n        }\r\n    }\r\n    // Handle other assignment operators\r\n    return {\r\n        [node.operator]: [\r\n            ast2jeon(node.left, options),\r\n            ast2jeon(node.right, options)\r\n        ]\r\n    }\r\n}","import * as acorn from 'acorn'\r\n\r\nexport function visitArrayPattern(node: acorn.ArrayPattern, options?: { json?: typeof JSON }): any {\r\n    return `[ArrayPattern]`\r\n}","import * as acorn from 'acorn'\r\n\r\nexport function visitObjectPattern(node: acorn.ObjectPattern, options?: { json?: typeof JSON }): any {\r\n    return `[ObjectPattern]`\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitUpdateExpression(node: acorn.UpdateExpression, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        [node.operator]: ast2jeon(node.argument, options)\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitIfStatement(node: acorn.IfStatement, options?: { json?: typeof JSON }): any {\r\n    const result: any = {\r\n        'if': [\r\n            ast2jeon(node.test, options),\r\n            ast2jeon(node.consequent, options)\r\n        ]\r\n    }\r\n    if (node.alternate) {\r\n        result['if'][2] = ast2jeon(node.alternate, options)\r\n    }\r\n    return result\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitWhileStatement(node: acorn.WhileStatement, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        'while': [\r\n            ast2jeon(node.test, options),\r\n            ast2jeon(node.body, options)\r\n        ]\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitForStatement(node: acorn.ForStatement, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        'for': [\r\n            node.init ? ast2jeon(node.init, options) : null,\r\n            node.test ? ast2jeon(node.test, options) : null,\r\n            node.update ? ast2jeon(node.update, options) : null,\r\n            ast2jeon(node.body, options)\r\n        ]\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitReturnStatement(node: acorn.ReturnStatement, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        'return': node.argument ?\r\n            ast2jeon(node.argument, options) :\r\n            null\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitClassDeclaration(node: acorn.ClassDeclaration, options?: { json?: typeof JSON }): any {\r\n    const className = node.id ? node.id.name : 'AnonymousClass'\r\n    const classMembers: Record<string, any> = {}\r\n\r\n    // Process class body\r\n    if (node.body && node.body.body) {\r\n        for (const member of node.body.body) {\r\n            if (member.type === 'MethodDefinition') {\r\n                // Handle methods, getters, setters\r\n                let methodKey = ''\r\n                if (member.static) {\r\n                    // Prefix static methods with 'static '\r\n                    methodKey = 'static '\r\n                }\r\n\r\n                // Handle async methods\r\n                const isAsyncMethod = member.value && member.value.async ? 'async ' : ''\r\n\r\n                if (member.kind === 'constructor') {\r\n                    methodKey += 'constructor(' + (member.value.params || []).map((p: any) => {\r\n                        if (p.type === 'Identifier') {\r\n                            return (p as acorn.Identifier).name\r\n                        }\r\n                        return ast2jeon(p, options)\r\n                    }).join(', ') + ')'\r\n                } else if (member.kind === 'get') {\r\n                    let keyName = ''\r\n                    if (member.key.type === 'Identifier') {\r\n                        keyName = (member.key as acorn.Identifier).name\r\n                    } else if (member.key.type === 'Literal') {\r\n                        keyName = (member.key as acorn.Literal).value as string\r\n                    }\r\n                    methodKey += 'get ' + keyName\r\n                } else if (member.kind === 'set') {\r\n                    let keyName = ''\r\n                    if (member.key.type === 'Identifier') {\r\n                        keyName = (member.key as acorn.Identifier).name\r\n                    } else if (member.key.type === 'Literal') {\r\n                        keyName = (member.key as acorn.Literal).value as string\r\n                    }\r\n                    methodKey += 'set ' + keyName +\r\n                        '(' + (member.value.params || []).map((p: any) => {\r\n                            if (p.type === 'Identifier') {\r\n                                return (p as acorn.Identifier).name\r\n                            }\r\n                            return ast2jeon(p, options)\r\n                        }).join(', ') + ')'\r\n                } else {\r\n                    // Regular method\r\n                    let methodName = ''\r\n                    if (member.key.type === 'Identifier') {\r\n                        methodName = (member.key as acorn.Identifier).name\r\n                    } else if (member.key.type === 'Literal') {\r\n                        methodName = (member.key as acorn.Literal).value as string\r\n                    }\r\n                    methodKey += isAsyncMethod + methodName + '(' + (member.value.params || []).map((p: any) => {\r\n                        if (p.type === 'Identifier') {\r\n                            return (p as acorn.Identifier).name\r\n                        }\r\n                        return ast2jeon(p, options)\r\n                    }).join(', ') + ')'\r\n                }\r\n\r\n                // Convert method body using BlockStatement visitor for proper variable grouping\r\n                if (member.value.body.type === 'BlockStatement') {\r\n                    const blockBody = member.value.body as acorn.BlockStatement\r\n                    const methodBody = Array.isArray(blockBody.body) ?\r\n                        blockBody.body.map(stmt => ast2jeon(stmt, options)) :\r\n                        [ast2jeon(blockBody.body[0], options)]\r\n                    classMembers[methodKey] = methodBody\r\n                } else {\r\n                    classMembers[methodKey] = [ast2jeon(member.value.body, options)]\r\n                }\r\n            } else if (member.type === 'PropertyDefinition') {\r\n                // Handle class properties\r\n                let propName = ''\r\n                if (member.key.type === 'Identifier') {\r\n                    propName = (member.key as acorn.Identifier).name\r\n                } else if (member.key.type === 'Literal') {\r\n                    propName = (member.key as acorn.Literal).value as string\r\n                }\r\n                // Prefix static properties with 'static '\r\n                if (member.static) {\r\n                    propName = 'static ' + propName\r\n                }\r\n                classMembers[propName] = member.value ? ast2jeon(member.value, options) : null\r\n            }\r\n        }\r\n    }\r\n\r\n    // For class declarations, return an object with \"class ClassName\" as the key\r\n    // This matches the pattern used for function declarations\r\n    return {\r\n        [`class ${className}`]: classMembers\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitClassExpression(node: acorn.ClassExpression): any {\r\n    const className = node.id ? node.id.name : 'AnonymousClass'\r\n    const classMembers: Record<string, any> = {}\r\n\r\n    // Process class body\r\n    if (node.body && node.body.body) {\r\n        for (const member of node.body.body) {\r\n            if (member.type === 'MethodDefinition') {\r\n                // Handle methods, getters, setters\r\n                let methodKey = ''\r\n                if (member.static) {\r\n                    // Prefix static methods with 'static '\r\n                    methodKey = 'static '\r\n                }\r\n\r\n                // Handle async methods\r\n                const isAsyncMethod = member.value && member.value.async ? 'async ' : ''\r\n\r\n                if (member.kind === 'constructor') {\r\n                    methodKey += 'constructor(' + (member.value.params || []).map((p: any) => p.name).join(', ') + ')'\r\n                } else if (member.kind === 'get') {\r\n                    let keyName = ''\r\n                    if (member.key.type === 'Identifier') {\r\n                        keyName = (member.key as acorn.Identifier).name\r\n                    } else if (member.key.type === 'Literal') {\r\n                        keyName = (member.key as acorn.Literal).value as string\r\n                    }\r\n                    methodKey += 'get ' + keyName\r\n                } else if (member.kind === 'set') {\r\n                    let keyName = ''\r\n                    if (member.key.type === 'Identifier') {\r\n                        keyName = (member.key as acorn.Identifier).name\r\n                    } else if (member.key.type === 'Literal') {\r\n                        keyName = (member.key as acorn.Literal).value as string\r\n                    }\r\n                    methodKey += 'set ' + keyName +\r\n                        '(' + (member.value.params || []).map((p: any) => p.name).join(', ') + ')'\r\n                } else {\r\n                    // Regular method\r\n                    let methodName = ''\r\n                    if (member.key.type === 'Identifier') {\r\n                        methodName = (member.key as acorn.Identifier).name\r\n                    } else if (member.key.type === 'Literal') {\r\n                        methodName = (member.key as acorn.Literal).value as string\r\n                    }\r\n                    methodKey += isAsyncMethod + methodName + '(' + (member.value.params || []).map((p: any) => p.name).join(', ') + ')'\r\n                }\r\n\r\n                // Convert method body directly instead of the entire function expression\r\n                const methodBody = Array.isArray(member.value.body.body) ?\r\n                    member.value.body.body.map(ast2jeon) :\r\n                    [ast2jeon(member.value.body.body as unknown as acorn.Node)]\r\n\r\n                classMembers[methodKey] = methodBody\r\n            } else if (member.type === 'PropertyDefinition') {\r\n                // Handle class properties\r\n                let propName = ''\r\n                if (member.key.type === 'Identifier') {\r\n                    propName = (member.key as acorn.Identifier).name\r\n                } else if (member.key.type === 'Literal') {\r\n                    propName = (member.key as acorn.Literal).value as string\r\n                }\r\n                // Prefix static properties with 'static '\r\n                if (member.static) {\r\n                    propName = 'static ' + propName\r\n                }\r\n                classMembers[propName] = member.value ? ast2jeon(member.value) : null\r\n            }\r\n        }\r\n    }\r\n\r\n    // For ClassExpression, return the class object directly\r\n    return {\r\n        'class': classMembers\r\n    }\r\n}","import * as acorn from 'acorn'\r\n\r\nexport function visitThisExpression(node: acorn.ThisExpression, options?: { json?: typeof JSON }): any {\r\n    return '@this'\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitMethodDefinition(node: acorn.MethodDefinition): any {\r\n    // Handle class methods, including async methods\r\n    let methodKey = ''\r\n    if (node.static) {\r\n        methodKey = 'static '\r\n    }\r\n\r\n    // Handle async methods\r\n    const isAsyncMethod = node.value && node.value.async ? 'async ' : ''\r\n\r\n    if (node.kind === 'constructor') {\r\n        methodKey += 'constructor(' + (node.value.params || []).map((p: any) => p.name).join(', ') + ')'\r\n    } else if (node.kind === 'get') {\r\n        let keyName = ''\r\n        if (node.key.type === 'Identifier') {\r\n            keyName = (node.key as acorn.Identifier).name\r\n        } else if (node.key.type === 'Literal') {\r\n            keyName = (node.key as acorn.Literal).value as string\r\n        }\r\n        methodKey += 'get ' + keyName\r\n    } else if (node.kind === 'set') {\r\n        let keyName = ''\r\n        if (node.key.type === 'Identifier') {\r\n            keyName = (node.key as acorn.Identifier).name\r\n        } else if (node.key.type === 'Literal') {\r\n            keyName = (node.key as acorn.Literal).value as string\r\n        }\r\n        methodKey += 'set ' + keyName +\r\n            '(' + (node.value.params || []).map((p: any) => p.name).join(', ') + ')'\r\n    } else {\r\n        // Regular method\r\n        let methodName = ''\r\n        if (node.key.type === 'Identifier') {\r\n            methodName = (node.key as acorn.Identifier).name\r\n        } else if (node.key.type === 'Literal') {\r\n            methodName = (node.key as acorn.Literal).value as string\r\n        }\r\n        methodKey += isAsyncMethod + methodName + '(' + (node.value.params || []).map((p: any) => p.name).join(', ') + ')'\r\n    }\r\n\r\n    // Convert method body\r\n    // For methods, we need to extract just the function body statements, not the entire function expression\r\n    const methodBody = Array.isArray(node.value.body.body) ?\r\n        node.value.body.body.map(ast2jeon) :\r\n        [ast2jeon(node.value.body.body as unknown as acorn.Node)]\r\n\r\n    const result = {\r\n        [methodKey]: methodBody\r\n    }\r\n\r\n    return result\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitPropertyDefinition(node: acorn.PropertyDefinition): any {\r\n    // Handle class properties\r\n    let propName = ''\r\n    if (node.key.type === 'Identifier') {\r\n        propName = (node.key as acorn.Identifier).name\r\n    } else if (node.key.type === 'Literal') {\r\n        propName = (node.key as acorn.Literal).value as string\r\n    }\r\n\r\n    // Prefix static properties with 'static '\r\n    if (node.static) {\r\n        propName = 'static ' + propName\r\n    }\r\n\r\n    return {\r\n        [propName]: node.value ? ast2jeon(node.value) : null\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitAwaitExpression(node: acorn.AwaitExpression, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        'await': ast2jeon(node.argument, options)\r\n    }\r\n}","import { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitJSXElement(node: any): any {\r\n    const openingElement = node.openingElement\r\n    const tagName = openingElement.name.name\r\n    const attributes: Record<string, any> = {}\r\n\r\n    // Process JSX attributes\r\n    for (const attr of openingElement.attributes) {\r\n        if (attr.type === 'JSXAttribute') {\r\n            const attrName = attr.name.name\r\n            const attrValue = attr.value ?\r\n                (attr.value.type === 'Literal' ? attr.value.value : ast2jeon(attr.value)) :\r\n                true\r\n            attributes[attrName] = attrValue\r\n        }\r\n    }\r\n\r\n    // Process children\r\n    const children = node.children\r\n        .filter((child: any) => child.type !== 'JSXText' || child.value.trim() !== '')\r\n        .map((child: any) => {\r\n            if (child.type === 'JSXText') {\r\n                return child.value.trim()\r\n            }\r\n            return ast2jeon(child)\r\n        })\r\n\r\n    // Add children to attributes if they exist\r\n    if (children.length > 0) {\r\n        attributes.children = children\r\n    }\r\n\r\n    return {\r\n        [`<${tagName}>`]: attributes\r\n    }\r\n}","import { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitJSXText(node: any): any {\r\n    return node.value.trim()\r\n}","import { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitJSXExpressionContainer(node: any): any {\r\n    // Handle JSX expressions like {processData}\r\n    if (node.expression.type === 'Identifier') {\r\n        return `@${node.expression.name}`\r\n    }\r\n    return ast2jeon(node.expression)\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitYieldExpression(node: acorn.YieldExpression, options?: { json?: typeof JSON }): any {\r\n    if (node.delegate) {\r\n        return {\r\n            'yield*': node.argument ? ast2jeon(node.argument, options) : null\r\n        }\r\n    } else {\r\n        return {\r\n            'yield': node.argument ? ast2jeon(node.argument, options) : null\r\n        }\r\n    }\r\n}","import * as acorn from 'acorn'\r\n\r\nexport function visitBreakStatement(node: acorn.BreakStatement, options?: { json?: typeof JSON }): any {\r\n    return {\r\n        'break': node.label ?\r\n            node.label.name :\r\n            null\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport { ast2jeon } from './ast2jeon'\r\n\r\nexport function visitTryStatement(node: acorn.TryStatement, options?: { json?: typeof JSON }): any {\r\n    const tryResult: any = {\r\n        'try': {\r\n            'body': Array.isArray(node.block.body) ?\r\n                node.block.body.map(stmt => ast2jeon(stmt, options)) :\r\n                [ast2jeon(node.block.body[0], options)]\r\n        }\r\n    }\r\n    if (node.handler) {\r\n        tryResult.try.catch = {\r\n            'param': node.handler.param ?\r\n                (node.handler.param as acorn.Identifier).name :\r\n                'error',\r\n            'body': Array.isArray(node.handler.body.body) ?\r\n                node.handler.body.body.map(stmt => ast2jeon(stmt, options)) :\r\n                [ast2jeon(node.handler.body.body[0], options)]\r\n        }\r\n    }\r\n    if (node.finalizer) {\r\n        tryResult.try.finally = Array.isArray(node.finalizer.body) ?\r\n            node.finalizer.body.map(stmt => ast2jeon(stmt, options)) :\r\n            [ast2jeon(node.finalizer.body[0], options)]\r\n    }\r\n    return tryResult\r\n}","// Registry mapping AST node types to visitor functions\r\nimport { visitBinaryExpression } from './binaryExpression'\r\nimport { visitUnaryExpression } from './unaryExpression'\r\nimport { visitProgram } from './program'\r\nimport { visitIdentifier } from './identifier'\r\nimport { visitLiteral } from './literal'\r\nimport { visitLogicalExpression } from './logicalExpression'\r\nimport { visitConditionalExpression } from './conditionalExpression'\r\nimport { visitCallExpression } from './callExpression'\r\nimport { visitMemberExpression } from './memberExpression'\r\nimport { visitArrayExpression } from './arrayExpression'\r\nimport { visitObjectExpression } from './objectExpression'\r\nimport { visitSpreadElement } from './spreadElement'\r\nimport { visitSwitchStatement } from './switchStatement'\r\nimport { visitExpressionStatement } from './expressionStatement'\r\nimport { visitNewExpression } from './newExpression'\r\nimport { visitFunctionDeclaration } from './functionDeclaration'\r\nimport { visitFunctionExpression } from './functionExpression'\r\nimport { visitArrowFunctionExpression } from './arrowFunctionExpression'\r\nimport { visitBlockStatement } from './blockStatement'\r\nimport { visitVariableDeclaration } from './variableDeclaration'\r\nimport { visitAssignmentExpression } from './assignmentExpression'\r\nimport { visitArrayPattern } from './arrayPattern'\r\nimport { visitObjectPattern } from './objectPattern'\r\nimport { visitUpdateExpression } from './updateExpression'\r\nimport { visitIfStatement } from './ifStatement'\r\nimport { visitWhileStatement } from './whileStatement'\r\nimport { visitForStatement } from './forStatement'\r\nimport { visitReturnStatement } from './returnStatement'\r\nimport { visitClassDeclaration } from './classDeclaration'\r\nimport { visitClassExpression } from './classExpression'\r\nimport { visitThisExpression } from './thisExpression'\r\nimport { visitMethodDefinition } from './methodDefinition'\r\nimport { visitPropertyDefinition } from './propertyDefinition'\r\nimport { visitAwaitExpression } from './awaitExpression'\r\nimport { visitJSXElement } from './jsxElement'\r\nimport { visitJSXText } from './jsxText'\r\nimport { visitJSXExpressionContainer } from './jsxExpressionContainer'\r\nimport { visitYieldExpression } from './yieldExpression'\r\nimport { visitBreakStatement } from './breakStatement'\r\nimport { visitTryStatement } from './tryStatement'\r\n\r\n// Create wrapper functions that pass options to visitors\r\nconst createVisitorWrapper = (visitor: (node: any, options?: { json?: typeof JSON }) => any) => {\r\n    return (node: any, options?: { json?: typeof JSON }) => {\r\n        return visitor(node, options)\r\n    }\r\n}\r\n\r\nexport const visitorRegistry: Record<string, (node: any, options?: { json?: typeof JSON }) => any> = {\r\n    'BinaryExpression': createVisitorWrapper(visitBinaryExpression),\r\n    'UnaryExpression': (node, options) => visitUnaryExpression(node, options),\r\n    'Program': (node, options) => visitProgram(node, options),\r\n    'Identifier': (node, options) => visitIdentifier(node, options),\r\n    'Literal': (node, options) => visitLiteral(node, options),\r\n    'LogicalExpression': (node, options) => visitLogicalExpression(node, options),\r\n    'ConditionalExpression': (node, options) => visitConditionalExpression(node, options),\r\n    'CallExpression': (node, options) => visitCallExpression(node, options),\r\n    'MemberExpression': (node, options) => visitMemberExpression(node, options),\r\n    'ArrayExpression': (node, options) => visitArrayExpression(node, options),\r\n    'ObjectExpression': (node, options) => visitObjectExpression(node, options),\r\n    'SpreadElement': (node, options) => visitSpreadElement(node, options),\r\n    'SwitchStatement': (node, options) => visitSwitchStatement(node, options),\r\n    'ExpressionStatement': (node, options) => visitExpressionStatement(node, options),\r\n    'NewExpression': (node, options) => visitNewExpression(node, options),\r\n    'FunctionDeclaration': (node, options) => visitFunctionDeclaration(node, options),\r\n    'FunctionExpression': (node, options) => visitFunctionExpression(node, options),\r\n    'ArrowFunctionExpression': (node, options) => visitArrowFunctionExpression(node, options),\r\n    'BlockStatement': (node, options) => visitBlockStatement(node, options),\r\n    'VariableDeclaration': (node, options) => visitVariableDeclaration(node, options),\r\n    'AssignmentExpression': (node, options) => visitAssignmentExpression(node, options),\r\n    'ArrayPattern': (node, options) => visitArrayPattern(node, options),\r\n    'ObjectPattern': (node, options) => visitObjectPattern(node, options),\r\n    'UpdateExpression': (node, options) => visitUpdateExpression(node, options),\r\n    'IfStatement': (node, options) => visitIfStatement(node, options),\r\n    'WhileStatement': (node, options) => visitWhileStatement(node, options),\r\n    'ForStatement': (node, options) => visitForStatement(node, options),\r\n    'ReturnStatement': (node, options) => visitReturnStatement(node, options),\r\n    'ClassDeclaration': (node, options) => visitClassDeclaration(node, options),\r\n    'ClassExpression': (node, options) => visitClassExpression(node, options),\r\n    'ThisExpression': (node, options) => visitThisExpression(node, options),\r\n    'MethodDefinition': (node, options) => visitMethodDefinition(node, options),\r\n    'PropertyDefinition': (node, options) => visitPropertyDefinition(node, options),\r\n    'AwaitExpression': (node, options) => visitAwaitExpression(node, options),\r\n    'JSXElement': (node, options) => visitJSXElement(node, options),\r\n    'JSXText': (node, options) => visitJSXText(node, options),\r\n    'JSXExpressionContainer': (node, options) => visitJSXExpressionContainer(node, options),\r\n    'YieldExpression': (node, options) => visitYieldExpression(node, options),\r\n    'BreakStatement': (node, options) => visitBreakStatement(node, options),\r\n    'TryStatement': (node, options) => visitTryStatement(node, options),\r\n}","import * as acorn from 'acorn'\r\nimport { visitorRegistry } from './registry'\r\n\r\n/**\r\n * Converts an AST node to JEON format\r\n * @param node The AST node to convert\r\n * @param options Conversion options\r\n * @param options.json The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function ast2jeon(node: acorn.Node, options?: { json?: typeof JSON }): any {\r\n    if (!node) return null\r\n\r\n    // Check if we have a visitor for this node type\r\n    const visitor = visitorRegistry[node.type]\r\n    if (visitor) {\r\n        // For visitors that support options, pass them\r\n        // Note: This would require updating all visitor functions to accept options\r\n        return visitor(node)\r\n    }\r\n\r\n    // Fallback to the original switch statement for unimplemented visitors\r\n    switch (node.type) {\r\n        case 'ExpressionStatement':\r\n            return ast2jeon((node as acorn.ExpressionStatement).expression, options)\r\n\r\n        case 'LogicalExpression':\r\n            return {\r\n                [(node as acorn.LogicalExpression).operator]: [\r\n                    ast2jeon((node as acorn.LogicalExpression).left, options),\r\n                    ast2jeon((node as acorn.LogicalExpression).right, options)\r\n                ]\r\n            }\r\n\r\n        case 'ConditionalExpression':\r\n            return {\r\n                '?': [\r\n                    ast2jeon((node as acorn.ConditionalExpression).test, options),\r\n                    ast2jeon((node as acorn.ConditionalExpression).consequent, options),\r\n                    ast2jeon((node as acorn.ConditionalExpression).alternate, options)\r\n                ]\r\n            }\r\n\r\n        case 'CallExpression':\r\n            // Check if it's a method call or function call\r\n            if ((node as acorn.CallExpression).callee.type === 'MemberExpression') {\r\n                // Method call - convert to JEON function execution format\r\n                const callee = (node as acorn.CallExpression).callee as acorn.MemberExpression\r\n                return {\r\n                    '()': [\r\n                        {\r\n                            '.': [\r\n                                ast2jeon(callee.object, options),\r\n                                callee.property.type === 'Identifier'\r\n                                    ? (callee.property as acorn.Identifier).name\r\n                                    : ''\r\n                            ]\r\n                        },\r\n                        ...(node as acorn.CallExpression).arguments.map(arg => ast2jeon(arg, options))\r\n                    ]\r\n                }\r\n            } else {\r\n                // Function call\r\n                const functionName = ((node as acorn.CallExpression).callee as acorn.Identifier).name\r\n                return {\r\n                    [`${functionName}()`]: (node as acorn.CallExpression).arguments.map(arg => ast2jeon(arg, options))\r\n                }\r\n            }\r\n\r\n        case 'NewExpression':\r\n            return {\r\n                'new': [\r\n                    ((node as acorn.NewExpression).callee as acorn.Identifier).name,\r\n                    ...(node as acorn.NewExpression).arguments.map(arg => ast2jeon(arg, options))\r\n                ]\r\n            }\r\n\r\n        case 'MemberExpression':\r\n            // Handle property chaining\r\n            const segments = []\r\n            let current = node as acorn.MemberExpression\r\n\r\n            // Collect all segments\r\n            while (current && current.type === 'MemberExpression') {\r\n                if (current.computed) {\r\n                    segments.unshift(ast2jeon(current.property, options))\r\n                } else {\r\n                    segments.unshift(\r\n                        current.property.type === 'Identifier'\r\n                            ? (current.property as acorn.Identifier).name\r\n                            : ''\r\n                    )\r\n                }\r\n                current = current.object as acorn.MemberExpression\r\n            }\r\n\r\n            // Add the base object\r\n            segments.unshift(ast2jeon(current, options))\r\n\r\n            return {\r\n                '.': segments\r\n            }\r\n\r\n        case 'ArrayExpression':\r\n            return (node as acorn.ArrayExpression).elements\r\n                .filter(element => element !== null)\r\n                .map(element => ast2jeon(element!, options))\r\n\r\n        case 'ObjectExpression':\r\n            const obj: Record<string, any> = {}\r\n            let spreadIndex = 0\r\n            for (const prop of (node as acorn.ObjectExpression).properties) {\r\n                if (prop.type === 'Property') {\r\n                    const key = prop.key.type === 'Identifier' ? (prop.key as acorn.Identifier).name : (prop.key as acorn.Literal).value as string\r\n                    obj[key] = ast2jeon(prop.value, options)\r\n                } else if (prop.type === 'SpreadElement') {\r\n                    // Handle spread operator\r\n                    // For multiple spread elements, we need to create a unique key\r\n                    const spreadKey = spreadIndex === 0 ? '...' : `...${spreadIndex}`\r\n                    obj[spreadKey] = ast2jeon((prop as acorn.SpreadElement).argument, options)\r\n                    spreadIndex++\r\n                }\r\n            }\r\n            return obj\r\n\r\n        case 'SpreadElement':\r\n            return {\r\n                '...': ast2jeon((node as acorn.SpreadElement).argument, options)\r\n            }\r\n\r\n        case 'FunctionDeclaration':\r\n        case 'FunctionExpression':\r\n        case 'ArrowFunctionExpression':\r\n            const funcNode = node as acorn.Function\r\n            const params = funcNode.params.map((param: acorn.Node) => {\r\n                if (param.type === 'Identifier') {\r\n                    return (param as acorn.Identifier).name\r\n                }\r\n                return ast2jeon(param, options)\r\n            })\r\n\r\n            // Handle async functions\r\n            const isAsync = funcNode.async ? 'async ' : ''\r\n\r\n            // Handle generator functions\r\n            const isGenerator = funcNode.generator ? '*' : ''\r\n\r\n            if (node.type === 'ArrowFunctionExpression') {\r\n                const paramStr = params.length > 0 ? `(${params.join(', ')})` : '()'\r\n                const prefix = funcNode.async ? 'async ' : ''\r\n                return {\r\n                    [`${prefix}${paramStr} =>`]: ast2jeon(funcNode.body, options)\r\n                }\r\n            } else {\r\n                const functionName = funcNode.id ? ` ${(funcNode.id as acorn.Identifier).name}` : ''\r\n                const paramStr = params.length > 0 ? `(${params.join(', ')})` : '()'\r\n                const functionType = isAsync ? `${isAsync}function${isGenerator}` : `function${isGenerator}`\r\n                // For function body, we need to check if it's a BlockStatement\r\n                if (funcNode.body.type === 'BlockStatement') {\r\n                    const blockBody = funcNode.body as acorn.BlockStatement\r\n                    return {\r\n                        [`${functionType}${functionName}${paramStr}`]: Array.isArray(blockBody.body) ?\r\n                            blockBody.body.map(stmt => ast2jeon(stmt, options)) :\r\n                            [ast2jeon(blockBody.body[0], options)]\r\n                    }\r\n                } else {\r\n                    return {\r\n                        [`${functionType}${functionName}${paramStr}`]: [ast2jeon(funcNode.body, options)]\r\n                    }\r\n                }\r\n            }\r\n\r\n        case 'BlockStatement':\r\n            if ((node as acorn.BlockStatement).body.length === 1) {\r\n                return ast2jeon((node as acorn.BlockStatement).body[0], options)\r\n            }\r\n            return (node as acorn.BlockStatement).body.map(stmt => ast2jeon(stmt, options))\r\n\r\n        case 'VariableDeclaration':\r\n            // Use different keys based on declaration kind\r\n            const key = (node as acorn.VariableDeclaration).kind === 'const' ? '@@' : '@'\r\n            const declarations: Record<string, any> = {}\r\n            for (const decl of (node as acorn.VariableDeclaration).declarations) {\r\n                if (decl.id.type === 'Identifier') {\r\n                    declarations[(decl.id as acorn.Identifier).name] = decl.init ? ast2jeon(decl.init, options) : null\r\n                }\r\n            }\r\n            return {\r\n                [key]: declarations\r\n            }\r\n\r\n        case 'AssignmentExpression':\r\n            if ((node as acorn.AssignmentExpression).operator === '=') {\r\n                // Check if this is destructuring assignment\r\n                if ((node as acorn.AssignmentExpression).left.type === 'ArrayPattern' || (node as acorn.AssignmentExpression).left.type === 'ObjectPattern') {\r\n                    return {\r\n                        '=': [\r\n                            `[${(node as acorn.AssignmentExpression).left.type}]`,\r\n                            ast2jeon((node as acorn.AssignmentExpression).right, options)\r\n                        ]\r\n                    }\r\n                }\r\n                return {\r\n                    '=': [\r\n                        ast2jeon((node as acorn.AssignmentExpression).left, options),\r\n                        ast2jeon((node as acorn.AssignmentExpression).right, options)\r\n                    ]\r\n                }\r\n            }\r\n            // Handle other assignment operators\r\n            return {\r\n                [(node as acorn.AssignmentExpression).operator]: [\r\n                    ast2jeon((node as acorn.AssignmentExpression).left, options),\r\n                    ast2jeon((node as acorn.AssignmentExpression).right, options)\r\n                ]\r\n            }\r\n\r\n        case 'UpdateExpression':\r\n            return {\r\n                [(node as acorn.UpdateExpression).operator]: ast2jeon((node as acorn.UpdateExpression).argument, options)\r\n            }\r\n\r\n        case 'UnaryExpression':\r\n            return {\r\n                [(node as acorn.UnaryExpression).operator]: ast2jeon((node as acorn.UnaryExpression).argument, options)\r\n            }\r\n\r\n        case 'BinaryExpression':\r\n            return {\r\n                [(node as acorn.BinaryExpression).operator]: [\r\n                    ast2jeon((node as acorn.BinaryExpression).left, options),\r\n                    ast2jeon((node as acorn.BinaryExpression).right, options)\r\n                ]\r\n            }\r\n\r\n        case 'IfStatement':\r\n            const ifStmt = node as acorn.IfStatement\r\n            const result: any = {\r\n                'if': [\r\n                    ast2jeon(ifStmt.test, options),\r\n                    ast2jeon(ifStmt.consequent, options)\r\n                ]\r\n            }\r\n            if (ifStmt.alternate) {\r\n                result['if'][2] = ast2jeon(ifStmt.alternate, options)\r\n            }\r\n            return result\r\n\r\n        case 'WhileStatement':\r\n            return {\r\n                'while': [\r\n                    ast2jeon((node as acorn.WhileStatement).test, options),\r\n                    ast2jeon((node as acorn.WhileStatement).body, options)\r\n                ]\r\n            }\r\n\r\n        case 'ForStatement':\r\n            const forStmt = node as acorn.ForStatement\r\n            return {\r\n                'for': [\r\n                    forStmt.init ? ast2jeon(forStmt.init, options) : null,\r\n                    forStmt.test ? ast2jeon(forStmt.test, options) : null,\r\n                    forStmt.update ? ast2jeon(forStmt.update, options) : null,\r\n                    ast2jeon(forStmt.body, options)\r\n                ]\r\n            }\r\n\r\n        case 'ReturnStatement':\r\n            return {\r\n                'return': (node as acorn.ReturnStatement).argument ?\r\n                    ast2jeon((node as acorn.ReturnStatement).argument!, options) :\r\n                    null\r\n            }\r\n\r\n        case 'Identifier':\r\n            return `@${(node as acorn.Identifier).name}`\r\n\r\n        case 'Literal':\r\n            return (node as acorn.Literal).value\r\n\r\n        case 'ThisExpression':\r\n            return '@this'\r\n\r\n        case 'AwaitExpression':\r\n            return {\r\n                'await': ast2jeon((node as acorn.AwaitExpression).argument, options)\r\n            }\r\n\r\n        case 'YieldExpression':\r\n            const yieldExpr = node as acorn.YieldExpression\r\n            if (yieldExpr.delegate) {\r\n                return {\r\n                    'yield*': yieldExpr.argument ? ast2jeon(yieldExpr.argument, options) : null\r\n                }\r\n            } else {\r\n                return {\r\n                    'yield': yieldExpr.argument ? ast2jeon(yieldExpr.argument, options) : null\r\n                }\r\n            }\r\n\r\n        case 'BreakStatement':\r\n            return {\r\n                'break': (node as acorn.BreakStatement).label ?\r\n                    (node as acorn.BreakStatement).label!.name :\r\n                    null\r\n            }\r\n\r\n        case 'ContinueStatement':\r\n            return {\r\n                'continue': (node as acorn.ContinueStatement).label ?\r\n                    (node as acorn.ContinueStatement).label!.name :\r\n                    null\r\n            }\r\n\r\n        case 'SwitchStatement':\r\n            const switchStmt = node as acorn.SwitchStatement\r\n            const cases = switchStmt.cases.map(caseClause => {\r\n                if (caseClause.test) {\r\n                    return {\r\n                        'case': ast2jeon(caseClause.test, options),\r\n                        'body': caseClause.consequent.map(consequent => ast2jeon(consequent, options))\r\n                    }\r\n                } else {\r\n                    return {\r\n                        'default': caseClause.consequent.map(consequent => ast2jeon(consequent, options))\r\n                    }\r\n                }\r\n            })\r\n            return {\r\n                'switch': [\r\n                    ast2jeon(switchStmt.discriminant, options),\r\n                    cases\r\n                ]\r\n            }\r\n\r\n        case 'TryStatement':\r\n            const tryStmt = node as acorn.TryStatement\r\n            const tryResult: any = {\r\n                'try': {\r\n                    'body': Array.isArray(tryStmt.block.body) ?\r\n                        tryStmt.block.body.map(stmt => ast2jeon(stmt, options)) :\r\n                        [ast2jeon(tryStmt.block.body[0], options)]\r\n                }\r\n            }\r\n            if (tryStmt.handler) {\r\n                tryResult.try.catch = {\r\n                    'param': tryStmt.handler.param ?\r\n                        (tryStmt.handler.param as acorn.Identifier).name :\r\n                        'error',\r\n                    'body': Array.isArray(tryStmt.handler.body.body) ?\r\n                        tryStmt.handler.body.body.map(stmt => ast2jeon(stmt, options)) :\r\n                        [ast2jeon(tryStmt.handler.body.body[0], options)]\r\n                }\r\n            }\r\n            if (tryStmt.finalizer) {\r\n                tryResult.try.finally = Array.isArray(tryStmt.finalizer.body) ?\r\n                    tryStmt.finalizer.body.map(stmt => ast2jeon(stmt, options)) :\r\n                    [ast2jeon(tryStmt.finalizer.body[0], options)]\r\n            }\r\n            return tryResult\r\n\r\n        case 'ThrowStatement':\r\n            return {\r\n                'throw': ast2jeon((node as acorn.ThrowStatement).argument, options)\r\n            }\r\n\r\n        case 'Program':\r\n            if ((node as acorn.Program).body.length === 1) {\r\n                return ast2jeon((node as acorn.Program).body[0], options)\r\n            }\r\n            return (node as acorn.Program).body.map(stmt => ast2jeon(stmt, options))\r\n\r\n        default:\r\n            // For unhandled node types, return a placeholder\r\n            return `[${node.type}]`\r\n    }\r\n}","import * as acorn from 'acorn'\r\nimport jsx from 'acorn-jsx'\r\nimport { ast2jeon } from './js2jeon.visitors/ast2jeon'\r\n\r\n/**\r\n * Converts JavaScript code to JEON (JSON-based Executable Object Notation)\r\n * @param code The JavaScript code to convert\r\n * @param options Conversion options\r\n * @param options.json The JSON implementation to use (JSON or JSON5)\r\n */\r\nexport function js2jeon(code: string, options?: { json?: typeof JSON }): any {\r\n    try {\r\n        // Parse the TypeScript/JavaScript code using Acorn with JSX support\r\n        const Parser = acorn.Parser.extend(jsx())\r\n        const ast = Parser.parse(code, {\r\n            ecmaVersion: 'latest',\r\n            sourceType: 'module',\r\n            allowReturnOutsideFunction: true\r\n        })\r\n\r\n        // Convert AST to JEON\r\n        return ast2jeon(ast, options)\r\n    } catch (error: any) {\r\n        console.error('Error parsing TypeScript/JavaScript code:', error)\r\n        // Return error message in JEON format instead of null\r\n        return {\r\n            \"error\": `Parsing Error: ${error.message}`\r\n        }\r\n    }\r\n}","// This is a generated file. Do not edit.\nvar Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\nvar ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\nvar ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nvar unicode = {\n\tSpace_Separator: Space_Separator,\n\tID_Start: ID_Start,\n\tID_Continue: ID_Continue\n};\n\nvar util = {\n    isSpaceSeparator (c) {\n        return typeof c === 'string' && unicode.Space_Separator.test(c)\n    },\n\n    isIdStartChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c === '$') || (c === '_') ||\n        unicode.ID_Start.test(c)\n        )\n    },\n\n    isIdContinueChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        (c === '$') || (c === '_') ||\n        (c === '\\u200C') || (c === '\\u200D') ||\n        unicode.ID_Continue.test(c)\n        )\n    },\n\n    isDigit (c) {\n        return typeof c === 'string' && /[0-9]/.test(c)\n    },\n\n    isHexDigit (c) {\n        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n    },\n};\n\nlet source;\nlet parseState;\nlet stack;\nlet pos;\nlet line;\nlet column;\nlet token;\nlet key;\nlet root;\n\nvar parse = function parse (text, reviver) {\n    source = String(text);\n    parseState = 'start';\n    stack = [];\n    pos = 0;\n    line = 1;\n    column = 0;\n    token = undefined;\n    key = undefined;\n    root = undefined;\n\n    do {\n        token = lex();\n\n        // This code is unreachable.\n        // if (!parseStates[parseState]) {\n        //     throw invalidParseState()\n        // }\n\n        parseStates[parseState]();\n    } while (token.type !== 'eof')\n\n    if (typeof reviver === 'function') {\n        return internalize({'': root}, '', reviver)\n    }\n\n    return root\n};\n\nfunction internalize (holder, name, reviver) {\n    const value = holder[name];\n    if (value != null && typeof value === 'object') {\n        if (Array.isArray(value)) {\n            for (let i = 0; i < value.length; i++) {\n                const key = String(i);\n                const replacement = internalize(value, key, reviver);\n                if (replacement === undefined) {\n                    delete value[key];\n                } else {\n                    Object.defineProperty(value, key, {\n                        value: replacement,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true,\n                    });\n                }\n            }\n        } else {\n            for (const key in value) {\n                const replacement = internalize(value, key, reviver);\n                if (replacement === undefined) {\n                    delete value[key];\n                } else {\n                    Object.defineProperty(value, key, {\n                        value: replacement,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true,\n                    });\n                }\n            }\n        }\n    }\n\n    return reviver.call(holder, name, value)\n}\n\nlet lexState;\nlet buffer;\nlet doubleQuote;\nlet sign;\nlet c;\n\nfunction lex () {\n    lexState = 'default';\n    buffer = '';\n    doubleQuote = false;\n    sign = 1;\n\n    for (;;) {\n        c = peek();\n\n        // This code is unreachable.\n        // if (!lexStates[lexState]) {\n        //     throw invalidLexState(lexState)\n        // }\n\n        const token = lexStates[lexState]();\n        if (token) {\n            return token\n        }\n    }\n}\n\nfunction peek () {\n    if (source[pos]) {\n        return String.fromCodePoint(source.codePointAt(pos))\n    }\n}\n\nfunction read () {\n    const c = peek();\n\n    if (c === '\\n') {\n        line++;\n        column = 0;\n    } else if (c) {\n        column += c.length;\n    } else {\n        column++;\n    }\n\n    if (c) {\n        pos += c.length;\n    }\n\n    return c\n}\n\nconst lexStates = {\n    default () {\n        switch (c) {\n        case '\\t':\n        case '\\v':\n        case '\\f':\n        case ' ':\n        case '\\u00A0':\n        case '\\uFEFF':\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'comment';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        if (util.isSpaceSeparator(c)) {\n            read();\n            return\n        }\n\n        // This code is unreachable.\n        // if (!lexStates[parseState]) {\n        //     throw invalidLexState(parseState)\n        // }\n\n        return lexStates[parseState]()\n    },\n\n    comment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineComment';\n            return\n\n        case '/':\n            read();\n            lexState = 'singleLineComment';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    multiLineComment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineCommentAsterisk';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n    },\n\n    multiLineCommentAsterisk () {\n        switch (c) {\n        case '*':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n        lexState = 'multiLineComment';\n    },\n\n    singleLineComment () {\n        switch (c) {\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        read();\n    },\n\n    value () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        case 'n':\n            read();\n            literal('ull');\n            return newToken('null', null)\n\n        case 't':\n            read();\n            literal('rue');\n            return newToken('boolean', true)\n\n        case 'f':\n            read();\n            literal('alse');\n            return newToken('boolean', false)\n\n        case '-':\n        case '+':\n            if (read() === '-') {\n                sign = -1;\n            }\n\n            lexState = 'sign';\n            return\n\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            buffer = '';\n            lexState = 'string';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    identifierNameStartEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n            break\n\n        default:\n            if (!util.isIdStartChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    identifierName () {\n        switch (c) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            buffer += read();\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameEscape';\n            return\n        }\n\n        if (util.isIdContinueChar(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('identifier', buffer)\n    },\n\n    identifierNameEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            break\n\n        default:\n            if (!util.isIdContinueChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    sign () {\n        switch (c) {\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', sign * Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n        }\n\n        throw invalidChar(read())\n    },\n\n    zero () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n\n        case 'x':\n        case 'X':\n            buffer += read();\n            lexState = 'hexadecimal';\n            return\n        }\n\n        return newToken('numeric', sign * 0)\n    },\n\n    decimalInteger () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalPointLeading () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalPoint () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalFraction () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalExponent () {\n        switch (c) {\n        case '+':\n        case '-':\n            buffer += read();\n            lexState = 'decimalExponentSign';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentSign () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentInteger () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    hexadecimal () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            lexState = 'hexadecimalInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    hexadecimalInteger () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    string () {\n        switch (c) {\n        case '\\\\':\n            read();\n            buffer += escape();\n            return\n\n        case '\"':\n            if (doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case \"'\":\n            if (!doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case '\\n':\n        case '\\r':\n            throw invalidChar(read())\n\n        case '\\u2028':\n        case '\\u2029':\n            separatorChar(c);\n            break\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    },\n\n    start () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        // This code is unreachable since the default lexState handles eof.\n        // case undefined:\n        //     return newToken('eof')\n        }\n\n        lexState = 'value';\n    },\n\n    beforePropertyName () {\n        switch (c) {\n        case '$':\n        case '_':\n            buffer = read();\n            lexState = 'identifierName';\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameStartEscape';\n            return\n\n        case '}':\n            return newToken('punctuator', read())\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            lexState = 'string';\n            return\n        }\n\n        if (util.isIdStartChar(c)) {\n            buffer += read();\n            lexState = 'identifierName';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    afterPropertyName () {\n        if (c === ':') {\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforePropertyValue () {\n        lexState = 'value';\n    },\n\n    afterPropertyValue () {\n        switch (c) {\n        case ',':\n        case '}':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforeArrayValue () {\n        if (c === ']') {\n            return newToken('punctuator', read())\n        }\n\n        lexState = 'value';\n    },\n\n    afterArrayValue () {\n        switch (c) {\n        case ',':\n        case ']':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the default lexState.\n        // if (c === undefined) {\n        //     read()\n        //     return newToken('eof')\n        // }\n\n        throw invalidChar(read())\n    },\n};\n\nfunction newToken (type, value) {\n    return {\n        type,\n        value,\n        line,\n        column,\n    }\n}\n\nfunction literal (s) {\n    for (const c of s) {\n        const p = peek();\n\n        if (p !== c) {\n            throw invalidChar(read())\n        }\n\n        read();\n    }\n}\n\nfunction escape () {\n    const c = peek();\n    switch (c) {\n    case 'b':\n        read();\n        return '\\b'\n\n    case 'f':\n        read();\n        return '\\f'\n\n    case 'n':\n        read();\n        return '\\n'\n\n    case 'r':\n        read();\n        return '\\r'\n\n    case 't':\n        read();\n        return '\\t'\n\n    case 'v':\n        read();\n        return '\\v'\n\n    case '0':\n        read();\n        if (util.isDigit(peek())) {\n            throw invalidChar(read())\n        }\n\n        return '\\0'\n\n    case 'x':\n        read();\n        return hexEscape()\n\n    case 'u':\n        read();\n        return unicodeEscape()\n\n    case '\\n':\n    case '\\u2028':\n    case '\\u2029':\n        read();\n        return ''\n\n    case '\\r':\n        read();\n        if (peek() === '\\n') {\n            read();\n        }\n\n        return ''\n\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n        throw invalidChar(read())\n\n    case undefined:\n        throw invalidChar(read())\n    }\n\n    return read()\n}\n\nfunction hexEscape () {\n    let buffer = '';\n    let c = peek();\n\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    c = peek();\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nfunction unicodeEscape () {\n    let buffer = '';\n    let count = 4;\n\n    while (count-- > 0) {\n        const c = peek();\n        if (!util.isHexDigit(c)) {\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    }\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nconst parseStates = {\n    start () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforePropertyName () {\n        switch (token.type) {\n        case 'identifier':\n        case 'string':\n            key = token.value;\n            parseState = 'afterPropertyName';\n            return\n\n        case 'punctuator':\n            // This code is unreachable since it's handled by the lexState.\n            // if (token.value !== '}') {\n            //     throw invalidToken()\n            // }\n\n            pop();\n            return\n\n        case 'eof':\n            throw invalidEOF()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterPropertyName () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator' || token.value !== ':') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        parseState = 'beforePropertyValue';\n    },\n\n    beforePropertyValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforeArrayValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        if (token.type === 'punctuator' && token.value === ']') {\n            pop();\n            return\n        }\n\n        push();\n    },\n\n    afterPropertyValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforePropertyName';\n            return\n\n        case '}':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterArrayValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforeArrayValue';\n            return\n\n        case ']':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'eof') {\n        //     throw invalidToken()\n        // }\n    },\n};\n\nfunction push () {\n    let value;\n\n    switch (token.type) {\n    case 'punctuator':\n        switch (token.value) {\n        case '{':\n            value = {};\n            break\n\n        case '[':\n            value = [];\n            break\n        }\n\n        break\n\n    case 'null':\n    case 'boolean':\n    case 'numeric':\n    case 'string':\n        value = token.value;\n        break\n\n    // This code is unreachable.\n    // default:\n    //     throw invalidToken()\n    }\n\n    if (root === undefined) {\n        root = value;\n    } else {\n        const parent = stack[stack.length - 1];\n        if (Array.isArray(parent)) {\n            parent.push(value);\n        } else {\n            Object.defineProperty(parent, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true,\n            });\n        }\n    }\n\n    if (value !== null && typeof value === 'object') {\n        stack.push(value);\n\n        if (Array.isArray(value)) {\n            parseState = 'beforeArrayValue';\n        } else {\n            parseState = 'beforePropertyName';\n        }\n    } else {\n        const current = stack[stack.length - 1];\n        if (current == null) {\n            parseState = 'end';\n        } else if (Array.isArray(current)) {\n            parseState = 'afterArrayValue';\n        } else {\n            parseState = 'afterPropertyValue';\n        }\n    }\n}\n\nfunction pop () {\n    stack.pop();\n\n    const current = stack[stack.length - 1];\n    if (current == null) {\n        parseState = 'end';\n    } else if (Array.isArray(current)) {\n        parseState = 'afterArrayValue';\n    } else {\n        parseState = 'afterPropertyValue';\n    }\n}\n\n// This code is unreachable.\n// function invalidParseState () {\n//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n// }\n\n// This code is unreachable.\n// function invalidLexState (state) {\n//     return new Error(`JSON5: invalid lex state '${state}'`)\n// }\n\nfunction invalidChar (c) {\n    if (c === undefined) {\n        return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n    }\n\n    return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n}\n\nfunction invalidEOF () {\n    return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n}\n\n// This code is unreachable.\n// function invalidToken () {\n//     if (token.type === 'eof') {\n//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n//     }\n\n//     const c = String.fromCodePoint(token.value.codePointAt(0))\n//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n// }\n\nfunction invalidIdentifier () {\n    column -= 5;\n    return syntaxError(`JSON5: invalid identifier character at ${line}:${column}`)\n}\n\nfunction separatorChar (c) {\n    console.warn(`JSON5: '${formatChar(c)}' in strings is not valid ECMAScript; consider escaping`);\n}\n\nfunction formatChar (c) {\n    const replacements = {\n        \"'\": \"\\\\'\",\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\',\n        '\\b': '\\\\b',\n        '\\f': '\\\\f',\n        '\\n': '\\\\n',\n        '\\r': '\\\\r',\n        '\\t': '\\\\t',\n        '\\v': '\\\\v',\n        '\\0': '\\\\0',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n\n    if (replacements[c]) {\n        return replacements[c]\n    }\n\n    if (c < ' ') {\n        const hexString = c.charCodeAt(0).toString(16);\n        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n    }\n\n    return c\n}\n\nfunction syntaxError (message) {\n    const err = new SyntaxError(message);\n    err.lineNumber = line;\n    err.columnNumber = column;\n    return err\n}\n\nvar stringify = function stringify (value, replacer, space) {\n    const stack = [];\n    let indent = '';\n    let propertyList;\n    let replacerFunc;\n    let gap = '';\n    let quote;\n\n    if (\n        replacer != null &&\n        typeof replacer === 'object' &&\n        !Array.isArray(replacer)\n    ) {\n        space = replacer.space;\n        quote = replacer.quote;\n        replacer = replacer.replacer;\n    }\n\n    if (typeof replacer === 'function') {\n        replacerFunc = replacer;\n    } else if (Array.isArray(replacer)) {\n        propertyList = [];\n        for (const v of replacer) {\n            let item;\n\n            if (typeof v === 'string') {\n                item = v;\n            } else if (\n                typeof v === 'number' ||\n                v instanceof String ||\n                v instanceof Number\n            ) {\n                item = String(v);\n            }\n\n            if (item !== undefined && propertyList.indexOf(item) < 0) {\n                propertyList.push(item);\n            }\n        }\n    }\n\n    if (space instanceof Number) {\n        space = Number(space);\n    } else if (space instanceof String) {\n        space = String(space);\n    }\n\n    if (typeof space === 'number') {\n        if (space > 0) {\n            space = Math.min(10, Math.floor(space));\n            gap = '          '.substr(0, space);\n        }\n    } else if (typeof space === 'string') {\n        gap = space.substr(0, 10);\n    }\n\n    return serializeProperty('', {'': value})\n\n    function serializeProperty (key, holder) {\n        let value = holder[key];\n        if (value != null) {\n            if (typeof value.toJSON5 === 'function') {\n                value = value.toJSON5(key);\n            } else if (typeof value.toJSON === 'function') {\n                value = value.toJSON(key);\n            }\n        }\n\n        if (replacerFunc) {\n            value = replacerFunc.call(holder, key, value);\n        }\n\n        if (value instanceof Number) {\n            value = Number(value);\n        } else if (value instanceof String) {\n            value = String(value);\n        } else if (value instanceof Boolean) {\n            value = value.valueOf();\n        }\n\n        switch (value) {\n        case null: return 'null'\n        case true: return 'true'\n        case false: return 'false'\n        }\n\n        if (typeof value === 'string') {\n            return quoteString(value, false)\n        }\n\n        if (typeof value === 'number') {\n            return String(value)\n        }\n\n        if (typeof value === 'object') {\n            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n        }\n\n        return undefined\n    }\n\n    function quoteString (value) {\n        const quotes = {\n            \"'\": 0.1,\n            '\"': 0.2,\n        };\n\n        const replacements = {\n            \"'\": \"\\\\'\",\n            '\"': '\\\\\"',\n            '\\\\': '\\\\\\\\',\n            '\\b': '\\\\b',\n            '\\f': '\\\\f',\n            '\\n': '\\\\n',\n            '\\r': '\\\\r',\n            '\\t': '\\\\t',\n            '\\v': '\\\\v',\n            '\\0': '\\\\0',\n            '\\u2028': '\\\\u2028',\n            '\\u2029': '\\\\u2029',\n        };\n\n        let product = '';\n\n        for (let i = 0; i < value.length; i++) {\n            const c = value[i];\n            switch (c) {\n            case \"'\":\n            case '\"':\n                quotes[c]++;\n                product += c;\n                continue\n\n            case '\\0':\n                if (util.isDigit(value[i + 1])) {\n                    product += '\\\\x00';\n                    continue\n                }\n            }\n\n            if (replacements[c]) {\n                product += replacements[c];\n                continue\n            }\n\n            if (c < ' ') {\n                let hexString = c.charCodeAt(0).toString(16);\n                product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n                continue\n            }\n\n            product += c;\n        }\n\n        const quoteChar = quote || Object.keys(quotes).reduce((a, b) => (quotes[a] < quotes[b]) ? a : b);\n\n        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n\n        return quoteChar + product + quoteChar\n    }\n\n    function serializeObject (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let keys = propertyList || Object.keys(value);\n        let partial = [];\n        for (const key of keys) {\n            const propertyString = serializeProperty(key, value);\n            if (propertyString !== undefined) {\n                let member = serializeKey(key) + ':';\n                if (gap !== '') {\n                    member += ' ';\n                }\n                member += propertyString;\n                partial.push(member);\n            }\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '{}';\n        } else {\n            let properties;\n            if (gap === '') {\n                properties = partial.join(',');\n                final = '{' + properties + '}';\n            } else {\n                let separator = ',\\n' + indent;\n                properties = partial.join(separator);\n                final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n\n    function serializeKey (key) {\n        if (key.length === 0) {\n            return quoteString(key, true)\n        }\n\n        const firstChar = String.fromCodePoint(key.codePointAt(0));\n        if (!util.isIdStartChar(firstChar)) {\n            return quoteString(key, true)\n        }\n\n        for (let i = firstChar.length; i < key.length; i++) {\n            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n                return quoteString(key, true)\n            }\n        }\n\n        return key\n    }\n\n    function serializeArray (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let partial = [];\n        for (let i = 0; i < value.length; i++) {\n            const propertyString = serializeProperty(String(i), value);\n            partial.push((propertyString !== undefined) ? propertyString : 'null');\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '[]';\n        } else {\n            if (gap === '') {\n                let properties = partial.join(',');\n                final = '[' + properties + ']';\n            } else {\n                let separator = ',\\n' + indent;\n                let properties = partial.join(separator);\n                final = '[\\n' + indent + properties + ',\\n' + stepback + ']';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n};\n\nconst JSON5 = {\n    parse,\n    stringify,\n};\n\nvar lib = JSON5;\n\nexport default lib;\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (document.currentScript && document.currentScript.tagName === 'SCRIPT' && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","(function (Prism) {\n\n\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: null // see below\n\t\t},\n\t\t'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/,\n\t});\n\n\t// The keywords TypeScript adds to JavaScript\n\tPrism.languages.typescript.keyword.push(\n\t\t/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n\t\t// keywords that have to be followed by an identifier\n\t\t/\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n\t\t// This is for `import type *, {}`\n\t\t/\\btype\\b(?=\\s*(?:[\\{*]|$))/\n\t);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.typescript['parameter'];\n\tdelete Prism.languages.typescript['literal-property'];\n\n\t// a version of typescript specifically for highlighting types\n\tvar typeInside = Prism.languages.extend('typescript', {});\n\tdelete typeInside['class-name'];\n\n\tPrism.languages.typescript['class-name'].inside = typeInside;\n\n\tPrism.languages.insertBefore('typescript', 'function', {\n\t\t'decorator': {\n\t\t\tpattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t\t\tinside: {\n\t\t\t\t'at': {\n\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'function': /^[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'generic-function': {\n\t\t\t// e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/, // everything after the first <\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.ts = Prism.languages.typescript;\n\n}(Prism));\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","// https://www.json.org/json-en.html\nPrism.languages.json = {\n\t'property': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'comment': {\n\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n\t'punctuation': /[{}[\\],]/,\n\t'operator': /:/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t}\n};\n\nPrism.languages.webmanifest = Prism.languages.json;\n","import './index.css'\r\nimport { $, $$, render } from 'woby'\r\nimport { jeon2js } from './jeon2js'\r\nimport { js2jeon } from './js2jeon'\r\nimport JSON5 from 'json5'\r\n// Import PrismJS for syntax highlighting\r\nimport Prism from 'prismjs'\r\nimport 'prismjs/themes/prism.css'\r\n// Import language components for syntax highlighting\r\nimport 'prismjs/components/prism-typescript'\r\nimport 'prismjs/components/prism-javascript'\r\nimport 'prismjs/components/prism-json'\r\n\r\n// Add CSS for collapsible functionality and editable divs\r\nconst customCSS = `\r\n.collapsible-code {\r\n    margin: 1rem 0;\r\n}\r\n\r\n.collapsible-btn {\r\n    background: none;\r\n    border: none;\r\n    padding: 0.5rem 1rem;\r\n    cursor: pointer;\r\n    text-align: left;\r\n    width: 100%;\r\n    border-radius: 0.5rem;\r\n}\r\n\r\n.collapsible-btn:hover {\r\n    background-color: #f3f4f6;\r\n}\r\n\r\n.collapsible-content {\r\n    margin-top: 0.5rem;\r\n}\r\n\r\n.collapsible-content.show {\r\n    display: block;\r\n}\r\n\r\n.collapsible-content.hidden {\r\n    display: none;\r\n}\r\n\r\n/* Styles for editable divs to look like textareas */\r\n.editable-div {\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    padding: 0.75rem;\r\n    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\r\n    font-size: 0.875rem;\r\n    resize: vertical;\r\n    overflow: auto;\r\n    background-color: white;\r\n    min-height: 200px;\r\n    outline: none;\r\n    white-space: pre;\r\n}\r\n\r\n.editable-div:focus {\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);\r\n}\r\n\r\n.output-div {\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    padding: 0.75rem;\r\n    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\r\n    font-size: 0.875rem;\r\n    resize: vertical;\r\n    overflow: auto;\r\n    background-color: #f9fafb;\r\n    min-height: 200px;\r\n    white-space: pre;\r\n}\r\n`\r\n\r\n// Inject CSS into the document\r\nconst style = document.createElement('style')\r\nstyle.textContent = customCSS\r\ndocument.head.appendChild(style)\r\n\r\nconst App = () => {\r\n  const jeonInput = $(`{\r\n  \"function(a, b)\": [\r\n    { \"return\": { \"+\": [\"@a\", \"@b\"] } }\r\n  ]\r\n}`)\r\n  const tsInput = $('function sum(a, b) {\\n  return a + b;\\n}')\r\n  const tsOutput = $('')\r\n  const jeonOutput = $('')\r\n  const useJSON5 = $(false)\r\n\r\n  // Function to highlight code blocks with PrismJS\r\n  const highlightCodeBlocks = () => {\r\n    // Use setTimeout to ensure DOM is updated before highlighting\r\n    setTimeout(() => {\r\n      Prism.highlightAll()\r\n      // Initialize collapsible functionality after Prism highlighting\r\n      initCollapsible()\r\n    }, 0)\r\n  }\r\n\r\n  // Function to handle input changes with syntax highlighting\r\n  const handleJeonInput = (e: any) => {\r\n    const value = e.target.textContent || e.target.innerText\r\n    jeonInput(value)\r\n  }\r\n\r\n  const handleTsInput = (e: any) => {\r\n    const value = e.target.textContent || e.target.innerText\r\n    tsInput(value)\r\n  }\r\n\r\n  // Update highlighting when outputs change\r\n  const updateOutputHighlighting = () => {\r\n    setTimeout(() => {\r\n      const tsElement = document.getElementById('ts-output-code')\r\n      if (tsElement && $$(tsOutput)) {\r\n        try {\r\n          tsElement.innerHTML = Prism.highlight($$(tsOutput), Prism.languages.typescript, 'typescript')\r\n        } catch (e) {\r\n          // Fallback to plain text if highlighting fails\r\n          tsElement.textContent = $$(tsOutput)\r\n        }\r\n      }\r\n\r\n      const jeonElement = document.getElementById('jeon-output-code')\r\n      if (jeonElement && $$(jeonOutput)) {\r\n        try {\r\n          // Try to parse as JSON first for better formatting\r\n          const parsed = JSON.parse($$(jeonOutput))\r\n          const formatted = JSON.stringify(parsed, null, 2)\r\n          jeonElement.innerHTML = Prism.highlight(formatted, Prism.languages.json, 'json')\r\n        } catch {\r\n          // If not valid JSON, highlight as plain text\r\n          try {\r\n            jeonElement.innerHTML = Prism.highlight($$(jeonOutput), Prism.languages.json, 'json')\r\n          } catch (e) {\r\n            // Fallback to plain text if highlighting fails\r\n            jeonElement.textContent = $$(jeonOutput)\r\n          }\r\n        }\r\n      }\r\n    }, 0)\r\n  }\r\n\r\n  const convertJeonToTs = () => {\r\n    try {\r\n      console.log('JSON5:', JSON5)\r\n      console.log('typeof JSON5:', typeof JSON5)\r\n      console.log('JSON5.stringify:', JSON5.stringify)\r\n      console.log('JSON5.parse:', JSON5.parse)\r\n      console.log('typeof JSON5.stringify:', typeof JSON5.stringify)\r\n      console.log('typeof JSON5.parse:', typeof JSON5.parse)\r\n\r\n      // Create a JSON-like interface for JSON5\r\n      const JSON5Wrapper = {\r\n        stringify: JSON5.stringify,\r\n        parse: JSON5.parse,\r\n        [Symbol.toStringTag]: 'JSON'\r\n      }\r\n\r\n      console.log('JSON5Wrapper created:', JSON5Wrapper)\r\n      console.log('typeof JSON5Wrapper.parse:', typeof JSON5Wrapper.parse)\r\n      console.log('typeof JSON5.parse:', typeof JSON5.parse)\r\n\r\n      const jeon = useJSON5() ? JSON5.parse($$(jeonInput)) : JSON.parse($$(jeonInput))\r\n      // Pass the JSON implementation to jeon2js\r\n      const code = jeon2js(jeon, { json: useJSON5() ? JSON5Wrapper : JSON })\r\n      tsOutput(code)\r\n      // Highlight code blocks after conversion\r\n      highlightCodeBlocks()\r\n      updateOutputHighlighting()\r\n    } catch (error: any) {\r\n      console.error('convertJeonToTs error:', error)\r\n      tsOutput(`Error: ${error.message}`)\r\n    }\r\n  }\r\n\r\n  const convertTsToJeon = () => {\r\n    try {\r\n      console.log('JSON5:', JSON5)\r\n      console.log('typeof JSON5:', typeof JSON5)\r\n      console.log('JSON5.stringify:', JSON5.stringify)\r\n      console.log('JSON5.parse:', JSON5.parse)\r\n      console.log('typeof JSON5.stringify:', typeof JSON5.stringify)\r\n      console.log('typeof JSON5.parse:', typeof JSON5.parse)\r\n\r\n      // Create a JSON-like interface for JSON5\r\n      const JSON5Wrapper = {\r\n        stringify: JSON5.stringify,\r\n        parse: JSON5.parse,\r\n        [Symbol.toStringTag]: 'JSON'\r\n      }\r\n\r\n      console.log('JSON5Wrapper created:', JSON5Wrapper)\r\n      console.log('typeof JSON5Wrapper.stringify:', typeof JSON5Wrapper.stringify)\r\n      console.log('typeof JSON5Wrapper.parse:', typeof JSON5Wrapper.parse)\r\n\r\n      const jeon = js2jeon($$(tsInput) as string, { json: useJSON5() ? JSON5Wrapper : JSON })\r\n      const formatted = useJSON5() ? JSON5Wrapper.stringify(jeon, null, 2) : JSON.stringify(jeon, null, 2)\r\n      jeonOutput(formatted)\r\n      // Highlight code blocks after conversion\r\n      highlightCodeBlocks()\r\n      updateOutputHighlighting()\r\n    } catch (error: any) {\r\n      console.error('convertTsToJeon error:', error)\r\n      jeonOutput(`Error: ${error.message}`)\r\n    }\r\n  }\r\n\r\n  // Initialize with conversion and highlighting\r\n  convertJeonToTs()\r\n\r\n  // Helper functions to display literal curly braces\r\n  const jeonExample1 = '{ \"function a(name)\": [ { \"return\": { \"+\": [\"Hello, \", \"@name\"] } } ] }'\r\n  const tsExample1 = 'function a(name) { return (\"Hello, \" + name) }'\r\n  const jeonExample2 = '{ \"@\": { \"count\": 0, \"message\": \"Hello World\" } }'\r\n  const tsExample2 = 'let count = 0; let message = \"Hello World\"'\r\n  const jeonExample3 = '{ \"(x) =>\": { \"*\": [\"@x\", 2] } }'\r\n  const tsExample3 = '(x) => { return (x * 2); }'\r\n\r\n  // New examples for enhanced features\r\n  const jeonExample4 = `{\r\n  \"function* countUpTo(max)\": [\r\n    { \"yield\": 1 },\r\n    { \"yield\": 2 },\r\n    { \"return\": \"@max\" }\r\n  ]\r\n}`\r\n  const tsExample4 = `function* countUpTo(max) {\r\n  yield 1;\r\n  yield 2;\r\n  return max;\r\n}`\r\n\r\n  const jeonExample5 = `{\r\n  \"async function fetchData()\": [\r\n    {\r\n      \"@\": {\r\n        \"response\": {\r\n          \"await\": {\r\n            \"fetch()\": [\"/api/data\"]\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"return\": \"@response\"\r\n    }\r\n  ]\r\n}`\r\n  const tsExample5 = `async function fetchData() {\r\n  const response = await fetch(\"/api/data\");\r\n  return response;\r\n}`\r\n\r\n  const jeonExample6 = `{\r\n  \"@\": {\r\n    \"element\": {\r\n      \"<div>\": {\r\n        \"className\": \"container\",\r\n        \"children\": [\r\n          {\r\n            \"<h1>\": {\r\n              \"children\": [\"Hello World\"]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}`\r\n  const tsExample6 = `let element = <div className=\"container\">\r\n  <h1>Hello World</h1>\r\n</div>;`\r\n\r\n  const jeonExample7 = `{\r\n  \"@\": {\r\n    \"a\": [\r\n      1,\r\n      2,\r\n      {\r\n        \"...\": [3, 4]\r\n      },\r\n      5\r\n    ]\r\n  }\r\n}`\r\n  const tsExample7 = `let a = [1, 2, ...[3, 4], 5];`\r\n\r\n  // New example for class declaration\r\n  const jeonExample8 = `{\r\n  \"class Person\": {\r\n    \"constructor(name)\": {\r\n      \"function(name)\": [\r\n        {\r\n          \"=\": [\r\n            {\r\n              \".\": [\r\n                \"@this\",\r\n                \"name\"\r\n              ]\r\n            },\r\n            \"@name\"\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    \"greet()\": {\r\n      \"function()\": [\r\n        {\r\n          \"return\": {\r\n            \"+\": [\r\n              \"Hello, \",\r\n              {\r\n                \".\": [\r\n                  \"@this\",\r\n                  \"name\"\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}`\r\n  const tsExample8 = `class Person {\r\n  constructor(name) {\r\n  this.name = name\r\n};\r\n  greet() {\r\n  return (\"Hello, \" + this.name)\r\n}\r\n}`\r\n\r\n  // New example for assigned class\r\n  const jeonExample9 = `{\r\n  \"@@\": {\r\n    \"Animal\": {\r\n      \"class\": {\r\n        \"constructor(species)\": {\r\n          \"function(species)\": [\r\n            {\r\n              \"=\": [\r\n                {\r\n                  \".\": [\r\n                    \"@this\",\r\n                    \"species\"\r\n                  ]\r\n                },\r\n                \"@species\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"getType()\": {\r\n          \"function()\": [\r\n            {\r\n              \"return\": {\r\n                \".\": [\r\n                  \"@this\",\r\n                  \"species\"\r\n                ]\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`\r\n  const tsExample9 = `const Animal = class {\r\n  constructor(species) {\r\n  this.species = species\r\n};\r\n  getType() {\r\n  return this.species\r\n}\r\n}`\r\n\r\n  // New example for object spread operator with JSON5\r\n  const jeonExample10 = `{\r\n  \"@\": {\r\n    \"a\": {\r\n      \"1\": 2,\r\n      \"2\": 3,\r\n      \"...\": {\r\n        \"3\": 3,\r\n        \"4\": 4\r\n      },\r\n      \"5\": 5\r\n    }\r\n  }\r\n}`\r\n  const tsExample10 = `let a = {1:2, 2:3, ...{3:3, 4:4}, 5:5};`\r\n\r\n  return (\r\n    <div class=\"max-w-6xl mx-auto p-5 bg-gray-800 text-white\">\r\n      <div class=\"bg-white rounded-lg shadow-lg p-6 my-6 text-gray-800\">\r\n        <h1 class=\"text-3xl font-bold text-center text-gray-800 mb-4\">JEON Converter Demo</h1>\r\n        <p class=\"text-center text-gray-600 mb-8\">A bidirectional converter between JEON (JSON-based Executable Object Notation) and TypeScript/JavaScript.</p>\r\n\r\n        <div class=\"flex items-center mb-4\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"useJSON5\"\r\n            checked={useJSON5()}\r\n            onChange={(e: any) => useJSON5(e.target.checked)}\r\n            class=\"mr-2\"\r\n          />\r\n          <label for=\"useJSON5\" class=\"text-gray-700\">\r\n            Use JSON5 (allows comments, trailing commas, etc.)\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"flex flex-col md:flex-row gap-6 mb-8\">\r\n          <div class=\"flex-1 flex flex-col\">\r\n            <h2 class=\"text-xl font-semibold text-gray-800 mb-3\">JEON to TypeScript</h2>\r\n            <pre\r\n              id=\"jeon-input\"\r\n              contentEditable\r\n              onInput={handleJeonInput}\r\n              class=\"w-full h-80 font-mono text-sm p-3 border border-gray-300 rounded-md resize-y text-gray-800 overflow-auto bg-white editable-div\"\r\n            >{$$(jeonInput)}</pre>\r\n            <button\r\n              onClick={convertJeonToTs}\r\n              class=\"mt-3 px-5 py-2.5 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition duration-200\"\r\n            >\r\n              Convert to TypeScript\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"flex-1 flex flex-col\">\r\n            <h2 class=\"text-xl font-semibold text-gray-800 mb-3\">TypeScript to JEON</h2>\r\n            <pre\r\n              id=\"ts-input\"\r\n              contentEditable\r\n              onInput={handleTsInput}\r\n              class=\"w-full h-80 font-mono text-sm p-3 border border-gray-300 rounded-md resize-y text-gray-800 overflow-auto bg-white editable-div\"\r\n            >{$$(tsInput)}</pre>\r\n            <button\r\n              onClick={convertTsToJeon}\r\n              class=\"mt-3 px-5 py-2.5 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition duration-200\"\r\n            >\r\n              Convert to JEON\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex flex-col md:flex-row gap-6\">\r\n          <div class=\"flex-1 flex flex-col\">\r\n            <h2 class=\"text-xl font-semibold text-gray-800 mb-3\">TypeScript Output</h2>\r\n            <pre\r\n              id=\"ts-output\"\r\n              class=\"w-full h-80 font-mono text-sm p-3 border border-gray-300 rounded-md resize-y bg-gray-50 text-gray-800 overflow-auto output-div\"\r\n            ><code id=\"ts-output-code\">{$$(tsOutput)}</code></pre>\r\n          </div>\r\n\r\n          <div class=\"flex-1 flex flex-col\">\r\n            <h2 class=\"text-xl font-semibold text-gray-800 mb-3\">JEON Output</h2>\r\n            <pre\r\n              id=\"jeon-output\"\r\n              class=\"w-full h-80 font-mono text-sm p-3 border border-gray-300 rounded-md resize-y bg-gray-50 text-gray-800 overflow-auto output-div\"\r\n            ><code id=\"jeon-output-code\">{$$(jeonOutput)}</code></pre>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mt-10\">\r\n          <h2 class=\"text-2xl font-bold text-gray-800 mb-5\">Example Conversions</h2>\r\n\r\n          <div class=\"mb-5 p-5 bg-gray-50 border-l-4 border-blue-500 rounded-r\">\r\n            <h3 class=\"text-lg font-semibold text-blue-600 mb-3\">1. Function Declaration</h3>\r\n            <p class=\"font-medium mb-2\">JEON:</p>\r\n            <pre class=\"bg-gray-100 p-3 rounded mb-3 text-sm overflow-x-auto language-json\"><code class=\"language-json\">{jeonExample1}</code></pre>\r\n            <p class=\"font-medium mb-2\">TypeScript:</p>\r\n            <pre class=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto language-typescript\"><code class=\"language-typescript\">{tsExample1}</code></pre>\r\n          </div>\r\n\r\n          <div class=\"mb-5 p-5 bg-gray-50 border-l-4 border-blue-500 rounded-r\">\r\n            <h3 class=\"text-lg font-semibold text-blue-600 mb-3\">2. Variable Declaration</h3>\r\n            <p class=\"font-medium mb-2\">JEON:</p>\r\n            <pre class=\"bg-gray-100 p-3 rounded mb-3 text-sm overflow-x-auto language-json\"><code class=\"language-json\">{jeonExample2}</code></pre>\r\n            <p class=\"font-medium mb-2\">TypeScript:</p>\r\n            <pre class=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto language-typescript\"><code class=\"language-typescript\">{tsExample2}</code></pre>\r\n          </div>\r\n\r\n          <div class=\"mb-5 p-5 bg-gray-50 border-l-4 border-blue-500 rounded-r\">\r\n            <h3 class=\"text-lg font-semibold text-blue-600 mb-3\">3. Arrow Function</h3>\r\n            <p class=\"font-medium mb-2\">JEON:</p>\r\n            <pre class=\"bg-gray-100 p-3 rounded mb-3 text-sm overflow-x-auto language-json\"><code class=\"language-json\">{jeonExample3}</code></pre>\r\n            <p class=\"font-medium mb-2\">TypeScript:</p>\r\n            <pre class=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto language-typescript\"><code class=\"language-typescript\">{tsExample3}</code></pre>\r\n          </div>\r\n\r\n          <div class=\"mb-5 p-5 bg-gray-50 border-l-4 border-green-500 rounded-r\">\r\n            <h3 class=\"text-lg font-semibold text-green-600 mb-3\">4. Generator Function</h3>\r\n            <p class=\"font-medium mb-2\">JEON:</p>\r\n            <div class=\"collapsible-code\">\r\n              <button class=\"collapsible-btn text-blue-600 hover:text-blue-800 font-medium flex items-center\">\r\n                <span class=\"mr-2\">▼</span> Show JEON\r\n              </button>\r\n              <div class=\"collapsible-content hidden\">\r\n                <pre class=\"bg-gray-100 p-3 rounded mb-3 text-sm overflow-x-auto language-json\"><code class=\"language-json\">{jeonExample4}</code></pre>\r\n              </div>\r\n            </div>\r\n            <p class=\"font-medium mb-2\">TypeScript:</p>\r\n            <pre class=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto language-typescript\"><code class=\"language-typescript\">{tsExample4}</code></pre>\r\n          </div>\r\n\r\n          <div class=\"mb-5 p-5 bg-gray-50 border-l-4 border-green-500 rounded-r\">\r\n            <h3 class=\"text-lg font-semibold text-green-600 mb-3\">5. Async/Await</h3>\r\n            <p class=\"font-medium mb-2\">JEON:</p>\r\n            <div class=\"collapsible-code\">\r\n              <button class=\"collapsible-btn text-blue-600 hover:text-blue-800 font-medium flex items-center\">\r\n                <span class=\"mr-2\">▼</span> Show JEON\r\n              </button>\r\n              <div class=\"collapsible-content hidden\">\r\n                <pre class=\"bg-gray-100 p-3 rounded mb-3 text-sm overflow-x-auto language-json\"><code class=\"language-json\">{jeonExample5}</code></pre>\r\n              </div>\r\n            </div>\r\n            <p class=\"font-medium mb-2\">TypeScript:</p>\r\n            <pre class=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto language-typescript\"><code class=\"language-typescript\">{tsExample5}</code></pre>\r\n          </div>\r\n\r\n          <div class=\"mb-5 p-5 bg-gray-50 border-l-4 border-green-500 rounded-r\">\r\n            <h3 class=\"text-lg font-semibold text-green-600 mb-3\">6. JSX Elements</h3>\r\n            <p class=\"font-medium mb-2\">JEON:</p>\r\n            <div class=\"collapsible-code\">\r\n              <button class=\"collapsible-btn text-blue-600 hover:text-blue-800 font-medium flex items-center\">\r\n                <span class=\"mr-2\">▼</span> Show JEON\r\n              </button>\r\n              <div class=\"collapsible-content hidden\">\r\n                <pre class=\"bg-gray-100 p-3 rounded mb-3 text-sm overflow-x-auto language-json\"><code class=\"language-json\">{jeonExample6}</code></pre>\r\n              </div>\r\n            </div>\r\n            <p class=\"font-medium mb-2\">TypeScript:</p>\r\n            <pre class=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto language-typescript\"><code class=\"language-typescript\">{tsExample6}</code></pre>\r\n          </div>\r\n\r\n          <div class=\"mb-5 p-5 bg-gray-50 border-l-4 border-green-500 rounded-r\">\r\n            <h3 class=\"text-lg font-semibold text-green-600 mb-3\">7. Array Spread Operator</h3>\r\n            <p class=\"font-medium mb-2\">JEON:</p>\r\n            <div class=\"collapsible-code\">\r\n              <button class=\"collapsible-btn text-blue-600 hover:text-blue-800 font-medium flex items-center\">\r\n                <span class=\"mr-2\">▼</span> Show JEON\r\n              </button>\r\n              <div class=\"collapsible-content hidden\">\r\n                <pre class=\"bg-gray-100 p-3 rounded mb-3 text-sm overflow-x-auto language-json\"><code class=\"language-json\">{jeonExample7}</code></pre>\r\n              </div>\r\n            </div>\r\n            <p class=\"font-medium mb-2\">TypeScript:</p>\r\n            <pre class=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto language-typescript\"><code class=\"language-typescript\">{tsExample7}</code></pre>\r\n          </div>\r\n\r\n          <div class=\"mb-5 p-5 bg-gray-50 border-l-4 border-purple-500 rounded-r\">\r\n            <h3 class=\"text-lg font-semibold text-purple-600 mb-3\">8. Class Declaration</h3>\r\n            <p class=\"font-medium mb-2\">JEON:</p>\r\n            <div class=\"collapsible-code\">\r\n              <button class=\"collapsible-btn text-blue-600 hover:text-blue-800 font-medium flex items-center\">\r\n                <span class=\"mr-2\">▼</span> Show JEON\r\n              </button>\r\n              <div class=\"collapsible-content hidden\">\r\n                <pre class=\"bg-gray-100 p-3 rounded mb-3 text-sm overflow-x-auto language-json\"><code class=\"language-json\">{jeonExample8}</code></pre>\r\n              </div>\r\n            </div>\r\n            <p class=\"font-medium mb-2\">TypeScript:</p>\r\n            <div class=\"collapsible-code\">\r\n              <button class=\"collapsible-btn text-blue-600 hover:text-blue-800 font-medium flex items-center\">\r\n                <span class=\"mr-2\">▼</span> Show TypeScript\r\n              </button>\r\n              <div class=\"collapsible-content hidden\">\r\n                <pre class=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto language-typescript\"><code class=\"language-typescript\">{tsExample8}</code></pre>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-5 p-5 bg-gray-50 border-l-4 border-purple-500 rounded-r\">\r\n            <h3 class=\"text-lg font-semibold text-purple-600 mb-3\">9. Assigned Class</h3>\r\n            <p class=\"font-medium mb-2\">JEON:</p>\r\n            <div class=\"collapsible-code\">\r\n              <button class=\"collapsible-btn text-blue-600 hover:text-blue-800 font-medium flex items-center\">\r\n                <span class=\"mr-2\">▼</span> Show JEON\r\n              </button>\r\n              <div class=\"collapsible-content hidden\">\r\n                <pre class=\"bg-gray-100 p-3 rounded mb-3 text-sm overflow-x-auto language-json\"><code class=\"language-json\">{jeonExample9}</code></pre>\r\n              </div>\r\n            </div>\r\n            <p class=\"font-medium mb-2\">TypeScript:</p>\r\n            <div class=\"collapsible-code\">\r\n              <button class=\"collapsible-btn text-blue-600 hover:text-blue-800 font-medium flex items-center\">\r\n                <span class=\"mr-2\">▼</span> Show TypeScript\r\n              </button>\r\n              <div class=\"collapsible-content hidden\">\r\n                <pre class=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto language-typescript\"><code class=\"language-typescript\">{tsExample9}</code></pre>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"p-5 bg-gray-50 border-l-4 border-yellow-500 rounded-r\">\r\n            <h3 class=\"text-lg font-semibold text-yellow-600 mb-3\">10. Object Spread Operator (JSON5)</h3>\r\n            <p class=\"font-medium mb-2\">JEON:</p>\r\n            <div class=\"collapsible-code\">\r\n              <button class=\"collapsible-btn text-blue-600 hover:text-blue-800 font-medium flex items-center\">\r\n                <span class=\"mr-2\">▼</span> Show JEON\r\n              </button>\r\n              <div class=\"collapsible-content hidden\">\r\n                <pre class=\"bg-gray-100 p-3 rounded mb-3 text-sm overflow-x-auto language-json\"><code class=\"language-json\">{jeonExample10}</code></pre>\r\n              </div>\r\n            </div>\r\n            <p class=\"font-medium mb-2\">TypeScript:</p>\r\n            <pre class=\"bg-gray-100 p-3 rounded text-sm overflow-x-auto language-typescript\"><code class=\"language-typescript\">{tsExample10}</code></pre>\r\n            <p class=\"text-sm text-gray-600 mt-2\">Note: This feature requires JSON5 support to be enabled</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Add collapsible functionality\r\nconst initCollapsible = () => {\r\n  // Add collapsible functionality\r\n  const collapsibleBtns = document.querySelectorAll('.collapsible-btn')\r\n  collapsibleBtns.forEach(btn => {\r\n    btn.addEventListener('click', function () {\r\n      const content = this.nextElementSibling\r\n      const icon = this.querySelector('span')\r\n      const textNode = this.childNodes[this.childNodes.length - 1] // The last text node\r\n\r\n      if (content.classList.contains('hidden')) {\r\n        content.classList.remove('hidden')\r\n        icon.textContent = '▲'\r\n        // Update button text based on what it's showing\r\n        if (textNode.textContent.includes('JEON')) {\r\n          textNode.textContent = ' Hide JEON'\r\n        } else if (textNode.textContent.includes('TypeScript')) {\r\n          textNode.textContent = ' Hide TypeScript'\r\n        } else {\r\n          textNode.textContent = ' Hide Output'\r\n        }\r\n      } else {\r\n        content.classList.add('hidden')\r\n        icon.textContent = '▼'\r\n        // Update button text based on what it's hiding\r\n        if (textNode.textContent.includes('JEON')) {\r\n          textNode.textContent = ' Show JEON'\r\n        } else if (textNode.textContent.includes('TypeScript')) {\r\n          textNode.textContent = ' Show TypeScript'\r\n        } else {\r\n          textNode.textContent = ' Show Output'\r\n        }\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nrender(<App />, document.getElementById('app'))"],"names":["stack","_a","_b","key","set","observable","root","current","key2","_a2","stack2","assign","isArray","isObject","style","data","jsx","isSVG","register","SYMBOL_SUSPENSE","options","isFunction","source","isArray$1","isFunction$1","c","isObject$1","visitFunctionDeclaration","visitVariableDeclaration","entries","visitorRegistry","pos","TokenType","Position","line","n","SourceLocation","offset","token","Parser","ref","parse","literal","DestructuringErrors","context","TokContext","Scope","Node","BranchID","self","RegExpValidationState","unicode","Token","global","this","exports","astralIdentifierCodes","astralIdentifierStartCodes","nonASCIIidentifierChars","nonASCIIidentifierStartChars","reservedWords","ecma5AndLessKeywords","keywords$1","keywordRelationalOperator","nonASCIIidentifierStart","nonASCIIidentifier","isInAstralSet","i","isIdentifierStart","isIdentifierChar","binop","beforeExpr","startsExpr","keywords","kw","types$1","lineBreak","lineBreakG","isNewLine","nextLineBreak","nonASCIIwhitespace","skipWhiteSpace","hasOwnProperty","toString","hasOwn","regexpCache","wordsRegexp","codePointToString","loneSurrogate","getLineInfo","defaultOptions","warnedAboutEcmaVersion","getOptions","pushComment","SCOPE_TOP","SCOPE_FUNCTION","SCOPE_ASYNC","SCOPE_GENERATOR","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS_STATIC_BLOCK","SCOPE_CLASS_FIELD_INIT","SCOPE_VAR","functionFlags","BIND_NONE","BIND_VAR","BIND_LEXICAL","BIND_FUNCTION","BIND_SIMPLE_CATCH","BIND_OUTSIDE","prototypeAccessors","extend","parseExpressionAt","tokenizer","pp$9","pp$8","list","loopLabel","switchLabel","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","empty$1","FUNC_NULLABLE_ID","isPrivateNameConflicted","ecmaVersion","checkKeyName","pp$7","types","pp$6","pp$5","isLocalVariableAccess","isPrivateFieldAccess","empty","pp$4","pp$3","pp$2","finishNodeAt","scriptValuesAddedInUnicode","ecma9BinaryProperties","ecma10BinaryProperties","ecma11BinaryProperties","ecma12BinaryProperties","ecma13BinaryProperties","ecma14BinaryProperties","unicodeBinaryProperties","ecma14BinaryPropertiesOfStrings","unicodeBinaryPropertiesOfStrings","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","ecma11ScriptValues","ecma12ScriptValues","ecma13ScriptValues","ecma14ScriptValues","unicodeScriptValues","buildUnicodeData","pp$1","separatedFrom","sibling","reset","raise","at","nextIndex","lookahead","advance","eat","eatChars","hasProp","isRegularExpressionModifier","isSyntaxCharacter","isRegExpIdentifierStart","isRegExpIdentifierPart","isDecimalDigit","isControlLetter","isValidUnicode","CharSetNone","CharSetOk","CharSetString","isCharacterClassEscape","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isOctalDigit","isClassSetReservedDoublePunctuatorCharacter","isClassSetSyntaxCharacter","isClassSetReservedPunctuator","isHexDigit","hexToInt","pp","stringToNumber","stringToBigInt","INVALID_TEMPLATE_ESCAPE_ERROR","version","require$$0","acorn","acornJsx","require$$1","acorn.Parser","buffer","stringify","value","Prism","_self","lang","newToken","$","$$","JSON5"],"mappings":"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,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,MAAM,GAAG,GAAG,IAAI,OAAO,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,MAAM,GAAG,KAAK,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,MAAM,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,QAAQ,GAAG;AAGzoC,IAAI,6BAA6B,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK,MAAM,IAAI,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,KAAK,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,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK,MAAM,IAAI,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG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","x_google_ignoreList":[0,1,2,3,4,5,6,7,26,27,28,29,73,74,75,76,77]}